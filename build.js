"format register";
System.register("npm:angular2@2.0.0-alpha.24/src/facade/lang", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var _global = typeof window === 'undefined' ? global : window;
  exports.global = _global;
  exports.__esModule = true;
  exports.Type = Function;
  var BaseException = (function(_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      _super.call(this, message);
      this.message = message;
      this.stack = (new Error()).stack;
    }
    BaseException.prototype.toString = function() {
      return this.message;
    };
    return BaseException;
  })(Error);
  exports.BaseException = BaseException;
  exports.Math = _global.Math;
  exports.Date = _global.Date;
  var assertionsEnabled_ = typeof assert !== 'undefined';
  var int;
  exports.int = int;
  if (assertionsEnabled_) {
    _global.assert = assert;
    int = assert.define('int', function(value) {
      return typeof value === 'number' && value % 1 === 0;
    });
  } else {
    int = {};
    _global.assert = function() {};
  }
  function CONST_EXPR(expr) {
    return expr;
  }
  exports.CONST_EXPR = CONST_EXPR;
  function CONST() {
    return function(target) {
      return target;
    };
  }
  exports.CONST = CONST;
  var ABSTRACT = (function() {
    function ABSTRACT() {}
    return ABSTRACT;
  })();
  exports.ABSTRACT = ABSTRACT;
  var IMPLEMENTS = (function() {
    function IMPLEMENTS() {}
    return IMPLEMENTS;
  })();
  exports.IMPLEMENTS = IMPLEMENTS;
  function isPresent(obj) {
    return obj !== undefined && obj !== null;
  }
  exports.isPresent = isPresent;
  function isBlank(obj) {
    return obj === undefined || obj === null;
  }
  exports.isBlank = isBlank;
  function isString(obj) {
    return typeof obj === "string";
  }
  exports.isString = isString;
  function isFunction(obj) {
    return typeof obj === "function";
  }
  exports.isFunction = isFunction;
  function isType(obj) {
    return isFunction(obj);
  }
  exports.isType = isType;
  function stringify(token) {
    if (typeof token === 'string') {
      return token;
    }
    if (token === undefined || token === null) {
      return '' + token;
    }
    if (token.name) {
      return token.name;
    }
    return token.toString();
  }
  exports.stringify = stringify;
  var StringWrapper = (function() {
    function StringWrapper() {}
    StringWrapper.fromCharCode = function(code) {
      return String.fromCharCode(code);
    };
    StringWrapper.charCodeAt = function(s, index) {
      return s.charCodeAt(index);
    };
    StringWrapper.split = function(s, regExp) {
      return s.split(regExp);
    };
    StringWrapper.equals = function(s, s2) {
      return s === s2;
    };
    StringWrapper.replace = function(s, from, replace) {
      return s.replace(from, replace);
    };
    StringWrapper.replaceAll = function(s, from, replace) {
      return s.replace(from, replace);
    };
    StringWrapper.toUpperCase = function(s) {
      return s.toUpperCase();
    };
    StringWrapper.toLowerCase = function(s) {
      return s.toLowerCase();
    };
    StringWrapper.startsWith = function(s, start) {
      return s.startsWith(start);
    };
    StringWrapper.substring = function(s, start, end) {
      if (end === void 0) {
        end = null;
      }
      return s.substring(start, end === null ? undefined : end);
    };
    StringWrapper.replaceAllMapped = function(s, from, cb) {
      return s.replace(from, function() {
        var matches = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          matches[_i - 0] = arguments[_i];
        }
        matches.splice(-2, 2);
        return cb(matches);
      });
    };
    StringWrapper.contains = function(s, substr) {
      return s.indexOf(substr) != -1;
    };
    return StringWrapper;
  })();
  exports.StringWrapper = StringWrapper;
  var StringJoiner = (function() {
    function StringJoiner(parts) {
      if (parts === void 0) {
        parts = [];
      }
      this.parts = parts;
    }
    StringJoiner.prototype.add = function(part) {
      this.parts.push(part);
    };
    StringJoiner.prototype.toString = function() {
      return this.parts.join("");
    };
    return StringJoiner;
  })();
  exports.StringJoiner = StringJoiner;
  var NumberParseError = (function(_super) {
    __extends(NumberParseError, _super);
    function NumberParseError(message) {
      _super.call(this);
      this.message = message;
    }
    NumberParseError.prototype.toString = function() {
      return this.message;
    };
    return NumberParseError;
  })(BaseException);
  exports.NumberParseError = NumberParseError;
  var NumberWrapper = (function() {
    function NumberWrapper() {}
    NumberWrapper.toFixed = function(n, fractionDigits) {
      return n.toFixed(fractionDigits);
    };
    NumberWrapper.equal = function(a, b) {
      return a === b;
    };
    NumberWrapper.parseIntAutoRadix = function(text) {
      var result = parseInt(text);
      if (isNaN(result)) {
        throw new NumberParseError("Invalid integer literal when parsing " + text);
      }
      return result;
    };
    NumberWrapper.parseInt = function(text, radix) {
      if (radix == 10) {
        if (/^(\-|\+)?[0-9]+$/.test(text)) {
          return parseInt(text, radix);
        }
      } else if (radix == 16) {
        if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
          return parseInt(text, radix);
        }
      } else {
        var result = parseInt(text, radix);
        if (!isNaN(result)) {
          return result;
        }
      }
      throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
    };
    NumberWrapper.parseFloat = function(text) {
      return parseFloat(text);
    };
    Object.defineProperty(NumberWrapper, "NaN", {
      get: function() {
        return NaN;
      },
      enumerable: true,
      configurable: true
    });
    NumberWrapper.isNaN = function(value) {
      return isNaN(value);
    };
    NumberWrapper.isInteger = function(value) {
      return Number.isInteger(value);
    };
    return NumberWrapper;
  })();
  exports.NumberWrapper = NumberWrapper;
  exports.RegExp = _global.RegExp;
  var RegExpWrapper = (function() {
    function RegExpWrapper() {}
    RegExpWrapper.create = function(regExpStr, flags) {
      if (flags === void 0) {
        flags = '';
      }
      flags = flags.replace(/g/g, '');
      return new _global.RegExp(regExpStr, flags + 'g');
    };
    RegExpWrapper.firstMatch = function(regExp, input) {
      regExp.lastIndex = 0;
      return regExp.exec(input);
    };
    RegExpWrapper.matcher = function(regExp, input) {
      regExp.lastIndex = 0;
      return {
        re: regExp,
        input: input
      };
    };
    return RegExpWrapper;
  })();
  exports.RegExpWrapper = RegExpWrapper;
  var RegExpMatcherWrapper = (function() {
    function RegExpMatcherWrapper() {}
    RegExpMatcherWrapper.next = function(matcher) {
      return matcher.re.exec(matcher.input);
    };
    return RegExpMatcherWrapper;
  })();
  exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
  var FunctionWrapper = (function() {
    function FunctionWrapper() {}
    FunctionWrapper.apply = function(fn, posArgs) {
      return fn.apply(null, posArgs);
    };
    return FunctionWrapper;
  })();
  exports.FunctionWrapper = FunctionWrapper;
  function looseIdentical(a, b) {
    return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
  }
  exports.looseIdentical = looseIdentical;
  function getMapKey(value) {
    return value;
  }
  exports.getMapKey = getMapKey;
  function normalizeBlank(obj) {
    return isBlank(obj) ? null : obj;
  }
  exports.normalizeBlank = normalizeBlank;
  function isJsObject(o) {
    return o !== null && (typeof o === "function" || typeof o === "object");
  }
  exports.isJsObject = isJsObject;
  function assertionsEnabled() {
    return assertionsEnabled_;
  }
  exports.assertionsEnabled = assertionsEnabled;
  function print(obj) {
    if (obj instanceof Error) {
      console.log(obj.stack);
    } else {
      console.log(obj);
    }
  }
  exports.print = print;
  var Json = (function() {
    function Json() {}
    Json.parse = function(s) {
      return _global.JSON.parse(s);
    };
    Json.stringify = function(data) {
      return _global.JSON.stringify(data, null, 2);
    };
    return Json;
  })();
  exports.Json = Json;
  var DateWrapper = (function() {
    function DateWrapper() {}
    DateWrapper.fromMillis = function(ms) {
      return new exports.Date(ms);
    };
    DateWrapper.toMillis = function(date) {
      return date.getTime();
    };
    DateWrapper.now = function() {
      return new exports.Date();
    };
    DateWrapper.toJson = function(date) {
      return date.toJSON();
    };
    return DateWrapper;
  })();
  exports.DateWrapper = DateWrapper;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  exports.DOM;
  function setRootDomAdapter(adapter) {
    exports.DOM = adapter;
  }
  exports.setRootDomAdapter = setRootDomAdapter;
  function _abstract() {
    return new lang_1.BaseException('This method is abstract');
  }
  var DomAdapter = (function() {
    function DomAdapter() {}
    DomAdapter.prototype.logError = function(error) {
      throw _abstract();
    };
    Object.defineProperty(DomAdapter.prototype, "attrToPropMap", {
      get: function() {
        throw _abstract();
      },
      enumerable: true,
      configurable: true
    });
    DomAdapter.prototype.parse = function(templateHtml) {
      throw _abstract();
    };
    DomAdapter.prototype.query = function(selector) {
      throw _abstract();
    };
    DomAdapter.prototype.querySelector = function(el, selector) {
      throw _abstract();
    };
    DomAdapter.prototype.querySelectorAll = function(el, selector) {
      throw _abstract();
    };
    DomAdapter.prototype.on = function(el, evt, listener) {
      throw _abstract();
    };
    DomAdapter.prototype.onAndCancel = function(el, evt, listener) {
      throw _abstract();
    };
    DomAdapter.prototype.dispatchEvent = function(el, evt) {
      throw _abstract();
    };
    DomAdapter.prototype.createMouseEvent = function(eventType) {
      throw _abstract();
    };
    DomAdapter.prototype.createEvent = function(eventType) {
      throw _abstract();
    };
    DomAdapter.prototype.getInnerHTML = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.getOuterHTML = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.nodeName = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.nodeValue = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.type = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.content = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.firstChild = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.nextSibling = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.parentElement = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.childNodes = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.childNodesAsList = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.clearNodes = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.appendChild = function(el, node) {
      throw _abstract();
    };
    DomAdapter.prototype.removeChild = function(el, node) {
      throw _abstract();
    };
    DomAdapter.prototype.replaceChild = function(el, newNode, oldNode) {
      throw _abstract();
    };
    DomAdapter.prototype.remove = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.insertBefore = function(el, node) {
      throw _abstract();
    };
    DomAdapter.prototype.insertAllBefore = function(el, nodes) {
      throw _abstract();
    };
    DomAdapter.prototype.insertAfter = function(el, node) {
      throw _abstract();
    };
    DomAdapter.prototype.setInnerHTML = function(el, value) {
      throw _abstract();
    };
    DomAdapter.prototype.getText = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.setText = function(el, value) {
      throw _abstract();
    };
    DomAdapter.prototype.getValue = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.setValue = function(el, value) {
      throw _abstract();
    };
    DomAdapter.prototype.getChecked = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.setChecked = function(el, value) {
      throw _abstract();
    };
    DomAdapter.prototype.createTemplate = function(html) {
      throw _abstract();
    };
    DomAdapter.prototype.createElement = function(tagName, doc) {
      if (doc === void 0) {
        doc = null;
      }
      throw _abstract();
    };
    DomAdapter.prototype.createTextNode = function(text, doc) {
      if (doc === void 0) {
        doc = null;
      }
      throw _abstract();
    };
    DomAdapter.prototype.createScriptTag = function(attrName, attrValue, doc) {
      if (doc === void 0) {
        doc = null;
      }
      throw _abstract();
    };
    DomAdapter.prototype.createStyleElement = function(css, doc) {
      if (doc === void 0) {
        doc = null;
      }
      throw _abstract();
    };
    DomAdapter.prototype.createShadowRoot = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.getShadowRoot = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.getHost = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.getDistributedNodes = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.clone = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.hasProperty = function(element, name) {
      throw _abstract();
    };
    DomAdapter.prototype.getElementsByClassName = function(element, name) {
      throw _abstract();
    };
    DomAdapter.prototype.getElementsByTagName = function(element, name) {
      throw _abstract();
    };
    DomAdapter.prototype.classList = function(element) {
      throw _abstract();
    };
    DomAdapter.prototype.addClass = function(element, classname) {
      throw _abstract();
    };
    DomAdapter.prototype.removeClass = function(element, classname) {
      throw _abstract();
    };
    DomAdapter.prototype.hasClass = function(element, classname) {
      throw _abstract();
    };
    DomAdapter.prototype.setStyle = function(element, stylename, stylevalue) {
      throw _abstract();
    };
    DomAdapter.prototype.removeStyle = function(element, stylename) {
      throw _abstract();
    };
    DomAdapter.prototype.getStyle = function(element, stylename) {
      throw _abstract();
    };
    DomAdapter.prototype.tagName = function(element) {
      throw _abstract();
    };
    DomAdapter.prototype.attributeMap = function(element) {
      throw _abstract();
    };
    DomAdapter.prototype.hasAttribute = function(element, attribute) {
      throw _abstract();
    };
    DomAdapter.prototype.getAttribute = function(element, attribute) {
      throw _abstract();
    };
    DomAdapter.prototype.setAttribute = function(element, name, value) {
      throw _abstract();
    };
    DomAdapter.prototype.removeAttribute = function(element, attribute) {
      throw _abstract();
    };
    DomAdapter.prototype.templateAwareRoot = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.createHtmlDocument = function() {
      throw _abstract();
    };
    DomAdapter.prototype.defaultDoc = function() {
      throw _abstract();
    };
    DomAdapter.prototype.getBoundingClientRect = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.getTitle = function() {
      throw _abstract();
    };
    DomAdapter.prototype.setTitle = function(newTitle) {
      throw _abstract();
    };
    DomAdapter.prototype.elementMatches = function(n, selector) {
      throw _abstract();
    };
    DomAdapter.prototype.isTemplateElement = function(el) {
      throw _abstract();
    };
    DomAdapter.prototype.isTextNode = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.isCommentNode = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.isElementNode = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.hasShadowRoot = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.isShadowRoot = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.importIntoDoc = function(node) {
      throw _abstract();
    };
    DomAdapter.prototype.isPageRule = function(rule) {
      throw _abstract();
    };
    DomAdapter.prototype.isStyleRule = function(rule) {
      throw _abstract();
    };
    DomAdapter.prototype.isMediaRule = function(rule) {
      throw _abstract();
    };
    DomAdapter.prototype.isKeyframesRule = function(rule) {
      throw _abstract();
    };
    DomAdapter.prototype.getHref = function(element) {
      throw _abstract();
    };
    DomAdapter.prototype.getEventKey = function(event) {
      throw _abstract();
    };
    DomAdapter.prototype.resolveAndSetHref = function(element, baseUrl, href) {
      throw _abstract();
    };
    DomAdapter.prototype.cssToRules = function(css) {
      throw _abstract();
    };
    DomAdapter.prototype.supportsDOMEvents = function() {
      throw _abstract();
    };
    DomAdapter.prototype.supportsNativeShadowDOM = function() {
      throw _abstract();
    };
    DomAdapter.prototype.getGlobalEventTarget = function(target) {
      throw _abstract();
    };
    DomAdapter.prototype.getHistory = function() {
      throw _abstract();
    };
    DomAdapter.prototype.getLocation = function() {
      throw _abstract();
    };
    DomAdapter.prototype.getBaseHref = function() {
      throw _abstract();
    };
    return DomAdapter;
  })();
  exports.DomAdapter = DomAdapter;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/dom/generic_browser_adapter", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var dom_adapter_1 = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter");
  var GenericBrowserDomAdapter = (function(_super) {
    __extends(GenericBrowserDomAdapter, _super);
    function GenericBrowserDomAdapter() {
      _super.apply(this, arguments);
    }
    GenericBrowserDomAdapter.prototype.getDistributedNodes = function(el) {
      return el.getDistributedNodes();
    };
    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function(el, baseUrl, href) {
      el.href = href == null ? baseUrl : baseUrl + '/../' + href;
    };
    GenericBrowserDomAdapter.prototype.cssToRules = function(css) {
      var style = this.createStyleElement(css);
      this.appendChild(this.defaultDoc().head, style);
      var rules = collection_1.ListWrapper.create();
      if (lang_1.isPresent(style.sheet)) {
        try {
          var rawRules = style.sheet.cssRules;
          rules = collection_1.ListWrapper.createFixedSize(rawRules.length);
          for (var i = 0; i < rawRules.length; i++) {
            rules[i] = rawRules[i];
          }
        } catch (e) {}
      } else {}
      this.remove(style);
      return rules;
    };
    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function() {
      return true;
    };
    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function() {
      return lang_1.isFunction(this.defaultDoc().body.createShadowRoot);
    };
    return GenericBrowserDomAdapter;
  })(dom_adapter_1.DomAdapter);
  exports.GenericBrowserDomAdapter = GenericBrowserDomAdapter;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  exports.__esModule = true;
  var AST = (function() {
    function AST() {}
    AST.prototype.eval = function(context, locals) {
      throw new lang_1.BaseException("Not supported");
    };
    Object.defineProperty(AST.prototype, "isAssignable", {
      get: function() {
        return false;
      },
      enumerable: true,
      configurable: true
    });
    AST.prototype.assign = function(context, locals, value) {
      throw new lang_1.BaseException("Not supported");
    };
    AST.prototype.visit = function(visitor) {
      return null;
    };
    AST.prototype.toString = function() {
      return "AST";
    };
    return AST;
  })();
  exports.AST = AST;
  var EmptyExpr = (function(_super) {
    __extends(EmptyExpr, _super);
    function EmptyExpr() {
      _super.apply(this, arguments);
    }
    EmptyExpr.prototype.eval = function(context, locals) {
      return null;
    };
    EmptyExpr.prototype.visit = function(visitor) {};
    return EmptyExpr;
  })(AST);
  exports.EmptyExpr = EmptyExpr;
  var ImplicitReceiver = (function(_super) {
    __extends(ImplicitReceiver, _super);
    function ImplicitReceiver() {
      _super.apply(this, arguments);
    }
    ImplicitReceiver.prototype.eval = function(context, locals) {
      return context;
    };
    ImplicitReceiver.prototype.visit = function(visitor) {
      return visitor.visitImplicitReceiver(this);
    };
    return ImplicitReceiver;
  })(AST);
  exports.ImplicitReceiver = ImplicitReceiver;
  var Chain = (function(_super) {
    __extends(Chain, _super);
    function Chain(expressions) {
      _super.call(this);
      this.expressions = expressions;
    }
    Chain.prototype.eval = function(context, locals) {
      var result;
      for (var i = 0; i < this.expressions.length; i++) {
        var last = this.expressions[i].eval(context, locals);
        if (lang_1.isPresent(last))
          result = last;
      }
      return result;
    };
    Chain.prototype.visit = function(visitor) {
      return visitor.visitChain(this);
    };
    return Chain;
  })(AST);
  exports.Chain = Chain;
  var Conditional = (function(_super) {
    __extends(Conditional, _super);
    function Conditional(condition, trueExp, falseExp) {
      _super.call(this);
      this.condition = condition;
      this.trueExp = trueExp;
      this.falseExp = falseExp;
    }
    Conditional.prototype.eval = function(context, locals) {
      if (this.condition.eval(context, locals)) {
        return this.trueExp.eval(context, locals);
      } else {
        return this.falseExp.eval(context, locals);
      }
    };
    Conditional.prototype.visit = function(visitor) {
      return visitor.visitConditional(this);
    };
    return Conditional;
  })(AST);
  exports.Conditional = Conditional;
  var AccessMember = (function(_super) {
    __extends(AccessMember, _super);
    function AccessMember(receiver, name, getter, setter) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.getter = getter;
      this.setter = setter;
    }
    AccessMember.prototype.eval = function(context, locals) {
      if (this.receiver instanceof ImplicitReceiver && lang_1.isPresent(locals) && locals.contains(this.name)) {
        return locals.get(this.name);
      } else {
        var evaluatedReceiver = this.receiver.eval(context, locals);
        return this.getter(evaluatedReceiver);
      }
    };
    Object.defineProperty(AccessMember.prototype, "isAssignable", {
      get: function() {
        return true;
      },
      enumerable: true,
      configurable: true
    });
    AccessMember.prototype.assign = function(context, locals, value) {
      var evaluatedContext = this.receiver.eval(context, locals);
      if (this.receiver instanceof ImplicitReceiver && lang_1.isPresent(locals) && locals.contains(this.name)) {
        throw new lang_1.BaseException("Cannot reassign a variable binding " + this.name);
      } else {
        return this.setter(evaluatedContext, value);
      }
    };
    AccessMember.prototype.visit = function(visitor) {
      return visitor.visitAccessMember(this);
    };
    return AccessMember;
  })(AST);
  exports.AccessMember = AccessMember;
  var KeyedAccess = (function(_super) {
    __extends(KeyedAccess, _super);
    function KeyedAccess(obj, key) {
      _super.call(this);
      this.obj = obj;
      this.key = key;
    }
    KeyedAccess.prototype.eval = function(context, locals) {
      var obj = this.obj.eval(context, locals);
      var key = this.key.eval(context, locals);
      return obj[key];
    };
    Object.defineProperty(KeyedAccess.prototype, "isAssignable", {
      get: function() {
        return true;
      },
      enumerable: true,
      configurable: true
    });
    KeyedAccess.prototype.assign = function(context, locals, value) {
      var obj = this.obj.eval(context, locals);
      var key = this.key.eval(context, locals);
      obj[key] = value;
      return value;
    };
    KeyedAccess.prototype.visit = function(visitor) {
      return visitor.visitKeyedAccess(this);
    };
    return KeyedAccess;
  })(AST);
  exports.KeyedAccess = KeyedAccess;
  var Pipe = (function(_super) {
    __extends(Pipe, _super);
    function Pipe(exp, name, args, inBinding) {
      _super.call(this);
      this.exp = exp;
      this.name = name;
      this.args = args;
      this.inBinding = inBinding;
    }
    Pipe.prototype.visit = function(visitor) {
      return visitor.visitPipe(this);
    };
    return Pipe;
  })(AST);
  exports.Pipe = Pipe;
  var LiteralPrimitive = (function(_super) {
    __extends(LiteralPrimitive, _super);
    function LiteralPrimitive(value) {
      _super.call(this);
      this.value = value;
    }
    LiteralPrimitive.prototype.eval = function(context, locals) {
      return this.value;
    };
    LiteralPrimitive.prototype.visit = function(visitor) {
      return visitor.visitLiteralPrimitive(this);
    };
    return LiteralPrimitive;
  })(AST);
  exports.LiteralPrimitive = LiteralPrimitive;
  var LiteralArray = (function(_super) {
    __extends(LiteralArray, _super);
    function LiteralArray(expressions) {
      _super.call(this);
      this.expressions = expressions;
    }
    LiteralArray.prototype.eval = function(context, locals) {
      return collection_1.ListWrapper.map(this.expressions, function(e) {
        return e.eval(context, locals);
      });
    };
    LiteralArray.prototype.visit = function(visitor) {
      return visitor.visitLiteralArray(this);
    };
    return LiteralArray;
  })(AST);
  exports.LiteralArray = LiteralArray;
  var LiteralMap = (function(_super) {
    __extends(LiteralMap, _super);
    function LiteralMap(keys, values) {
      _super.call(this);
      this.keys = keys;
      this.values = values;
    }
    LiteralMap.prototype.eval = function(context, locals) {
      var res = collection_1.StringMapWrapper.create();
      for (var i = 0; i < this.keys.length; ++i) {
        collection_1.StringMapWrapper.set(res, this.keys[i], this.values[i].eval(context, locals));
      }
      return res;
    };
    LiteralMap.prototype.visit = function(visitor) {
      return visitor.visitLiteralMap(this);
    };
    return LiteralMap;
  })(AST);
  exports.LiteralMap = LiteralMap;
  var Interpolation = (function(_super) {
    __extends(Interpolation, _super);
    function Interpolation(strings, expressions) {
      _super.call(this);
      this.strings = strings;
      this.expressions = expressions;
    }
    Interpolation.prototype.eval = function(context, locals) {
      throw new lang_1.BaseException("evaluating an Interpolation is not supported");
    };
    Interpolation.prototype.visit = function(visitor) {
      visitor.visitInterpolation(this);
    };
    return Interpolation;
  })(AST);
  exports.Interpolation = Interpolation;
  var Binary = (function(_super) {
    __extends(Binary, _super);
    function Binary(operation, left, right) {
      _super.call(this);
      this.operation = operation;
      this.left = left;
      this.right = right;
    }
    Binary.prototype.eval = function(context, locals) {
      var left = this.left.eval(context, locals);
      switch (this.operation) {
        case '&&':
          return left && this.right.eval(context, locals);
        case '||':
          return left || this.right.eval(context, locals);
      }
      var right = this.right.eval(context, locals);
      switch (this.operation) {
        case '+':
          return left + right;
        case '-':
          return left - right;
        case '*':
          return left * right;
        case '/':
          return left / right;
        case '%':
          return left % right;
        case '==':
          return left == right;
        case '!=':
          return left != right;
        case '===':
          return left === right;
        case '!==':
          return left !== right;
        case '<':
          return left < right;
        case '>':
          return left > right;
        case '<=':
          return left <= right;
        case '>=':
          return left >= right;
        case '^':
          return left ^ right;
        case '&':
          return left & right;
      }
      throw 'Internal error [$operation] not handled';
    };
    Binary.prototype.visit = function(visitor) {
      return visitor.visitBinary(this);
    };
    return Binary;
  })(AST);
  exports.Binary = Binary;
  var PrefixNot = (function(_super) {
    __extends(PrefixNot, _super);
    function PrefixNot(expression) {
      _super.call(this);
      this.expression = expression;
    }
    PrefixNot.prototype.eval = function(context, locals) {
      return !this.expression.eval(context, locals);
    };
    PrefixNot.prototype.visit = function(visitor) {
      return visitor.visitPrefixNot(this);
    };
    return PrefixNot;
  })(AST);
  exports.PrefixNot = PrefixNot;
  var Assignment = (function(_super) {
    __extends(Assignment, _super);
    function Assignment(target, value) {
      _super.call(this);
      this.target = target;
      this.value = value;
    }
    Assignment.prototype.eval = function(context, locals) {
      return this.target.assign(context, locals, this.value.eval(context, locals));
    };
    Assignment.prototype.visit = function(visitor) {
      return visitor.visitAssignment(this);
    };
    return Assignment;
  })(AST);
  exports.Assignment = Assignment;
  var MethodCall = (function(_super) {
    __extends(MethodCall, _super);
    function MethodCall(receiver, name, fn, args) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.fn = fn;
      this.args = args;
    }
    MethodCall.prototype.eval = function(context, locals) {
      var evaluatedArgs = evalList(context, locals, this.args);
      if (this.receiver instanceof ImplicitReceiver && lang_1.isPresent(locals) && locals.contains(this.name)) {
        var fn = locals.get(this.name);
        return lang_1.FunctionWrapper.apply(fn, evaluatedArgs);
      } else {
        var evaluatedReceiver = this.receiver.eval(context, locals);
        return this.fn(evaluatedReceiver, evaluatedArgs);
      }
    };
    MethodCall.prototype.visit = function(visitor) {
      return visitor.visitMethodCall(this);
    };
    return MethodCall;
  })(AST);
  exports.MethodCall = MethodCall;
  var FunctionCall = (function(_super) {
    __extends(FunctionCall, _super);
    function FunctionCall(target, args) {
      _super.call(this);
      this.target = target;
      this.args = args;
    }
    FunctionCall.prototype.eval = function(context, locals) {
      var obj = this.target.eval(context, locals);
      if (!(obj instanceof Function)) {
        throw new lang_1.BaseException(obj + " is not a function");
      }
      return lang_1.FunctionWrapper.apply(obj, evalList(context, locals, this.args));
    };
    FunctionCall.prototype.visit = function(visitor) {
      return visitor.visitFunctionCall(this);
    };
    return FunctionCall;
  })(AST);
  exports.FunctionCall = FunctionCall;
  var ASTWithSource = (function(_super) {
    __extends(ASTWithSource, _super);
    function ASTWithSource(ast, source, location) {
      _super.call(this);
      this.ast = ast;
      this.source = source;
      this.location = location;
    }
    ASTWithSource.prototype.eval = function(context, locals) {
      return this.ast.eval(context, locals);
    };
    Object.defineProperty(ASTWithSource.prototype, "isAssignable", {
      get: function() {
        return this.ast.isAssignable;
      },
      enumerable: true,
      configurable: true
    });
    ASTWithSource.prototype.assign = function(context, locals, value) {
      return this.ast.assign(context, locals, value);
    };
    ASTWithSource.prototype.visit = function(visitor) {
      return this.ast.visit(visitor);
    };
    ASTWithSource.prototype.toString = function() {
      return this.source + " in " + this.location;
    };
    return ASTWithSource;
  })(AST);
  exports.ASTWithSource = ASTWithSource;
  var TemplateBinding = (function() {
    function TemplateBinding(key, keyIsVar, name, expression) {
      this.key = key;
      this.keyIsVar = keyIsVar;
      this.name = name;
      this.expression = expression;
    }
    return TemplateBinding;
  })();
  exports.TemplateBinding = TemplateBinding;
  var AstVisitor = (function() {
    function AstVisitor() {}
    AstVisitor.prototype.visitAccessMember = function(ast) {};
    AstVisitor.prototype.visitAssignment = function(ast) {};
    AstVisitor.prototype.visitBinary = function(ast) {};
    AstVisitor.prototype.visitChain = function(ast) {};
    AstVisitor.prototype.visitConditional = function(ast) {};
    AstVisitor.prototype.visitPipe = function(ast) {};
    AstVisitor.prototype.visitFunctionCall = function(ast) {};
    AstVisitor.prototype.visitImplicitReceiver = function(ast) {};
    AstVisitor.prototype.visitKeyedAccess = function(ast) {};
    AstVisitor.prototype.visitLiteralArray = function(ast) {};
    AstVisitor.prototype.visitLiteralMap = function(ast) {};
    AstVisitor.prototype.visitLiteralPrimitive = function(ast) {};
    AstVisitor.prototype.visitMethodCall = function(ast) {};
    AstVisitor.prototype.visitPrefixNot = function(ast) {};
    return AstVisitor;
  })();
  exports.AstVisitor = AstVisitor;
  var AstTransformer = (function() {
    function AstTransformer() {}
    AstTransformer.prototype.visitImplicitReceiver = function(ast) {
      return ast;
    };
    AstTransformer.prototype.visitInterpolation = function(ast) {
      return new Interpolation(ast.strings, this.visitAll(ast.expressions));
    };
    AstTransformer.prototype.visitLiteralPrimitive = function(ast) {
      return new LiteralPrimitive(ast.value);
    };
    AstTransformer.prototype.visitAccessMember = function(ast) {
      return new AccessMember(ast.receiver.visit(this), ast.name, ast.getter, ast.setter);
    };
    AstTransformer.prototype.visitMethodCall = function(ast) {
      return new MethodCall(ast.receiver.visit(this), ast.name, ast.fn, this.visitAll(ast.args));
    };
    AstTransformer.prototype.visitFunctionCall = function(ast) {
      return new FunctionCall(ast.target.visit(this), this.visitAll(ast.args));
    };
    AstTransformer.prototype.visitLiteralArray = function(ast) {
      return new LiteralArray(this.visitAll(ast.expressions));
    };
    AstTransformer.prototype.visitLiteralMap = function(ast) {
      return new LiteralMap(ast.keys, this.visitAll(ast.values));
    };
    AstTransformer.prototype.visitBinary = function(ast) {
      return new Binary(ast.operation, ast.left.visit(this), ast.right.visit(this));
    };
    AstTransformer.prototype.visitPrefixNot = function(ast) {
      return new PrefixNot(ast.expression.visit(this));
    };
    AstTransformer.prototype.visitConditional = function(ast) {
      return new Conditional(ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));
    };
    AstTransformer.prototype.visitPipe = function(ast) {
      return new Pipe(ast.exp.visit(this), ast.name, this.visitAll(ast.args), ast.inBinding);
    };
    AstTransformer.prototype.visitKeyedAccess = function(ast) {
      return new KeyedAccess(ast.obj.visit(this), ast.key.visit(this));
    };
    AstTransformer.prototype.visitAll = function(asts) {
      var res = collection_1.ListWrapper.createFixedSize(asts.length);
      for (var i = 0; i < asts.length; ++i) {
        res[i] = asts[i].visit(this);
      }
      return res;
    };
    return AstTransformer;
  })();
  exports.AstTransformer = AstTransformer;
  var _evalListCache = [[], [0], [0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];
  function evalList(context, locals, exps) {
    var length = exps.length;
    if (length > 10) {
      throw new lang_1.BaseException("Cannot have more than 10 argument");
    }
    var result = _evalListCache[length];
    for (var i = 0; i < length; i++) {
      result[i] = exps[i].eval(context, locals);
    }
    return result;
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  var Inject = (function() {
    function Inject(token) {
      this.token = token;
    }
    Inject = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], Inject);
    return Inject;
  })();
  exports.Inject = Inject;
  var InjectPromise = (function() {
    function InjectPromise(token) {
      this.token = token;
    }
    InjectPromise = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], InjectPromise);
    return InjectPromise;
  })();
  exports.InjectPromise = InjectPromise;
  var InjectLazy = (function() {
    function InjectLazy(token) {
      this.token = token;
    }
    InjectLazy = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], InjectLazy);
    return InjectLazy;
  })();
  exports.InjectLazy = InjectLazy;
  var Optional = (function() {
    function Optional() {}
    Optional = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], Optional);
    return Optional;
  })();
  exports.Optional = Optional;
  var DependencyAnnotation = (function() {
    function DependencyAnnotation() {}
    Object.defineProperty(DependencyAnnotation.prototype, "token", {
      get: function() {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    DependencyAnnotation = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], DependencyAnnotation);
    return DependencyAnnotation;
  })();
  exports.DependencyAnnotation = DependencyAnnotation;
  var Injectable = (function() {
    function Injectable() {}
    Injectable = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], Injectable);
    return Injectable;
  })();
  exports.Injectable = Injectable;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/util/decorators", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  function makeDecorator(annotationCls) {
    return function() {
      var args = arguments;
      var Reflect = lang_1.global.Reflect;
      if (!(Reflect && Reflect.getMetadata)) {
        throw 'reflect-metadata shim is required when using class decorators';
      }
      var annotationInstance = Object.create(annotationCls.prototype);
      annotationCls.apply(annotationInstance, args);
      return function(cls) {
        var annotations = Reflect.getMetadata('annotations', cls);
        annotations = annotations || [];
        annotations.push(annotationInstance);
        Reflect.defineMetadata('annotations', annotations, cls);
        return cls;
      };
    };
  }
  exports.makeDecorator = makeDecorator;
  function makeParamDecorator(annotationCls) {
    return function() {
      var args = arguments;
      var Reflect = lang_1.global.Reflect;
      if (!(Reflect && Reflect.getMetadata)) {
        throw 'reflect-metadata shim is required when using parameter decorators';
      }
      var annotationInstance = Object.create(annotationCls.prototype);
      annotationCls.apply(annotationInstance, args);
      return function(cls, unusedKey, index) {
        var parameters = Reflect.getMetadata('parameters', cls);
        parameters = parameters || [];
        while (parameters.length <= index) {
          parameters.push(null);
        }
        parameters[index] = annotationInstance;
        Reflect.defineMetadata('parameters', parameters, cls);
        return cls;
      };
    };
  }
  exports.makeParamDecorator = makeParamDecorator;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/reflection/types", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/reflection/reflection_capabilities", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  exports.__esModule = true;
  var ReflectionCapabilities = (function() {
    function ReflectionCapabilities(reflect) {
      this._reflect = lang_1.isPresent(reflect) ? reflect : lang_1.global.Reflect;
    }
    ReflectionCapabilities.prototype.factory = function(t) {
      switch (t.length) {
        case 0:
          return function() {
            return new t();
          };
        case 1:
          return function(a1) {
            return new t(a1);
          };
        case 2:
          return function(a1, a2) {
            return new t(a1, a2);
          };
        case 3:
          return function(a1, a2, a3) {
            return new t(a1, a2, a3);
          };
        case 4:
          return function(a1, a2, a3, a4) {
            return new t(a1, a2, a3, a4);
          };
        case 5:
          return function(a1, a2, a3, a4, a5) {
            return new t(a1, a2, a3, a4, a5);
          };
        case 6:
          return function(a1, a2, a3, a4, a5, a6) {
            return new t(a1, a2, a3, a4, a5, a6);
          };
        case 7:
          return function(a1, a2, a3, a4, a5, a6, a7) {
            return new t(a1, a2, a3, a4, a5, a6, a7);
          };
        case 8:
          return function(a1, a2, a3, a4, a5, a6, a7, a8) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8);
          };
        case 9:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9);
          };
        case 10:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
          };
      }
      ;
      throw new Error("Factory cannot take more than 10 arguments");
    };
    ReflectionCapabilities.prototype._zipTypesAndAnnotaions = function(paramTypes, paramAnnotations) {
      var result;
      if (typeof paramTypes === 'undefined') {
        result = collection_1.ListWrapper.createFixedSize(paramAnnotations.length);
      } else {
        result = collection_1.ListWrapper.createFixedSize(paramTypes.length);
      }
      for (var i = 0; i < result.length; i++) {
        if (typeof paramTypes === 'undefined') {
          result[i] = [];
        } else if (paramTypes[i] != Object) {
          result[i] = [paramTypes[i]];
        } else {
          result[i] = [];
        }
        if (lang_1.isPresent(paramAnnotations) && lang_1.isPresent(paramAnnotations[i])) {
          result[i] = result[i].concat(paramAnnotations[i]);
        }
      }
      return result;
    };
    ReflectionCapabilities.prototype.parameters = function(typeOfFunc) {
      if (lang_1.isPresent(typeOfFunc.parameters)) {
        return typeOfFunc.parameters;
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var paramAnnotations = this._reflect.getMetadata('parameters', typeOfFunc);
        var paramTypes = this._reflect.getMetadata('design:paramtypes', typeOfFunc);
        if (lang_1.isPresent(paramTypes) || lang_1.isPresent(paramAnnotations)) {
          return this._zipTypesAndAnnotaions(paramTypes, paramAnnotations);
        }
      }
      return collection_1.ListWrapper.createFixedSize(typeOfFunc.length);
    };
    ReflectionCapabilities.prototype.annotations = function(typeOfFunc) {
      if (lang_1.isPresent(typeOfFunc.annotations)) {
        return typeOfFunc.annotations;
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var annotations = this._reflect.getMetadata('annotations', typeOfFunc);
        if (lang_1.isPresent(annotations))
          return annotations;
      }
      return [];
    };
    ReflectionCapabilities.prototype.getter = function(name) {
      return new Function('o', 'return o.' + name + ';');
    };
    ReflectionCapabilities.prototype.setter = function(name) {
      return new Function('o', 'v', 'return o.' + name + ' = v;');
    };
    ReflectionCapabilities.prototype.method = function(name) {
      var functionBody = "if (!o." + name + ") throw new Error('\"" + name + "\" is undefined');\n        return o." + name + ".apply(o, args);";
      return new Function('o', 'args', functionBody);
    };
    return ReflectionCapabilities;
  })();
  exports.ReflectionCapabilities = ReflectionCapabilities;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/locals", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  exports.__esModule = true;
  var Locals = (function() {
    function Locals(parent, current) {
      this.parent = parent;
      this.current = current;
    }
    Locals.prototype.contains = function(name) {
      if (collection_1.MapWrapper.contains(this.current, name)) {
        return true;
      }
      if (lang_1.isPresent(this.parent)) {
        return this.parent.contains(name);
      }
      return false;
    };
    Locals.prototype.get = function(name) {
      if (collection_1.MapWrapper.contains(this.current, name)) {
        return collection_1.MapWrapper.get(this.current, name);
      }
      if (lang_1.isPresent(this.parent)) {
        return this.parent.get(name);
      }
      throw new lang_1.BaseException("Cannot find '" + name + "'");
    };
    Locals.prototype.set = function(name, value) {
      if (collection_1.MapWrapper.contains(this.current, name)) {
        collection_1.MapWrapper.set(this.current, name, value);
      } else {
        throw new lang_1.BaseException('Setting of new keys post-construction is not supported.');
      }
    };
    Locals.prototype.clearValues = function() {
      collection_1.MapWrapper.clearValues(this.current);
    };
    return Locals;
  })();
  exports.Locals = Locals;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  var ExpressionChangedAfterItHasBeenChecked = (function(_super) {
    __extends(ExpressionChangedAfterItHasBeenChecked, _super);
    function ExpressionChangedAfterItHasBeenChecked(proto, change) {
      _super.call(this);
      this.message = ("Expression '" + proto.expressionAsString + "' has changed after it was checked. ") + ("Previous value: '" + change.previousValue + "'. Current value: '" + change.currentValue + "'");
    }
    ExpressionChangedAfterItHasBeenChecked.prototype.toString = function() {
      return this.message;
    };
    return ExpressionChangedAfterItHasBeenChecked;
  })(lang_1.BaseException);
  exports.ExpressionChangedAfterItHasBeenChecked = ExpressionChangedAfterItHasBeenChecked;
  var ChangeDetectionError = (function(_super) {
    __extends(ChangeDetectionError, _super);
    function ChangeDetectionError(proto, originalException) {
      _super.call(this);
      this.originalException = originalException;
      this.location = proto.expressionAsString;
      this.message = this.originalException + " in [" + this.location + "]";
    }
    ChangeDetectionError.prototype.toString = function() {
      return this.message;
    };
    return ChangeDetectionError;
  })(lang_1.BaseException);
  exports.ChangeDetectionError = ChangeDetectionError;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var ProtoChangeDetector = (function() {
    function ProtoChangeDetector() {}
    ProtoChangeDetector.prototype.instantiate = function(dispatcher) {
      return null;
    };
    return ProtoChangeDetector;
  })();
  exports.ProtoChangeDetector = ProtoChangeDetector;
  var ChangeDetection = (function() {
    function ChangeDetection() {}
    ChangeDetection.prototype.createProtoChangeDetector = function(definition) {
      return null;
    };
    return ChangeDetection;
  })();
  exports.ChangeDetection = ChangeDetection;
  var ChangeDispatcher = (function() {
    function ChangeDispatcher() {}
    ChangeDispatcher.prototype.notifyOnBinding = function(bindingRecord, value) {};
    return ChangeDispatcher;
  })();
  exports.ChangeDispatcher = ChangeDispatcher;
  var ChangeDetector = (function() {
    function ChangeDetector() {}
    ChangeDetector.prototype.addChild = function(cd) {};
    ChangeDetector.prototype.addShadowDomChild = function(cd) {};
    ChangeDetector.prototype.removeChild = function(cd) {};
    ChangeDetector.prototype.removeShadowDomChild = function(cd) {};
    ChangeDetector.prototype.remove = function() {};
    ChangeDetector.prototype.hydrate = function(context, locals, directives) {};
    ChangeDetector.prototype.dehydrate = function() {};
    ChangeDetector.prototype.markPathToRootAsCheckOnce = function() {};
    ChangeDetector.prototype.detectChanges = function() {};
    ChangeDetector.prototype.checkNoChanges = function() {};
    return ChangeDetector;
  })();
  exports.ChangeDetector = ChangeDetector;
  var ChangeDetectorDefinition = (function() {
    function ChangeDetectorDefinition(id, strategy, variableNames, bindingRecords, directiveRecords) {
      this.id = id;
      this.strategy = strategy;
      this.variableNames = variableNames;
      this.bindingRecords = bindingRecords;
      this.directiveRecords = directiveRecords;
    }
    return ChangeDetectorDefinition;
  })();
  exports.ChangeDetectorDefinition = ChangeDetectorDefinition;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/constants", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports.CHECK_ONCE = "CHECK_ONCE";
  exports.CHECKED = "CHECKED";
  exports.CHECK_ALWAYS = "ALWAYS_CHECK";
  exports.DETACHED = "DETACHED";
  exports.ON_PUSH = "ON_PUSH";
  exports.DEFAULT = "DEFAULT";
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  var WrappedValue = (function() {
    function WrappedValue(wrapped) {
      this.wrapped = wrapped;
    }
    WrappedValue.wrap = function(value) {
      var w = _wrappedValues[_wrappedIndex++ % 5];
      w.wrapped = value;
      return w;
    };
    return WrappedValue;
  })();
  exports.WrappedValue = WrappedValue;
  var _wrappedValues = [new WrappedValue(null), new WrappedValue(null), new WrappedValue(null), new WrappedValue(null), new WrappedValue(null)];
  var _wrappedIndex = 0;
  var Pipe = (function() {
    function Pipe() {}
    Pipe.prototype.supports = function(obj) {
      return false;
    };
    Pipe.prototype.onDestroy = function() {};
    Pipe.prototype.transform = function(value) {
      return null;
    };
    return Pipe;
  })();
  exports.Pipe = Pipe;
  var PipeFactory = (function() {
    function PipeFactory() {}
    PipeFactory.prototype.supports = function(obs) {
      _abstract();
      return false;
    };
    PipeFactory.prototype.create = function(cdRef) {
      _abstract();
      return null;
    };
    PipeFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], PipeFactory);
    return PipeFactory;
  })();
  exports.PipeFactory = PipeFactory;
  function _abstract() {
    throw new lang_1.BaseException('This method is abstract');
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detector_ref", ["npm:angular2@2.0.0-alpha.24/src/change_detection/constants"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var constants_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/constants");
  exports.__esModule = true;
  var ChangeDetectorRef = (function() {
    function ChangeDetectorRef(_cd) {
      this._cd = _cd;
    }
    ChangeDetectorRef.prototype.requestCheck = function() {
      this._cd.markPathToRootAsCheckOnce();
    };
    ChangeDetectorRef.prototype.detach = function() {
      this._cd.mode = constants_1.DETACHED;
    };
    ChangeDetectorRef.prototype.reattach = function() {
      this._cd.mode = constants_1.CHECK_ALWAYS;
      this.requestCheck();
    };
    return ChangeDetectorRef;
  })();
  exports.ChangeDetectorRef = ChangeDetectorRef;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports.RECORD_TYPE_SELF = 0;
  exports.RECORD_TYPE_CONST = 1;
  exports.RECORD_TYPE_PRIMITIVE_OP = 2;
  exports.RECORD_TYPE_PROPERTY = 3;
  exports.RECORD_TYPE_LOCAL = 4;
  exports.RECORD_TYPE_INVOKE_METHOD = 5;
  exports.RECORD_TYPE_INVOKE_CLOSURE = 6;
  exports.RECORD_TYPE_KEYED_ACCESS = 7;
  exports.RECORD_TYPE_PIPE = 8;
  exports.RECORD_TYPE_BINDING_PIPE = 9;
  exports.RECORD_TYPE_INTERPOLATE = 10;
  var ProtoRecord = (function() {
    function ProtoRecord(mode, name, funcOrValue, args, fixedArgs, contextIndex, directiveIndex, selfIndex, bindingRecord, expressionAsString, lastInBinding, lastInDirective) {
      this.mode = mode;
      this.name = name;
      this.funcOrValue = funcOrValue;
      this.args = args;
      this.fixedArgs = fixedArgs;
      this.contextIndex = contextIndex;
      this.directiveIndex = directiveIndex;
      this.selfIndex = selfIndex;
      this.bindingRecord = bindingRecord;
      this.expressionAsString = expressionAsString;
      this.lastInBinding = lastInBinding;
      this.lastInDirective = lastInDirective;
    }
    ProtoRecord.prototype.isPureFunction = function() {
      return this.mode === exports.RECORD_TYPE_INTERPOLATE || this.mode === exports.RECORD_TYPE_PRIMITIVE_OP;
    };
    return ProtoRecord;
  })();
  exports.ProtoRecord = ProtoRecord;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_jit_generator", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/abstract_change_detector", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var abstract_change_detector_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/abstract_change_detector");
  var change_detection_util_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util");
  var proto_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record");
  exports.__esModule = true;
  var ABSTRACT_CHANGE_DETECTOR = "AbstractChangeDetector";
  var UTIL = "ChangeDetectionUtil";
  var DISPATCHER_ACCESSOR = "this.dispatcher";
  var PIPE_REGISTRY_ACCESSOR = "this.pipeRegistry";
  var PROTOS_ACCESSOR = "this.protos";
  var DIRECTIVES_ACCESSOR = "this.directiveRecords";
  var CONTEXT_ACCESSOR = "this.context";
  var IS_CHANGED_LOCAL = "isChanged";
  var CHANGES_LOCAL = "changes";
  var LOCALS_ACCESSOR = "this.locals";
  var MODE_ACCESSOR = "this.mode";
  var TEMP_LOCAL = "temp";
  var CURRENT_PROTO = "currentProto";
  function typeTemplate(type, cons, detectChanges, notifyOnAllChangesDone, setContext) {
    return "\n" + cons + "\n" + detectChanges + "\n" + notifyOnAllChangesDone + "\n" + setContext + ";\n\nreturn function(dispatcher, pipeRegistry) {\n  return new " + type + "(dispatcher, pipeRegistry, protos, directiveRecords);\n}\n";
  }
  function constructorTemplate(type, fieldsDefinitions) {
    return "\nvar " + type + " = function " + type + "(dispatcher, pipeRegistry, protos, directiveRecords) {\n" + ABSTRACT_CHANGE_DETECTOR + ".call(this);\n" + DISPATCHER_ACCESSOR + " = dispatcher;\n" + PIPE_REGISTRY_ACCESSOR + " = pipeRegistry;\n" + PROTOS_ACCESSOR + " = protos;\n" + DIRECTIVES_ACCESSOR + " = directiveRecords;\n" + LOCALS_ACCESSOR + " = null;\n" + fieldsDefinitions + "\n}\n\n" + type + ".prototype = Object.create(" + ABSTRACT_CHANGE_DETECTOR + ".prototype);\n";
  }
  function pipeOnDestroyTemplate(pipeNames) {
    return pipeNames.map(function(p) {
      return (p + ".onDestroy()");
    }).join("\n");
  }
  function hydrateTemplate(type, mode, fieldDefinitions, pipeOnDestroy, directiveFieldNames, detectorFieldNames) {
    var directiveInit = "";
    for (var i = 0; i < directiveFieldNames.length; ++i) {
      directiveInit += directiveFieldNames[i] + " = directives.getDirectiveFor(this.directiveRecords[" + i + "].directiveIndex);\n";
    }
    var detectorInit = "";
    for (var i = 0; i < detectorFieldNames.length; ++i) {
      detectorInit += detectorFieldNames[i] + " = directives.getDetectorFor(this.directiveRecords[" + i + "].directiveIndex);\n";
    }
    return "\n" + type + ".prototype.hydrate = function(context, locals, directives) {\n  " + MODE_ACCESSOR + " = \"" + mode + "\";\n  " + CONTEXT_ACCESSOR + " = context;\n  " + LOCALS_ACCESSOR + " = locals;\n  " + directiveInit + "\n  " + detectorInit + "\n}\n" + type + ".prototype.dehydrate = function() {\n  " + pipeOnDestroy + "\n  " + fieldDefinitions + "\n  " + LOCALS_ACCESSOR + " = null;\n}\n" + type + ".prototype.hydrated = function() {\n  return " + CONTEXT_ACCESSOR + " !== " + UTIL + ".uninitialized();\n}\n";
  }
  function detectChangesTemplate(type, body) {
    return "\n" + type + ".prototype.detectChangesInRecords = function(throwOnChange) {\n  " + body + "\n}\n";
  }
  function callOnAllChangesDoneTemplate(type, body) {
    return "\n" + type + ".prototype.callOnAllChangesDone = function() {\n  " + body + "\n}\n";
  }
  function onAllChangesDoneTemplate(directive) {
    return directive + ".onAllChangesDone();";
  }
  function detectChangesBodyTemplate(localDefinitions, changeDefinitions, records) {
    return "\n" + localDefinitions + "\n" + changeDefinitions + "\nvar " + TEMP_LOCAL + ";\nvar " + IS_CHANGED_LOCAL + " = false;\nvar " + CURRENT_PROTO + ";\nvar " + CHANGES_LOCAL + " = null;\n\ncontext = " + CONTEXT_ACCESSOR + ";\n" + records + "\n";
  }
  function pipeCheckTemplate(protoIndex, context, bindingPropagationConfig, pipe, pipeType, oldValue, newValue, change, update, addToChanges, lastInDirective) {
    return "\n" + CURRENT_PROTO + " = " + PROTOS_ACCESSOR + "[" + protoIndex + "];\nif (" + pipe + " === " + UTIL + ".uninitialized()) {\n  " + pipe + " = " + PIPE_REGISTRY_ACCESSOR + ".get('" + pipeType + "', " + context + ", " + bindingPropagationConfig + ");\n} else if (!" + pipe + ".supports(" + context + ")) {\n  " + pipe + ".onDestroy();\n  " + pipe + " = " + PIPE_REGISTRY_ACCESSOR + ".get('" + pipeType + "', " + context + ", " + bindingPropagationConfig + ");\n}\n\n" + newValue + " = " + pipe + ".transform(" + context + ");\nif (" + oldValue + " !== " + newValue + ") {\n  " + newValue + " = " + UTIL + ".unwrapValue(" + newValue + ");\n  " + change + " = true;\n  " + update + "\n  " + addToChanges + "\n  " + oldValue + " = " + newValue + ";\n}\n" + lastInDirective + "\n";
  }
  function referenceCheckTemplate(protoIndex, assignment, oldValue, newValue, change, update, addToChanges, lastInDirective) {
    return "\n" + CURRENT_PROTO + " = " + PROTOS_ACCESSOR + "[" + protoIndex + "];\n" + assignment + "\nif (" + newValue + " !== " + oldValue + " || (" + newValue + " !== " + newValue + ") && (" + oldValue + " !== " + oldValue + ")) {\n  " + change + " = true;\n  " + update + "\n  " + addToChanges + "\n  " + oldValue + " = " + newValue + ";\n}\n" + lastInDirective + "\n";
  }
  function assignmentTemplate(field, value) {
    return field + " = " + value + ";";
  }
  function localDefinitionsTemplate(names) {
    return names.map(function(n) {
      return ("var " + n + ";");
    }).join("\n");
  }
  function changeDefinitionsTemplate(names) {
    return names.map(function(n) {
      return ("var " + n + " = false;");
    }).join("\n");
  }
  function fieldDefinitionsTemplate(names) {
    return names.map(function(n) {
      return (n + " = " + UTIL + ".uninitialized();");
    }).join("\n");
  }
  function ifChangedGuardTemplate(changeNames, body) {
    var cond = changeNames.join(" || ");
    return "\nif (" + cond + ") {\n  " + body + "\n}\n";
  }
  function addToChangesTemplate(oldValue, newValue) {
    return CHANGES_LOCAL + " = " + UTIL + ".addChange(" + CHANGES_LOCAL + ", " + CURRENT_PROTO + ".bindingRecord.propertyName, " + UTIL + ".simpleChange(" + oldValue + ", " + newValue + "));";
  }
  function updateDirectiveTemplate(oldValue, newValue, directiveProperty) {
    return "\nif(throwOnChange) " + UTIL + ".throwOnChange(" + CURRENT_PROTO + ", " + UTIL + ".simpleChange(" + oldValue + ", " + newValue + "));\n" + directiveProperty + " = " + newValue + ";\n" + IS_CHANGED_LOCAL + " = true;\n  ";
  }
  function updateElementTemplate(oldValue, newValue) {
    return "\nif(throwOnChange) " + UTIL + ".throwOnChange(" + CURRENT_PROTO + ", " + UTIL + ".simpleChange(" + oldValue + ", " + newValue + "));\n" + DISPATCHER_ACCESSOR + ".notifyOnBinding(" + CURRENT_PROTO + ".bindingRecord, " + newValue + ");\n  ";
  }
  function notifyOnChangesTemplate(directive) {
    return "\nif(" + CHANGES_LOCAL + ") {\n  " + directive + ".onChange(" + CHANGES_LOCAL + ");\n  " + CHANGES_LOCAL + " = null;\n}\n";
  }
  function notifyOnPushDetectorsTemplate(detector) {
    return "\nif(" + IS_CHANGED_LOCAL + ") {\n  " + detector + ".markAsCheckOnce();\n}\n";
  }
  function lastInDirectiveTemplate(notifyOnChanges, notifyOnPush) {
    return "\n" + notifyOnChanges + "\n" + notifyOnPush + "\n" + IS_CHANGED_LOCAL + " = false;\n";
  }
  var ChangeDetectorJITGenerator = (function() {
    function ChangeDetectorJITGenerator(typeName, changeDetectionStrategy, records, directiveRecords) {
      this.typeName = typeName;
      this.changeDetectionStrategy = changeDetectionStrategy;
      this.records = records;
      this.directiveRecords = directiveRecords;
      this.localNames = this.getLocalNames(records);
      this.changeNames = this.getChangeNames(this.localNames);
      this.fieldNames = this.getFieldNames(this.localNames);
      this.pipeNames = this.getPipeNames(this.localNames);
    }
    ChangeDetectorJITGenerator.prototype.getLocalNames = function(records) {
      var index = 0;
      var names = records.map(function(r) {
        var sanitizedName = r.name.replace(new RegExp("\\W", "g"), '');
        return "" + sanitizedName + index++;
      });
      return ["context"].concat(names);
    };
    ChangeDetectorJITGenerator.prototype.getChangeNames = function(localNames) {
      return localNames.map(function(n) {
        return ("change_" + n);
      });
    };
    ChangeDetectorJITGenerator.prototype.getFieldNames = function(localNames) {
      return localNames.map(function(n) {
        return ("this." + n);
      });
    };
    ChangeDetectorJITGenerator.prototype.getPipeNames = function(localNames) {
      return localNames.map(function(n) {
        return ("this." + n + "_pipe");
      });
    };
    ChangeDetectorJITGenerator.prototype.generate = function() {
      var text = typeTemplate(this.typeName, this.genConstructor(), this.genDetectChanges(), this.genCallOnAllChangesDone(), this.genHydrate());
      return new Function('AbstractChangeDetector', 'ChangeDetectionUtil', 'protos', 'directiveRecords', text)(abstract_change_detector_1.AbstractChangeDetector, change_detection_util_1.ChangeDetectionUtil, this.records, this.directiveRecords);
    };
    ChangeDetectorJITGenerator.prototype.genConstructor = function() {
      return constructorTemplate(this.typeName, this.genFieldDefinitions());
    };
    ChangeDetectorJITGenerator.prototype.genHydrate = function() {
      var mode = change_detection_util_1.ChangeDetectionUtil.changeDetectionMode(this.changeDetectionStrategy);
      return hydrateTemplate(this.typeName, mode, this.genFieldDefinitions(), pipeOnDestroyTemplate(this.getNonNullPipeNames()), this.getDirectiveFieldNames(), this.getDetectorFieldNames());
    };
    ChangeDetectorJITGenerator.prototype.getDirectiveFieldNames = function() {
      var _this = this;
      return this.directiveRecords.map(function(d) {
        return _this.getDirective(d.directiveIndex);
      });
    };
    ChangeDetectorJITGenerator.prototype.getDetectorFieldNames = function() {
      var _this = this;
      return this.directiveRecords.filter(function(r) {
        return r.isOnPushChangeDetection();
      }).map(function(d) {
        return _this.getDetector(d.directiveIndex);
      });
    };
    ChangeDetectorJITGenerator.prototype.getDirective = function(d) {
      return "this.directive_" + d.name;
    };
    ChangeDetectorJITGenerator.prototype.getDetector = function(d) {
      return "this.detector_" + d.name;
    };
    ChangeDetectorJITGenerator.prototype.genFieldDefinitions = function() {
      var fields = [];
      fields = fields.concat(this.fieldNames);
      fields = fields.concat(this.getNonNullPipeNames());
      fields = fields.concat(this.getDirectiveFieldNames());
      fields = fields.concat(this.getDetectorFieldNames());
      return fieldDefinitionsTemplate(fields);
    };
    ChangeDetectorJITGenerator.prototype.getNonNullPipeNames = function() {
      var _this = this;
      var pipes = [];
      this.records.forEach(function(r) {
        if (r.mode === proto_record_1.RECORD_TYPE_PIPE || r.mode === proto_record_1.RECORD_TYPE_BINDING_PIPE) {
          pipes.push(_this.pipeNames[r.selfIndex]);
        }
      });
      return pipes;
    };
    ChangeDetectorJITGenerator.prototype.genDetectChanges = function() {
      var body = this.genDetectChangesBody();
      return detectChangesTemplate(this.typeName, body);
    };
    ChangeDetectorJITGenerator.prototype.genCallOnAllChangesDone = function() {
      var notifications = [];
      var dirs = this.directiveRecords;
      for (var i = dirs.length - 1; i >= 0; --i) {
        var dir = dirs[i];
        if (dir.callOnAllChangesDone) {
          var directive = "this.directive_" + dir.directiveIndex.name;
          notifications.push(onAllChangesDoneTemplate(directive));
        }
      }
      return callOnAllChangesDoneTemplate(this.typeName, notifications.join(";\n"));
    };
    ChangeDetectorJITGenerator.prototype.genDetectChangesBody = function() {
      var _this = this;
      var rec = this.records.map(function(r) {
        return _this.genRecord(r);
      }).join("\n");
      return detectChangesBodyTemplate(this.genLocalDefinitions(), this.genChangeDefinitions(), rec);
    };
    ChangeDetectorJITGenerator.prototype.genLocalDefinitions = function() {
      return localDefinitionsTemplate(this.localNames);
    };
    ChangeDetectorJITGenerator.prototype.genChangeDefinitions = function() {
      return changeDefinitionsTemplate(this.changeNames);
    };
    ChangeDetectorJITGenerator.prototype.genRecord = function(r) {
      if (r.mode === proto_record_1.RECORD_TYPE_PIPE || r.mode === proto_record_1.RECORD_TYPE_BINDING_PIPE) {
        return this.genPipeCheck(r);
      } else {
        return this.genReferenceCheck(r);
      }
    };
    ChangeDetectorJITGenerator.prototype.genPipeCheck = function(r) {
      var context = this.localNames[r.contextIndex];
      var oldValue = this.fieldNames[r.selfIndex];
      var newValue = this.localNames[r.selfIndex];
      var change = this.changeNames[r.selfIndex];
      var pipe = this.pipeNames[r.selfIndex];
      var cdRef = r.mode === proto_record_1.RECORD_TYPE_BINDING_PIPE ? "this.ref" : "null";
      var update = this.genUpdateDirectiveOrElement(r);
      var addToChanges = this.genAddToChanges(r);
      var lastInDirective = this.genLastInDirective(r);
      return pipeCheckTemplate(r.selfIndex - 1, context, cdRef, pipe, r.name, oldValue, newValue, change, update, addToChanges, lastInDirective);
    };
    ChangeDetectorJITGenerator.prototype.genReferenceCheck = function(r) {
      var oldValue = this.fieldNames[r.selfIndex];
      var newValue = this.localNames[r.selfIndex];
      var change = this.changeNames[r.selfIndex];
      var assignment = this.genUpdateCurrentValue(r);
      var update = this.genUpdateDirectiveOrElement(r);
      var addToChanges = this.genAddToChanges(r);
      var lastInDirective = this.genLastInDirective(r);
      var check = referenceCheckTemplate(r.selfIndex - 1, assignment, oldValue, newValue, change, update, addToChanges, lastInDirective);
      if (r.isPureFunction()) {
        return this.ifChangedGuard(r, check);
      } else {
        return check;
      }
    };
    ChangeDetectorJITGenerator.prototype.genUpdateCurrentValue = function(r) {
      var context = this.getContext(r);
      var newValue = this.localNames[r.selfIndex];
      var args = this.genArgs(r);
      switch (r.mode) {
        case proto_record_1.RECORD_TYPE_SELF:
          return assignmentTemplate(newValue, context);
        case proto_record_1.RECORD_TYPE_CONST:
          return newValue + " = " + this.genLiteral(r.funcOrValue);
        case proto_record_1.RECORD_TYPE_PROPERTY:
          return assignmentTemplate(newValue, context + "." + r.name);
        case proto_record_1.RECORD_TYPE_LOCAL:
          return assignmentTemplate(newValue, LOCALS_ACCESSOR + ".get('" + r.name + "')");
        case proto_record_1.RECORD_TYPE_INVOKE_METHOD:
          return assignmentTemplate(newValue, context + "." + r.name + "(" + args + ")");
        case proto_record_1.RECORD_TYPE_INVOKE_CLOSURE:
          return assignmentTemplate(newValue, context + "(" + args + ")");
        case proto_record_1.RECORD_TYPE_PRIMITIVE_OP:
          return assignmentTemplate(newValue, UTIL + "." + r.name + "(" + args + ")");
        case proto_record_1.RECORD_TYPE_INTERPOLATE:
          return assignmentTemplate(newValue, this.genInterpolation(r));
        case proto_record_1.RECORD_TYPE_KEYED_ACCESS:
          var key = this.localNames[r.args[0]];
          return assignmentTemplate(newValue, context + "[" + key + "]");
        default:
          throw new lang_1.BaseException("Unknown operation " + r.mode);
      }
    };
    ChangeDetectorJITGenerator.prototype.getContext = function(r) {
      if (r.contextIndex == -1) {
        return this.getDirective(r.directiveIndex);
      } else {
        return this.localNames[r.contextIndex];
      }
    };
    ChangeDetectorJITGenerator.prototype.ifChangedGuard = function(r, body) {
      var _this = this;
      return ifChangedGuardTemplate(r.args.map(function(a) {
        return _this.changeNames[a];
      }), body);
    };
    ChangeDetectorJITGenerator.prototype.genInterpolation = function(r) {
      var res = "";
      for (var i = 0; i < r.args.length; ++i) {
        res += this.genLiteral(r.fixedArgs[i]);
        res += " + ";
        res += this.localNames[r.args[i]];
        res += " + ";
      }
      res += this.genLiteral(r.fixedArgs[r.args.length]);
      return res;
    };
    ChangeDetectorJITGenerator.prototype.genLiteral = function(value) {
      return JSON.stringify(value);
    };
    ChangeDetectorJITGenerator.prototype.genUpdateDirectiveOrElement = function(r) {
      if (!r.lastInBinding)
        return "";
      var newValue = this.localNames[r.selfIndex];
      var oldValue = this.fieldNames[r.selfIndex];
      var br = r.bindingRecord;
      if (br.isDirective()) {
        var directiveProperty = this.getDirective(br.directiveRecord.directiveIndex) + "." + br.propertyName;
        return updateDirectiveTemplate(oldValue, newValue, directiveProperty);
      } else {
        return updateElementTemplate(oldValue, newValue);
      }
    };
    ChangeDetectorJITGenerator.prototype.genAddToChanges = function(r) {
      var newValue = this.localNames[r.selfIndex];
      var oldValue = this.fieldNames[r.selfIndex];
      return r.bindingRecord.callOnChange() ? addToChangesTemplate(oldValue, newValue) : "";
    };
    ChangeDetectorJITGenerator.prototype.genLastInDirective = function(r) {
      var onChanges = this.genNotifyOnChanges(r);
      var onPush = this.genNotifyOnPushDetectors(r);
      return lastInDirectiveTemplate(onChanges, onPush);
    };
    ChangeDetectorJITGenerator.prototype.genNotifyOnChanges = function(r) {
      var br = r.bindingRecord;
      if (r.lastInDirective && br.callOnChange()) {
        return notifyOnChangesTemplate(this.getDirective(br.directiveRecord.directiveIndex));
      } else {
        return "";
      }
    };
    ChangeDetectorJITGenerator.prototype.genNotifyOnPushDetectors = function(r) {
      var br = r.bindingRecord;
      if (r.lastInDirective && br.isOnPushChangeDetection()) {
        return notifyOnPushDetectorsTemplate(this.getDetector(br.directiveRecord.directiveIndex));
      } else {
        return "";
      }
    };
    ChangeDetectorJITGenerator.prototype.genArgs = function(r) {
      var _this = this;
      return r.args.map(function(arg) {
        return _this.localNames[arg];
      }).join(", ");
    };
    return ChangeDetectorJITGenerator;
  })();
  exports.ChangeDetectorJITGenerator = ChangeDetectorJITGenerator;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/directive_record", ["npm:angular2@2.0.0-alpha.24/src/change_detection/constants", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var constants_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/constants");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  var DirectiveIndex = (function() {
    function DirectiveIndex(elementIndex, directiveIndex) {
      this.elementIndex = elementIndex;
      this.directiveIndex = directiveIndex;
    }
    Object.defineProperty(DirectiveIndex.prototype, "name", {
      get: function() {
        return this.elementIndex + "_" + this.directiveIndex;
      },
      enumerable: true,
      configurable: true
    });
    return DirectiveIndex;
  })();
  exports.DirectiveIndex = DirectiveIndex;
  var DirectiveRecord = (function() {
    function DirectiveRecord(directiveIndex, callOnAllChangesDone, callOnChange, changeDetection) {
      this.directiveIndex = directiveIndex;
      this.callOnAllChangesDone = callOnAllChangesDone;
      this.callOnChange = callOnChange;
      this.changeDetection = changeDetection;
    }
    DirectiveRecord.prototype.isOnPushChangeDetection = function() {
      return lang_1.StringWrapper.equals(this.changeDetection, constants_1.ON_PUSH);
    };
    return DirectiveRecord;
  })();
  exports.DirectiveRecord = DirectiveRecord;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/coalesce", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var proto_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record");
  exports.__esModule = true;
  function coalesce(records) {
    var res = collection_1.ListWrapper.create();
    var indexMap = collection_1.MapWrapper.create();
    for (var i = 0; i < records.length; ++i) {
      var r = records[i];
      var record = _replaceIndices(r, res.length + 1, indexMap);
      var matchingRecord = _findMatching(record, res);
      if (lang_1.isPresent(matchingRecord) && record.lastInBinding) {
        collection_1.ListWrapper.push(res, _selfRecord(record, matchingRecord.selfIndex, res.length + 1));
        collection_1.MapWrapper.set(indexMap, r.selfIndex, matchingRecord.selfIndex);
      } else if (lang_1.isPresent(matchingRecord) && !record.lastInBinding) {
        collection_1.MapWrapper.set(indexMap, r.selfIndex, matchingRecord.selfIndex);
      } else {
        collection_1.ListWrapper.push(res, record);
        collection_1.MapWrapper.set(indexMap, r.selfIndex, record.selfIndex);
      }
    }
    return res;
  }
  exports.coalesce = coalesce;
  function _selfRecord(r, contextIndex, selfIndex) {
    return new proto_record_1.ProtoRecord(proto_record_1.RECORD_TYPE_SELF, "self", null, [], r.fixedArgs, contextIndex, r.directiveIndex, selfIndex, r.bindingRecord, r.expressionAsString, r.lastInBinding, r.lastInDirective);
  }
  function _findMatching(r, rs) {
    return collection_1.ListWrapper.find(rs, function(rr) {
      return rr.mode === r.mode && rr.funcOrValue === r.funcOrValue && rr.contextIndex === r.contextIndex && collection_1.ListWrapper.equals(rr.args, r.args);
    });
  }
  function _replaceIndices(r, selfIndex, indexMap) {
    var args = collection_1.ListWrapper.map(r.args, function(a) {
      return _map(indexMap, a);
    });
    var contextIndex = _map(indexMap, r.contextIndex);
    return new proto_record_1.ProtoRecord(r.mode, r.name, r.funcOrValue, args, r.fixedArgs, contextIndex, r.directiveIndex, selfIndex, r.bindingRecord, r.expressionAsString, r.lastInBinding, r.lastInDirective);
  }
  function _map(indexMap, value) {
    var r = collection_1.MapWrapper.get(indexMap, value);
    return lang_1.isPresent(r) ? r : value;
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/binding_record", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  var DIRECTIVE = "directive";
  var ELEMENT = "element";
  var TEXT_NODE = "textNode";
  var BindingRecord = (function() {
    function BindingRecord(mode, implicitReceiver, ast, elementIndex, propertyName, setter, directiveRecord) {
      this.mode = mode;
      this.implicitReceiver = implicitReceiver;
      this.ast = ast;
      this.elementIndex = elementIndex;
      this.propertyName = propertyName;
      this.setter = setter;
      this.directiveRecord = directiveRecord;
    }
    BindingRecord.prototype.callOnChange = function() {
      return lang_1.isPresent(this.directiveRecord) && this.directiveRecord.callOnChange;
    };
    BindingRecord.prototype.isOnPushChangeDetection = function() {
      return lang_1.isPresent(this.directiveRecord) && this.directiveRecord.isOnPushChangeDetection();
    };
    BindingRecord.prototype.isDirective = function() {
      return this.mode === DIRECTIVE;
    };
    BindingRecord.prototype.isElement = function() {
      return this.mode === ELEMENT;
    };
    BindingRecord.prototype.isTextNode = function() {
      return this.mode === TEXT_NODE;
    };
    BindingRecord.createForDirective = function(ast, propertyName, setter, directiveRecord) {
      return new BindingRecord(DIRECTIVE, 0, ast, 0, propertyName, setter, directiveRecord);
    };
    BindingRecord.createForElement = function(ast, elementIndex, propertyName) {
      return new BindingRecord(ELEMENT, 0, ast, elementIndex, propertyName, null, null);
    };
    BindingRecord.createForHostProperty = function(directiveIndex, ast, propertyName) {
      return new BindingRecord(ELEMENT, directiveIndex, ast, directiveIndex.elementIndex, propertyName, null, null);
    };
    BindingRecord.createForTextNode = function(ast, elementIndex) {
      return new BindingRecord(TEXT_NODE, 0, ast, elementIndex, null, null, null);
    };
    return BindingRecord;
  })();
  exports.BindingRecord = BindingRecord;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe_registry", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/di/decorators"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var decorators_1 = require("npm:angular2@2.0.0-alpha.24/src/di/decorators");
  exports.__esModule = true;
  var PipeRegistry = (function() {
    function PipeRegistry(config) {
      this.config = config;
    }
    PipeRegistry.prototype.get = function(type, obj, cdRef) {
      var listOfConfigs = this.config[type];
      if (lang_1.isBlank(listOfConfigs)) {
        throw new lang_1.BaseException("Cannot find '" + type + "' pipe supporting object '" + obj + "'");
      }
      var matchingConfig = collection_1.ListWrapper.find(listOfConfigs, function(pipeConfig) {
        return pipeConfig.supports(obj);
      });
      if (lang_1.isBlank(matchingConfig)) {
        throw new lang_1.BaseException("Cannot find '" + type + "' pipe supporting object '" + obj + "'");
      }
      return matchingConfig.create(cdRef);
    };
    PipeRegistry = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [Object])], PipeRegistry);
    return PipeRegistry;
  })();
  exports.PipeRegistry = PipeRegistry;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/null_pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var NullPipeFactory = (function(_super) {
    __extends(NullPipeFactory, _super);
    function NullPipeFactory() {
      _super.call(this);
    }
    NullPipeFactory.prototype.supports = function(obj) {
      return NullPipe.supportsObj(obj);
    };
    NullPipeFactory.prototype.create = function(cdRef) {
      return new NullPipe();
    };
    NullPipeFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], NullPipeFactory);
    return NullPipeFactory;
  })(pipe_1.PipeFactory);
  exports.NullPipeFactory = NullPipeFactory;
  var NullPipe = (function(_super) {
    __extends(NullPipe, _super);
    function NullPipe() {
      _super.call(this);
      this.called = false;
    }
    NullPipe.supportsObj = function(obj) {
      return lang_1.isBlank(obj);
    };
    NullPipe.prototype.supports = function(obj) {
      return NullPipe.supportsObj(obj);
    };
    NullPipe.prototype.transform = function(value) {
      if (!this.called) {
        this.called = true;
        return pipe_1.WrappedValue.wrap(null);
      } else {
        return null;
      }
    };
    return NullPipe;
  })(pipe_1.Pipe);
  exports.NullPipe = NullPipe;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/iterable_changes", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_2 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var IterableChangesFactory = (function(_super) {
    __extends(IterableChangesFactory, _super);
    function IterableChangesFactory() {
      _super.call(this);
    }
    IterableChangesFactory.prototype.supports = function(obj) {
      return IterableChanges.supportsObj(obj);
    };
    IterableChangesFactory.prototype.create = function(cdRef) {
      return new IterableChanges();
    };
    IterableChangesFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], IterableChangesFactory);
    return IterableChangesFactory;
  })(pipe_1.PipeFactory);
  exports.IterableChangesFactory = IterableChangesFactory;
  var IterableChanges = (function(_super) {
    __extends(IterableChanges, _super);
    function IterableChanges() {
      _super.call(this);
      this._collection = null;
      this._length = null;
      this._linkedRecords = null;
      this._unlinkedRecords = null;
      this._previousItHead = null;
      this._itHead = null;
      this._itTail = null;
      this._additionsHead = null;
      this._additionsTail = null;
      this._movesHead = null;
      this._movesTail = null;
      this._removalsHead = null;
      this._removalsTail = null;
    }
    IterableChanges.supportsObj = function(obj) {
      return collection_1.isListLikeIterable(obj);
    };
    IterableChanges.prototype.supports = function(obj) {
      return IterableChanges.supportsObj(obj);
    };
    Object.defineProperty(IterableChanges.prototype, "collection", {
      get: function() {
        return this._collection;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(IterableChanges.prototype, "length", {
      get: function() {
        return this._length;
      },
      enumerable: true,
      configurable: true
    });
    IterableChanges.prototype.forEachItem = function(fn) {
      var record;
      for (record = this._itHead; record !== null; record = record._next) {
        fn(record);
      }
    };
    IterableChanges.prototype.forEachPreviousItem = function(fn) {
      var record;
      for (record = this._previousItHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    };
    IterableChanges.prototype.forEachAddedItem = function(fn) {
      var record;
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    };
    IterableChanges.prototype.forEachMovedItem = function(fn) {
      var record;
      for (record = this._movesHead; record !== null; record = record._nextMoved) {
        fn(record);
      }
    };
    IterableChanges.prototype.forEachRemovedItem = function(fn) {
      var record;
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    };
    IterableChanges.prototype.transform = function(collection) {
      if (this.check(collection)) {
        return pipe_1.WrappedValue.wrap(this);
      } else {
        return this;
      }
    };
    IterableChanges.prototype.check = function(collection) {
      var _this = this;
      this._reset();
      var record = this._itHead;
      var mayBeDirty = false;
      var index;
      var item;
      if (collection_1.ListWrapper.isList(collection)) {
        var list = collection;
        this._length = collection.length;
        for (index = 0; index < this._length; index++) {
          item = list[index];
          if (record === null || !lang_2.looseIdentical(record.item, item)) {
            record = this._mismatch(record, item, index);
            mayBeDirty = true;
          } else if (mayBeDirty) {
            record = this._verifyReinsertion(record, item, index);
          }
          record = record._next;
        }
      } else {
        index = 0;
        collection_1.iterateListLike(collection, function(item) {
          if (record === null || !lang_2.looseIdentical(record.item, item)) {
            record = _this._mismatch(record, item, index);
            mayBeDirty = true;
          } else if (mayBeDirty) {
            record = _this._verifyReinsertion(record, item, index);
          }
          record = record._next;
          index++;
        });
        this._length = index;
      }
      this._truncate(record);
      this._collection = collection;
      return this.isDirty;
    };
    Object.defineProperty(IterableChanges.prototype, "isDirty", {
      get: function() {
        return this._additionsHead !== null || this._movesHead !== null || this._removalsHead !== null;
      },
      enumerable: true,
      configurable: true
    });
    IterableChanges.prototype._reset = function() {
      if (this.isDirty) {
        var record;
        var nextRecord;
        for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }
        for (record = this._additionsHead; record !== null; record = record._nextAdded) {
          record.previousIndex = record.currentIndex;
        }
        this._additionsHead = this._additionsTail = null;
        for (record = this._movesHead; record !== null; record = nextRecord) {
          record.previousIndex = record.currentIndex;
          nextRecord = record._nextMoved;
        }
        this._movesHead = this._movesTail = null;
        this._removalsHead = this._removalsTail = null;
      }
    };
    IterableChanges.prototype._mismatch = function(record, item, index) {
      var previousRecord;
      if (record === null) {
        previousRecord = this._itTail;
      } else {
        previousRecord = record._prev;
        this._remove(record);
      }
      record = this._linkedRecords === null ? null : this._linkedRecords.get(item, index);
      if (record !== null) {
        this._moveAfter(record, previousRecord, index);
      } else {
        record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(item);
        if (record !== null) {
          this._reinsertAfter(record, previousRecord, index);
        } else {
          record = this._addAfter(new CollectionChangeRecord(item), previousRecord, index);
        }
      }
      return record;
    };
    IterableChanges.prototype._verifyReinsertion = function(record, item, index) {
      var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(item);
      if (reinsertRecord !== null) {
        record = this._reinsertAfter(reinsertRecord, record._prev, index);
      } else if (record.currentIndex != index) {
        record.currentIndex = index;
        this._addToMoves(record, index);
      }
      return record;
    };
    IterableChanges.prototype._truncate = function(record) {
      while (record !== null) {
        var nextRecord = record._next;
        this._addToRemovals(this._unlink(record));
        record = nextRecord;
      }
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.clear();
      }
      if (this._additionsTail !== null) {
        this._additionsTail._nextAdded = null;
      }
      if (this._movesTail !== null) {
        this._movesTail._nextMoved = null;
      }
      if (this._itTail !== null) {
        this._itTail._next = null;
      }
      if (this._removalsTail !== null) {
        this._removalsTail._nextRemoved = null;
      }
    };
    IterableChanges.prototype._reinsertAfter = function(record, prevRecord, index) {
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.remove(record);
      }
      var prev = record._prevRemoved;
      var next = record._nextRemoved;
      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }
      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }
      this._insertAfter(record, prevRecord, index);
      this._addToMoves(record, index);
      return record;
    };
    IterableChanges.prototype._moveAfter = function(record, prevRecord, index) {
      this._unlink(record);
      this._insertAfter(record, prevRecord, index);
      this._addToMoves(record, index);
      return record;
    };
    IterableChanges.prototype._addAfter = function(record, prevRecord, index) {
      this._insertAfter(record, prevRecord, index);
      if (this._additionsTail === null) {
        this._additionsTail = this._additionsHead = record;
      } else {
        this._additionsTail = this._additionsTail._nextAdded = record;
      }
      return record;
    };
    IterableChanges.prototype._insertAfter = function(record, prevRecord, index) {
      var next = prevRecord === null ? this._itHead : prevRecord._next;
      record._next = next;
      record._prev = prevRecord;
      if (next === null) {
        this._itTail = record;
      } else {
        next._prev = record;
      }
      if (prevRecord === null) {
        this._itHead = record;
      } else {
        prevRecord._next = record;
      }
      if (this._linkedRecords === null) {
        this._linkedRecords = new _DuplicateMap();
      }
      this._linkedRecords.put(record);
      record.currentIndex = index;
      return record;
    };
    IterableChanges.prototype._remove = function(record) {
      return this._addToRemovals(this._unlink(record));
    };
    IterableChanges.prototype._unlink = function(record) {
      if (this._linkedRecords !== null) {
        this._linkedRecords.remove(record);
      }
      var prev = record._prev;
      var next = record._next;
      if (prev === null) {
        this._itHead = next;
      } else {
        prev._next = next;
      }
      if (next === null) {
        this._itTail = prev;
      } else {
        next._prev = prev;
      }
      return record;
    };
    IterableChanges.prototype._addToMoves = function(record, toIndex) {
      if (record.previousIndex === toIndex) {
        return record;
      }
      if (this._movesTail === null) {
        this._movesTail = this._movesHead = record;
      } else {
        this._movesTail = this._movesTail._nextMoved = record;
      }
      return record;
    };
    IterableChanges.prototype._addToRemovals = function(record) {
      if (this._unlinkedRecords === null) {
        this._unlinkedRecords = new _DuplicateMap();
      }
      this._unlinkedRecords.put(record);
      record.currentIndex = null;
      record._nextRemoved = null;
      if (this._removalsTail === null) {
        this._removalsTail = this._removalsHead = record;
        record._prevRemoved = null;
      } else {
        record._prevRemoved = this._removalsTail;
        this._removalsTail = this._removalsTail._nextRemoved = record;
      }
      return record;
    };
    IterableChanges.prototype.toString = function() {
      var record;
      var list = [];
      for (record = this._itHead; record !== null; record = record._next) {
        collection_1.ListWrapper.push(list, record);
      }
      var previous = [];
      for (record = this._previousItHead; record !== null; record = record._nextPrevious) {
        collection_1.ListWrapper.push(previous, record);
      }
      var additions = [];
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        collection_1.ListWrapper.push(additions, record);
      }
      var moves = [];
      for (record = this._movesHead; record !== null; record = record._nextMoved) {
        collection_1.ListWrapper.push(moves, record);
      }
      var removals = [];
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        collection_1.ListWrapper.push(removals, record);
      }
      return "collection: " + list.join(', ') + "\n" + "previous: " + previous.join(', ') + "\n" + "additions: " + additions.join(', ') + "\n" + "moves: " + moves.join(', ') + "\n" + "removals: " + removals.join(', ') + "\n";
    };
    return IterableChanges;
  })(pipe_1.Pipe);
  exports.IterableChanges = IterableChanges;
  var CollectionChangeRecord = (function() {
    function CollectionChangeRecord(item) {
      this.currentIndex = null;
      this.previousIndex = null;
      this.item = item;
      this._nextPrevious = null;
      this._prev = null;
      this._next = null;
      this._prevDup = null;
      this._nextDup = null;
      this._prevRemoved = null;
      this._nextRemoved = null;
      this._nextAdded = null;
      this._nextMoved = null;
    }
    CollectionChangeRecord.prototype.toString = function() {
      return this.previousIndex === this.currentIndex ? lang_2.stringify(this.item) : lang_2.stringify(this.item) + '[' + lang_2.stringify(this.previousIndex) + '->' + lang_2.stringify(this.currentIndex) + ']';
    };
    return CollectionChangeRecord;
  })();
  exports.CollectionChangeRecord = CollectionChangeRecord;
  var _DuplicateItemRecordList = (function() {
    function _DuplicateItemRecordList() {
      this._head = null;
      this._tail = null;
    }
    _DuplicateItemRecordList.prototype.add = function(record) {
      if (this._head === null) {
        this._head = this._tail = record;
        record._nextDup = null;
        record._prevDup = null;
      } else {
        this._tail._nextDup = record;
        record._prevDup = this._tail;
        record._nextDup = null;
        this._tail = record;
      }
    };
    _DuplicateItemRecordList.prototype.get = function(item, afterIndex) {
      var record;
      for (record = this._head; record !== null; record = record._nextDup) {
        if ((afterIndex === null || afterIndex < record.currentIndex) && lang_2.looseIdentical(record.item, item)) {
          return record;
        }
      }
      return null;
    };
    _DuplicateItemRecordList.prototype.remove = function(record) {
      var prev = record._prevDup;
      var next = record._nextDup;
      if (prev === null) {
        this._head = next;
      } else {
        prev._nextDup = next;
      }
      if (next === null) {
        this._tail = prev;
      } else {
        next._prevDup = prev;
      }
      return this._head === null;
    };
    return _DuplicateItemRecordList;
  })();
  var _DuplicateMap = (function() {
    function _DuplicateMap() {
      this.map = collection_1.MapWrapper.create();
    }
    _DuplicateMap.prototype.put = function(record) {
      var key = lang_2.getMapKey(record.item);
      var duplicates = collection_1.MapWrapper.get(this.map, key);
      if (!lang_2.isPresent(duplicates)) {
        duplicates = new _DuplicateItemRecordList();
        collection_1.MapWrapper.set(this.map, key, duplicates);
      }
      duplicates.add(record);
    };
    _DuplicateMap.prototype.get = function(value, afterIndex) {
      if (afterIndex === void 0) {
        afterIndex = null;
      }
      var key = lang_2.getMapKey(value);
      var recordList = collection_1.MapWrapper.get(this.map, key);
      return lang_2.isBlank(recordList) ? null : recordList.get(value, afterIndex);
    };
    _DuplicateMap.prototype.remove = function(record) {
      var key = lang_2.getMapKey(record.item);
      var recordList = collection_1.MapWrapper.get(this.map, key);
      if (recordList.remove(record)) {
        collection_1.MapWrapper.delete(this.map, key);
      }
      return record;
    };
    Object.defineProperty(_DuplicateMap.prototype, "isEmpty", {
      get: function() {
        return collection_1.MapWrapper.size(this.map) === 0;
      },
      enumerable: true,
      configurable: true
    });
    _DuplicateMap.prototype.clear = function() {
      collection_1.MapWrapper.clear(this.map);
    };
    _DuplicateMap.prototype.toString = function() {
      return '_DuplicateMap(' + lang_2.stringify(this.map) + ')';
    };
    return _DuplicateMap;
  })();
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/keyvalue_changes", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var KeyValueChangesFactory = (function(_super) {
    __extends(KeyValueChangesFactory, _super);
    function KeyValueChangesFactory() {
      _super.call(this);
    }
    KeyValueChangesFactory.prototype.supports = function(obj) {
      return KeyValueChanges.supportsObj(obj);
    };
    KeyValueChangesFactory.prototype.create = function(cdRef) {
      return new KeyValueChanges();
    };
    KeyValueChangesFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], KeyValueChangesFactory);
    return KeyValueChangesFactory;
  })(pipe_1.PipeFactory);
  exports.KeyValueChangesFactory = KeyValueChangesFactory;
  var KeyValueChanges = (function(_super) {
    __extends(KeyValueChanges, _super);
    function KeyValueChanges() {
      _super.call(this);
      this._records = collection_1.MapWrapper.create();
      this._mapHead = null;
      this._previousMapHead = null;
      this._changesHead = null;
      this._changesTail = null;
      this._additionsHead = null;
      this._additionsTail = null;
      this._removalsHead = null;
      this._removalsTail = null;
    }
    KeyValueChanges.supportsObj = function(obj) {
      return obj instanceof Map || lang_1.isJsObject(obj);
    };
    KeyValueChanges.prototype.supports = function(obj) {
      return KeyValueChanges.supportsObj(obj);
    };
    KeyValueChanges.prototype.transform = function(map) {
      if (this.check(map)) {
        return pipe_1.WrappedValue.wrap(this);
      } else {
        return this;
      }
    };
    Object.defineProperty(KeyValueChanges.prototype, "isDirty", {
      get: function() {
        return this._additionsHead !== null || this._changesHead !== null || this._removalsHead !== null;
      },
      enumerable: true,
      configurable: true
    });
    KeyValueChanges.prototype.forEachItem = function(fn) {
      var record;
      for (record = this._mapHead; record !== null; record = record._next) {
        fn(record);
      }
    };
    KeyValueChanges.prototype.forEachPreviousItem = function(fn) {
      var record;
      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    };
    KeyValueChanges.prototype.forEachChangedItem = function(fn) {
      var record;
      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        fn(record);
      }
    };
    KeyValueChanges.prototype.forEachAddedItem = function(fn) {
      var record;
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    };
    KeyValueChanges.prototype.forEachRemovedItem = function(fn) {
      var record;
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    };
    KeyValueChanges.prototype.check = function(map) {
      var _this = this;
      this._reset();
      var records = this._records;
      var oldSeqRecord = this._mapHead;
      var lastOldSeqRecord = null;
      var lastNewSeqRecord = null;
      var seqChanged = false;
      this._forEach(map, function(value, key) {
        var newSeqRecord;
        if (oldSeqRecord !== null && key === oldSeqRecord.key) {
          newSeqRecord = oldSeqRecord;
          if (!lang_1.looseIdentical(value, oldSeqRecord.currentValue)) {
            oldSeqRecord.previousValue = oldSeqRecord.currentValue;
            oldSeqRecord.currentValue = value;
            _this._addToChanges(oldSeqRecord);
          }
        } else {
          seqChanged = true;
          if (oldSeqRecord !== null) {
            oldSeqRecord._next = null;
            _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);
            _this._addToRemovals(oldSeqRecord);
          }
          if (collection_1.MapWrapper.contains(records, key)) {
            newSeqRecord = collection_1.MapWrapper.get(records, key);
          } else {
            newSeqRecord = new KVChangeRecord(key);
            collection_1.MapWrapper.set(records, key, newSeqRecord);
            newSeqRecord.currentValue = value;
            _this._addToAdditions(newSeqRecord);
          }
        }
        if (seqChanged) {
          if (_this._isInRemovals(newSeqRecord)) {
            _this._removeFromRemovals(newSeqRecord);
          }
          if (lastNewSeqRecord == null) {
            _this._mapHead = newSeqRecord;
          } else {
            lastNewSeqRecord._next = newSeqRecord;
          }
        }
        lastOldSeqRecord = oldSeqRecord;
        lastNewSeqRecord = newSeqRecord;
        oldSeqRecord = oldSeqRecord === null ? null : oldSeqRecord._next;
      });
      this._truncate(lastOldSeqRecord, oldSeqRecord);
      return this.isDirty;
    };
    KeyValueChanges.prototype._reset = function() {
      if (this.isDirty) {
        var record;
        for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }
        for (record = this._changesHead; record !== null; record = record._nextChanged) {
          record.previousValue = record.currentValue;
        }
        for (record = this._additionsHead; record != null; record = record._nextAdded) {
          record.previousValue = record.currentValue;
        }
        this._changesHead = this._changesTail = null;
        this._additionsHead = this._additionsTail = null;
        this._removalsHead = this._removalsTail = null;
      }
    };
    KeyValueChanges.prototype._truncate = function(lastRecord, record) {
      while (record !== null) {
        if (lastRecord === null) {
          this._mapHead = null;
        } else {
          lastRecord._next = null;
        }
        var nextRecord = record._next;
        this._addToRemovals(record);
        lastRecord = record;
        record = nextRecord;
      }
      for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {
        rec.previousValue = rec.currentValue;
        rec.currentValue = null;
        collection_1.MapWrapper.delete(this._records, rec.key);
      }
    };
    KeyValueChanges.prototype._isInRemovals = function(record) {
      return record === this._removalsHead || record._nextRemoved !== null || record._prevRemoved !== null;
    };
    KeyValueChanges.prototype._addToRemovals = function(record) {
      if (this._removalsHead === null) {
        this._removalsHead = this._removalsTail = record;
      } else {
        this._removalsTail._nextRemoved = record;
        record._prevRemoved = this._removalsTail;
        this._removalsTail = record;
      }
    };
    KeyValueChanges.prototype._removeFromSeq = function(prev, record) {
      var next = record._next;
      if (prev === null) {
        this._mapHead = next;
      } else {
        prev._next = next;
      }
    };
    KeyValueChanges.prototype._removeFromRemovals = function(record) {
      var prev = record._prevRemoved;
      var next = record._nextRemoved;
      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }
      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }
      record._prevRemoved = record._nextRemoved = null;
    };
    KeyValueChanges.prototype._addToAdditions = function(record) {
      if (this._additionsHead === null) {
        this._additionsHead = this._additionsTail = record;
      } else {
        this._additionsTail._nextAdded = record;
        this._additionsTail = record;
      }
    };
    KeyValueChanges.prototype._addToChanges = function(record) {
      if (this._changesHead === null) {
        this._changesHead = this._changesTail = record;
      } else {
        this._changesTail._nextChanged = record;
        this._changesTail = record;
      }
    };
    KeyValueChanges.prototype.toString = function() {
      var items = [];
      var previous = [];
      var changes = [];
      var additions = [];
      var removals = [];
      var record;
      for (record = this._mapHead; record !== null; record = record._next) {
        collection_1.ListWrapper.push(items, lang_1.stringify(record));
      }
      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        collection_1.ListWrapper.push(previous, lang_1.stringify(record));
      }
      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        collection_1.ListWrapper.push(changes, lang_1.stringify(record));
      }
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        collection_1.ListWrapper.push(additions, lang_1.stringify(record));
      }
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        collection_1.ListWrapper.push(removals, lang_1.stringify(record));
      }
      return "map: " + items.join(', ') + "\n" + "previous: " + previous.join(', ') + "\n" + "additions: " + additions.join(', ') + "\n" + "changes: " + changes.join(', ') + "\n" + "removals: " + removals.join(', ') + "\n";
    };
    KeyValueChanges.prototype._forEach = function(obj, fn) {
      if (obj instanceof Map) {
        collection_1.MapWrapper.forEach(obj, fn);
      } else {
        collection_1.StringMapWrapper.forEach(obj, fn);
      }
    };
    return KeyValueChanges;
  })(pipe_1.Pipe);
  exports.KeyValueChanges = KeyValueChanges;
  var KVChangeRecord = (function() {
    function KVChangeRecord(key) {
      this.key = key;
      this.previousValue = null;
      this.currentValue = null;
      this._nextPrevious = null;
      this._next = null;
      this._nextAdded = null;
      this._nextRemoved = null;
      this._prevRemoved = null;
      this._nextChanged = null;
    }
    KVChangeRecord.prototype.toString = function() {
      return lang_1.looseIdentical(this.previousValue, this.currentValue) ? lang_1.stringify(this.key) : (lang_1.stringify(this.key) + '[' + lang_1.stringify(this.previousValue) + '->' + lang_1.stringify(this.currentValue) + ']');
    };
    return KVChangeRecord;
  })();
  exports.KVChangeRecord = KVChangeRecord;
  global.define = __define;
  return module.exports;
});

System.register("npm:process@0.10.1/browser", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var process = module.exports = {};
  var queue = [];
  var draining = false;
  function drainQueue() {
    if (draining) {
      return ;
    }
    draining = true;
    var currentQueue;
    var len = queue.length;
    while (len) {
      currentQueue = queue;
      queue = [];
      var i = -1;
      while (++i < len) {
        currentQueue[i]();
      }
      len = queue.length;
    }
    draining = false;
  }
  process.nextTick = function(fun) {
    queue.push(fun);
    if (!draining) {
      setTimeout(drainQueue, 0);
    }
  };
  process.title = 'browser';
  process.browser = true;
  process.env = {};
  process.argv = [];
  process.version = '';
  process.versions = {};
  function noop() {}
  process.on = noop;
  process.addListener = noop;
  process.once = noop;
  process.off = noop;
  process.removeListener = noop;
  process.removeAllListeners = noop;
  process.emit = noop;
  process.binding = function(name) {
    throw new Error('process.binding is not supported');
  };
  process.cwd = function() {
    return '/';
  };
  process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
  };
  process.umask = function() {
    return 0;
  };
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.aggregates", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        CompositeDisposable = Rx.CompositeDisposable,
        AnonymousObservable = Rx.AnonymousObservable,
        disposableEmpty = Rx.Disposable.empty,
        isEqual = Rx.internals.isEqual,
        helpers = Rx.helpers,
        not = helpers.not,
        defaultComparer = helpers.defaultComparer,
        identity = helpers.identity,
        defaultSubComparer = helpers.defaultSubComparer,
        isFunction = helpers.isFunction,
        isPromise = helpers.isPromise,
        isArrayLike = helpers.isArrayLike,
        isIterable = helpers.isIterable,
        observableFromPromise = Observable.fromPromise,
        observableFrom = Observable.from,
        bindCallback = Rx.internals.bindCallback,
        EmptyError = Rx.EmptyError,
        ArgumentOutOfRangeError = Rx.ArgumentOutOfRangeError;
    function extremaBy(source, keySelector, comparer) {
      return new AnonymousObservable(function(o) {
        var hasValue = false,
            lastKey = null,
            list = [];
        return source.subscribe(function(x) {
          var comparison,
              key;
          try {
            key = keySelector(x);
          } catch (ex) {
            o.onError(ex);
            return ;
          }
          comparison = 0;
          if (!hasValue) {
            hasValue = true;
            lastKey = key;
          } else {
            try {
              comparison = comparer(key, lastKey);
            } catch (ex1) {
              o.onError(ex1);
              return ;
            }
          }
          if (comparison > 0) {
            lastKey = key;
            list = [];
          }
          if (comparison >= 0) {
            list.push(x);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onNext(list);
          o.onCompleted();
        });
      }, source);
    }
    function firstOnly(x) {
      if (x.length === 0) {
        throw new EmptyError();
      }
      return x[0];
    }
    observableProto.aggregate = function() {
      var hasSeed = false,
          accumulator,
          seed,
          source = this;
      if (arguments.length === 2) {
        hasSeed = true;
        seed = arguments[0];
        accumulator = arguments[1];
      } else {
        accumulator = arguments[0];
      }
      return new AnonymousObservable(function(o) {
        var hasAccumulation,
            accumulation,
            hasValue;
        return source.subscribe(function(x) {
          !hasValue && (hasValue = true);
          try {
            if (hasAccumulation) {
              accumulation = accumulator(accumulation, x);
            } else {
              accumulation = hasSeed ? accumulator(seed, x) : x;
              hasAccumulation = true;
            }
          } catch (e) {
            return o.onError(e);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          hasValue && o.onNext(accumulation);
          !hasValue && hasSeed && o.onNext(seed);
          !hasValue && !hasSeed && o.onError(new EmptyError());
          o.onCompleted();
        });
      }, source);
    };
    observableProto.reduce = function(accumulator) {
      var hasSeed = false,
          seed,
          source = this;
      if (arguments.length === 2) {
        hasSeed = true;
        seed = arguments[1];
      }
      return new AnonymousObservable(function(o) {
        var hasAccumulation,
            accumulation,
            hasValue;
        return source.subscribe(function(x) {
          !hasValue && (hasValue = true);
          try {
            if (hasAccumulation) {
              accumulation = accumulator(accumulation, x);
            } else {
              accumulation = hasSeed ? accumulator(seed, x) : x;
              hasAccumulation = true;
            }
          } catch (e) {
            return o.onError(e);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          hasValue && o.onNext(accumulation);
          !hasValue && hasSeed && o.onNext(seed);
          !hasValue && !hasSeed && o.onError(new EmptyError());
          o.onCompleted();
        });
      }, source);
    };
    observableProto.some = function(predicate, thisArg) {
      var source = this;
      return predicate ? source.filter(predicate, thisArg).some() : new AnonymousObservable(function(observer) {
        return source.subscribe(function() {
          observer.onNext(true);
          observer.onCompleted();
        }, function(e) {
          observer.onError(e);
        }, function() {
          observer.onNext(false);
          observer.onCompleted();
        });
      }, source);
    };
    observableProto.any = function() {
      return this.some.apply(this, arguments);
    };
    observableProto.isEmpty = function() {
      return this.any().map(not);
    };
    observableProto.every = function(predicate, thisArg) {
      return this.filter(function(v) {
        return !predicate(v);
      }, thisArg).some().map(not);
    };
    observableProto.all = function() {
      return this.every.apply(this, arguments);
    };
    observableProto.includes = function(searchElement, fromIndex) {
      var source = this;
      function comparer(a, b) {
        return (a === 0 && b === 0) || (a === b || (isNaN(a) && isNaN(b)));
      }
      return new AnonymousObservable(function(o) {
        var i = 0,
            n = +fromIndex || 0;
        Math.abs(n) === Infinity && (n = 0);
        if (n < 0) {
          o.onNext(false);
          o.onCompleted();
          return disposableEmpty;
        }
        return source.subscribe(function(x) {
          if (i++ >= n && comparer(x, searchElement)) {
            o.onNext(true);
            o.onCompleted();
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onNext(false);
          o.onCompleted();
        });
      }, this);
    };
    observableProto.contains = function(searchElement, fromIndex) {
      observableProto.includes(searchElement, fromIndex);
    };
    observableProto.count = function(predicate, thisArg) {
      return predicate ? this.filter(predicate, thisArg).count() : this.reduce(function(count) {
        return count + 1;
      }, 0);
    };
    observableProto.indexOf = function(searchElement, fromIndex) {
      var source = this;
      return new AnonymousObservable(function(o) {
        var i = 0,
            n = +fromIndex || 0;
        Math.abs(n) === Infinity && (n = 0);
        if (n < 0) {
          o.onNext(-1);
          o.onCompleted();
          return disposableEmpty;
        }
        return source.subscribe(function(x) {
          if (i >= n && x === searchElement) {
            o.onNext(i);
            o.onCompleted();
          }
          i++;
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onNext(-1);
          o.onCompleted();
        });
      }, source);
    };
    observableProto.sum = function(keySelector, thisArg) {
      return keySelector && isFunction(keySelector) ? this.map(keySelector, thisArg).sum() : this.reduce(function(prev, curr) {
        return prev + curr;
      }, 0);
    };
    observableProto.minBy = function(keySelector, comparer) {
      comparer || (comparer = defaultSubComparer);
      return extremaBy(this, keySelector, function(x, y) {
        return comparer(x, y) * -1;
      });
    };
    observableProto.min = function(comparer) {
      return this.minBy(identity, comparer).map(function(x) {
        return firstOnly(x);
      });
    };
    observableProto.maxBy = function(keySelector, comparer) {
      comparer || (comparer = defaultSubComparer);
      return extremaBy(this, keySelector, comparer);
    };
    observableProto.max = function(comparer) {
      return this.maxBy(identity, comparer).map(function(x) {
        return firstOnly(x);
      });
    };
    observableProto.average = function(keySelector, thisArg) {
      return keySelector && isFunction(keySelector) ? this.map(keySelector, thisArg).average() : this.reduce(function(prev, cur) {
        return {
          sum: prev.sum + cur,
          count: prev.count + 1
        };
      }, {
        sum: 0,
        count: 0
      }).map(function(s) {
        if (s.count === 0) {
          throw new EmptyError();
        }
        return s.sum / s.count;
      });
    };
    observableProto.sequenceEqual = function(second, comparer) {
      var first = this;
      comparer || (comparer = defaultComparer);
      return new AnonymousObservable(function(o) {
        var donel = false,
            doner = false,
            ql = [],
            qr = [];
        var subscription1 = first.subscribe(function(x) {
          var equal,
              v;
          if (qr.length > 0) {
            v = qr.shift();
            try {
              equal = comparer(v, x);
            } catch (e) {
              o.onError(e);
              return ;
            }
            if (!equal) {
              o.onNext(false);
              o.onCompleted();
            }
          } else if (doner) {
            o.onNext(false);
            o.onCompleted();
          } else {
            ql.push(x);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          donel = true;
          if (ql.length === 0) {
            if (qr.length > 0) {
              o.onNext(false);
              o.onCompleted();
            } else if (doner) {
              o.onNext(true);
              o.onCompleted();
            }
          }
        });
        (isArrayLike(second) || isIterable(second)) && (second = observableFrom(second));
        isPromise(second) && (second = observableFromPromise(second));
        var subscription2 = second.subscribe(function(x) {
          var equal;
          if (ql.length > 0) {
            var v = ql.shift();
            try {
              equal = comparer(v, x);
            } catch (exception) {
              o.onError(exception);
              return ;
            }
            if (!equal) {
              o.onNext(false);
              o.onCompleted();
            }
          } else if (donel) {
            o.onNext(false);
            o.onCompleted();
          } else {
            qr.push(x);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          doner = true;
          if (qr.length === 0) {
            if (ql.length > 0) {
              o.onNext(false);
              o.onCompleted();
            } else if (donel) {
              o.onNext(true);
              o.onCompleted();
            }
          }
        });
        return new CompositeDisposable(subscription1, subscription2);
      }, first);
    };
    function elementAtOrDefault(source, index, hasDefault, defaultValue) {
      if (index < 0) {
        throw new ArgumentOutOfRangeError();
      }
      return new AnonymousObservable(function(o) {
        var i = index;
        return source.subscribe(function(x) {
          if (i-- === 0) {
            o.onNext(x);
            o.onCompleted();
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          if (!hasDefault) {
            o.onError(new ArgumentOutOfRangeError());
          } else {
            o.onNext(defaultValue);
            o.onCompleted();
          }
        });
      }, source);
    }
    observableProto.elementAt = function(index) {
      return elementAtOrDefault(this, index, false);
    };
    observableProto.elementAtOrDefault = function(index, defaultValue) {
      return elementAtOrDefault(this, index, true, defaultValue);
    };
    function singleOrDefaultAsync(source, hasDefault, defaultValue) {
      return new AnonymousObservable(function(o) {
        var value = defaultValue,
            seenValue = false;
        return source.subscribe(function(x) {
          if (seenValue) {
            o.onError(new Error('Sequence contains more than one element'));
          } else {
            value = x;
            seenValue = true;
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          if (!seenValue && !hasDefault) {
            o.onError(new EmptyError());
          } else {
            o.onNext(value);
            o.onCompleted();
          }
        });
      }, source);
    }
    observableProto.single = function(predicate, thisArg) {
      return predicate && isFunction(predicate) ? this.where(predicate, thisArg).single() : singleOrDefaultAsync(this, false);
    };
    observableProto.singleOrDefault = function(predicate, defaultValue, thisArg) {
      return predicate && isFunction(predicate) ? this.filter(predicate, thisArg).singleOrDefault(null, defaultValue) : singleOrDefaultAsync(this, true, defaultValue);
    };
    function firstOrDefaultAsync(source, hasDefault, defaultValue) {
      return new AnonymousObservable(function(o) {
        return source.subscribe(function(x) {
          o.onNext(x);
          o.onCompleted();
        }, function(e) {
          o.onError(e);
        }, function() {
          if (!hasDefault) {
            o.onError(new EmptyError());
          } else {
            o.onNext(defaultValue);
            o.onCompleted();
          }
        });
      }, source);
    }
    observableProto.first = function(predicate, thisArg) {
      return predicate ? this.where(predicate, thisArg).first() : firstOrDefaultAsync(this, false);
    };
    observableProto.firstOrDefault = function(predicate, defaultValue, thisArg) {
      return predicate ? this.where(predicate).firstOrDefault(null, defaultValue) : firstOrDefaultAsync(this, true, defaultValue);
    };
    function lastOrDefaultAsync(source, hasDefault, defaultValue) {
      return new AnonymousObservable(function(o) {
        var value = defaultValue,
            seenValue = false;
        return source.subscribe(function(x) {
          value = x;
          seenValue = true;
        }, function(e) {
          o.onError(e);
        }, function() {
          if (!seenValue && !hasDefault) {
            o.onError(new EmptyError());
          } else {
            o.onNext(value);
            o.onCompleted();
          }
        });
      }, source);
    }
    observableProto.last = function(predicate, thisArg) {
      return predicate ? this.where(predicate, thisArg).last() : lastOrDefaultAsync(this, false);
    };
    observableProto.lastOrDefault = function(predicate, defaultValue, thisArg) {
      return predicate ? this.where(predicate, thisArg).lastOrDefault(null, defaultValue) : lastOrDefaultAsync(this, true, defaultValue);
    };
    function findValue(source, predicate, thisArg, yieldIndex) {
      var callback = bindCallback(predicate, thisArg, 3);
      return new AnonymousObservable(function(o) {
        var i = 0;
        return source.subscribe(function(x) {
          var shouldRun;
          try {
            shouldRun = callback(x, i, source);
          } catch (e) {
            o.onError(e);
            return ;
          }
          if (shouldRun) {
            o.onNext(yieldIndex ? i : x);
            o.onCompleted();
          } else {
            i++;
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onNext(yieldIndex ? -1 : undefined);
          o.onCompleted();
        });
      }, source);
    }
    observableProto.find = function(predicate, thisArg) {
      return findValue(this, predicate, thisArg, false);
    };
    observableProto.findIndex = function(predicate, thisArg) {
      return findValue(this, predicate, thisArg, true);
    };
    observableProto.toSet = function() {
      if (typeof root.Set === 'undefined') {
        throw new TypeError();
      }
      var source = this;
      return new AnonymousObservable(function(o) {
        var s = new root.Set();
        return source.subscribe(function(x) {
          s.add(x);
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onNext(s);
          o.onCompleted();
        });
      }, source);
    };
    observableProto.toMap = function(keySelector, elementSelector) {
      if (typeof root.Map === 'undefined') {
        throw new TypeError();
      }
      var source = this;
      return new AnonymousObservable(function(o) {
        var m = new root.Map();
        return source.subscribe(function(x) {
          var key;
          try {
            key = keySelector(x);
          } catch (e) {
            o.onError(e);
            return ;
          }
          var element = x;
          if (elementSelector) {
            try {
              element = elementSelector(x);
            } catch (e) {
              o.onError(e);
              return ;
            }
          }
          m.set(key, element);
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onNext(m);
          o.onCompleted();
        });
      }, source);
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.async", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx.binding", "exports"], function(Rx, exports) {
        root.Rx = factory(root, exports, Rx);
        return root.Rx;
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        observableFromPromise = Observable.fromPromise,
        observableThrow = Observable.throwError,
        AnonymousObservable = Rx.AnonymousObservable,
        AsyncSubject = Rx.AsyncSubject,
        disposableCreate = Rx.Disposable.create,
        CompositeDisposable = Rx.CompositeDisposable,
        immediateScheduler = Rx.Scheduler.immediate,
        timeoutScheduler = Rx.Scheduler.timeout,
        isScheduler = Rx.helpers.isScheduler,
        slice = Array.prototype.slice;
    var fnString = 'function',
        throwString = 'throw',
        isObject = Rx.internals.isObject;
    function toThunk(obj, ctx) {
      if (Array.isArray(obj)) {
        return objectToThunk.call(ctx, obj);
      }
      if (isGeneratorFunction(obj)) {
        return observableSpawn(obj.call(ctx));
      }
      if (isGenerator(obj)) {
        return observableSpawn(obj);
      }
      if (isObservable(obj)) {
        return observableToThunk(obj);
      }
      if (isPromise(obj)) {
        return promiseToThunk(obj);
      }
      if (typeof obj === fnString) {
        return obj;
      }
      if (isObject(obj) || Array.isArray(obj)) {
        return objectToThunk.call(ctx, obj);
      }
      return obj;
    }
    function objectToThunk(obj) {
      var ctx = this;
      return function(done) {
        var keys = Object.keys(obj),
            pending = keys.length,
            results = new obj.constructor(),
            finished;
        if (!pending) {
          timeoutScheduler.schedule(function() {
            done(null, results);
          });
          return ;
        }
        for (var i = 0,
            len = keys.length; i < len; i++) {
          run(obj[keys[i]], keys[i]);
        }
        function run(fn, key) {
          if (finished) {
            return ;
          }
          try {
            fn = toThunk(fn, ctx);
            if (typeof fn !== fnString) {
              results[key] = fn;
              return --pending || done(null, results);
            }
            fn.call(ctx, function(err, res) {
              if (finished) {
                return ;
              }
              if (err) {
                finished = true;
                return done(err);
              }
              results[key] = res;
              --pending || done(null, results);
            });
          } catch (e) {
            finished = true;
            done(e);
          }
        }
      };
    }
    function observableToThunk(observable) {
      return function(fn) {
        var value,
            hasValue = false;
        observable.subscribe(function(v) {
          value = v;
          hasValue = true;
        }, fn, function() {
          hasValue && fn(null, value);
        });
      };
    }
    function promiseToThunk(promise) {
      return function(fn) {
        promise.then(function(res) {
          fn(null, res);
        }, fn);
      };
    }
    function isObservable(obj) {
      return obj && typeof obj.subscribe === fnString;
    }
    function isGeneratorFunction(obj) {
      return obj && obj.constructor && obj.constructor.name === 'GeneratorFunction';
    }
    function isGenerator(obj) {
      return obj && typeof obj.next === fnString && typeof obj[throwString] === fnString;
    }
    var observableSpawn = Rx.spawn = function(fn) {
      var isGenFun = isGeneratorFunction(fn);
      return function(done) {
        var ctx = this,
            gen = fn;
        if (isGenFun) {
          for (var args = [],
              i = 0,
              len = arguments.length; i < len; i++) {
            args.push(arguments[i]);
          }
          var len = args.length,
              hasCallback = len && typeof args[len - 1] === fnString;
          done = hasCallback ? args.pop() : handleError;
          gen = fn.apply(this, args);
        } else {
          done = done || handleError;
        }
        next();
        function exit(err, res) {
          timeoutScheduler.schedule(done.bind(ctx, err, res));
        }
        function next(err, res) {
          var ret;
          if (arguments.length > 2) {
            for (var res = [],
                i = 1,
                len = arguments.length; i < len; i++) {
              res.push(arguments[i]);
            }
          }
          if (err) {
            try {
              ret = gen[throwString](err);
            } catch (e) {
              return exit(e);
            }
          }
          if (!err) {
            try {
              ret = gen.next(res);
            } catch (e) {
              return exit(e);
            }
          }
          if (ret.done) {
            return exit(null, ret.value);
          }
          ret.value = toThunk(ret.value, ctx);
          if (typeof ret.value === fnString) {
            var called = false;
            try {
              ret.value.call(ctx, function() {
                if (called) {
                  return ;
                }
                called = true;
                next.apply(ctx, arguments);
              });
            } catch (e) {
              timeoutScheduler.schedule(function() {
                if (called) {
                  return ;
                }
                called = true;
                next.call(ctx, e);
              });
            }
            return ;
          }
          next(new TypeError('Rx.spawn only supports a function, Promise, Observable, Object or Array.'));
        }
      };
    };
    function handleError(err) {
      if (!err) {
        return ;
      }
      timeoutScheduler.schedule(function() {
        throw err;
      });
    }
    Observable.start = function(func, context, scheduler) {
      return observableToAsync(func, context, scheduler)();
    };
    var observableToAsync = Observable.toAsync = function(func, context, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return function() {
        var args = arguments,
            subject = new AsyncSubject();
        scheduler.schedule(function() {
          var result;
          try {
            result = func.apply(context, args);
          } catch (e) {
            subject.onError(e);
            return ;
          }
          subject.onNext(result);
          subject.onCompleted();
        });
        return subject.asObservable();
      };
    };
    Observable.fromCallback = function(func, context, selector) {
      return function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        return new AnonymousObservable(function(observer) {
          function handler() {
            var len = arguments.length,
                results = new Array(len);
            for (var i = 0; i < len; i++) {
              results[i] = arguments[i];
            }
            if (selector) {
              try {
                results = selector.apply(context, results);
              } catch (e) {
                return observer.onError(e);
              }
              observer.onNext(results);
            } else {
              if (results.length <= 1) {
                observer.onNext.apply(observer, results);
              } else {
                observer.onNext(results);
              }
            }
            observer.onCompleted();
          }
          args.push(handler);
          func.apply(context, args);
        }).publishLast().refCount();
      };
    };
    Observable.fromNodeCallback = function(func, context, selector) {
      return function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        return new AnonymousObservable(function(observer) {
          function handler(err) {
            if (err) {
              observer.onError(err);
              return ;
            }
            var len = arguments.length,
                results = [];
            for (var i = 1; i < len; i++) {
              results[i - 1] = arguments[i];
            }
            if (selector) {
              try {
                results = selector.apply(context, results);
              } catch (e) {
                return observer.onError(e);
              }
              observer.onNext(results);
            } else {
              if (results.length <= 1) {
                observer.onNext.apply(observer, results);
              } else {
                observer.onNext(results);
              }
            }
            observer.onCompleted();
          }
          args.push(handler);
          func.apply(context, args);
        }).publishLast().refCount();
      };
    };
    function createListener(element, name, handler) {
      if (element.addEventListener) {
        element.addEventListener(name, handler, false);
        return disposableCreate(function() {
          element.removeEventListener(name, handler, false);
        });
      }
      throw new Error('No listener found');
    }
    function createEventListener(el, eventName, handler) {
      var disposables = new CompositeDisposable();
      if (Object.prototype.toString.call(el) === '[object NodeList]') {
        for (var i = 0,
            len = el.length; i < len; i++) {
          disposables.add(createEventListener(el.item(i), eventName, handler));
        }
      } else if (el) {
        disposables.add(createListener(el, eventName, handler));
      }
      return disposables;
    }
    Rx.config.useNativeEvents = false;
    Observable.fromEvent = function(element, eventName, selector) {
      if (element.addListener) {
        return fromEventPattern(function(h) {
          element.addListener(eventName, h);
        }, function(h) {
          element.removeListener(eventName, h);
        }, selector);
      }
      if (!Rx.config.useNativeEvents) {
        if (typeof element.on === 'function' && typeof element.off === 'function') {
          return fromEventPattern(function(h) {
            element.on(eventName, h);
          }, function(h) {
            element.off(eventName, h);
          }, selector);
        }
      }
      return new AnonymousObservable(function(observer) {
        return createEventListener(element, eventName, function handler(e) {
          var results = e;
          if (selector) {
            try {
              results = selector(arguments);
            } catch (err) {
              return observer.onError(err);
            }
          }
          observer.onNext(results);
        });
      }).publish().refCount();
    };
    var fromEventPattern = Observable.fromEventPattern = function(addHandler, removeHandler, selector) {
      return new AnonymousObservable(function(observer) {
        function innerHandler(e) {
          var result = e;
          if (selector) {
            try {
              result = selector(arguments);
            } catch (err) {
              return observer.onError(err);
            }
          }
          observer.onNext(result);
        }
        var returnValue = addHandler(innerHandler);
        return disposableCreate(function() {
          if (removeHandler) {
            removeHandler(innerHandler, returnValue);
          }
        });
      }).publish().refCount();
    };
    Observable.startAsync = function(functionAsync) {
      var promise;
      try {
        promise = functionAsync();
      } catch (e) {
        return observableThrow(e);
      }
      return observableFromPromise(promise);
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.backpressure", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        AnonymousObservable = Rx.AnonymousObservable,
        AbstractObserver = Rx.internals.AbstractObserver,
        CompositeDisposable = Rx.CompositeDisposable,
        Subject = Rx.Subject,
        Observer = Rx.Observer,
        disposableEmpty = Rx.Disposable.empty,
        disposableCreate = Rx.Disposable.create,
        inherits = Rx.internals.inherits,
        addProperties = Rx.internals.addProperties,
        timeoutScheduler = Rx.Scheduler.timeout,
        currentThreadScheduler = Rx.Scheduler.currentThread,
        identity = Rx.helpers.identity,
        checkDisposed = Rx.Disposable.checkDisposed;
    Rx.Pauser = (function(__super__) {
      inherits(Pauser, __super__);
      function Pauser() {
        __super__.call(this);
      }
      Pauser.prototype.pause = function() {
        this.onNext(false);
      };
      Pauser.prototype.resume = function() {
        this.onNext(true);
      };
      return Pauser;
    }(Subject));
    var PausableObservable = (function(__super__) {
      inherits(PausableObservable, __super__);
      function subscribe(observer) {
        var conn = this.source.publish(),
            subscription = conn.subscribe(observer),
            connection = disposableEmpty;
        var pausable = this.pauser.distinctUntilChanged().subscribe(function(b) {
          if (b) {
            connection = conn.connect();
          } else {
            connection.dispose();
            connection = disposableEmpty;
          }
        });
        return new CompositeDisposable(subscription, connection, pausable);
      }
      function PausableObservable(source, pauser) {
        this.source = source;
        this.controller = new Subject();
        if (pauser && pauser.subscribe) {
          this.pauser = this.controller.merge(pauser);
        } else {
          this.pauser = this.controller;
        }
        __super__.call(this, subscribe, source);
      }
      PausableObservable.prototype.pause = function() {
        this.controller.onNext(false);
      };
      PausableObservable.prototype.resume = function() {
        this.controller.onNext(true);
      };
      return PausableObservable;
    }(Observable));
    observableProto.pausable = function(pauser) {
      return new PausableObservable(this, pauser);
    };
    function combineLatestSource(source, subject, resultSelector) {
      return new AnonymousObservable(function(o) {
        var hasValue = [false, false],
            hasValueAll = false,
            isDone = false,
            values = new Array(2),
            err;
        function next(x, i) {
          values[i] = x;
          var res;
          hasValue[i] = true;
          if (hasValueAll || (hasValueAll = hasValue.every(identity))) {
            if (err) {
              o.onError(err);
              return ;
            }
            try {
              res = resultSelector.apply(null, values);
            } catch (ex) {
              o.onError(ex);
              return ;
            }
            o.onNext(res);
          }
          if (isDone && values[1]) {
            o.onCompleted();
          }
        }
        return new CompositeDisposable(source.subscribe(function(x) {
          next(x, 0);
        }, function(e) {
          if (values[1]) {
            o.onError(e);
          } else {
            err = e;
          }
        }, function() {
          isDone = true;
          values[1] && o.onCompleted();
        }), subject.subscribe(function(x) {
          next(x, 1);
        }, function(e) {
          o.onError(e);
        }, function() {
          isDone = true;
          next(true, 1);
        }));
      }, source);
    }
    var PausableBufferedObservable = (function(__super__) {
      inherits(PausableBufferedObservable, __super__);
      function subscribe(o) {
        var q = [],
            previousShouldFire;
        var subscription = combineLatestSource(this.source, this.pauser.distinctUntilChanged().startWith(false), function(data, shouldFire) {
          return {
            data: data,
            shouldFire: shouldFire
          };
        }).subscribe(function(results) {
          if (previousShouldFire !== undefined && results.shouldFire != previousShouldFire) {
            previousShouldFire = results.shouldFire;
            if (results.shouldFire) {
              while (q.length > 0) {
                o.onNext(q.shift());
              }
            }
          } else {
            previousShouldFire = results.shouldFire;
            if (results.shouldFire) {
              o.onNext(results.data);
            } else {
              q.push(results.data);
            }
          }
        }, function(err) {
          while (q.length > 0) {
            o.onNext(q.shift());
          }
          o.onError(err);
        }, function() {
          while (q.length > 0) {
            o.onNext(q.shift());
          }
          o.onCompleted();
        });
        return subscription;
      }
      function PausableBufferedObservable(source, pauser) {
        this.source = source;
        this.controller = new Subject();
        if (pauser && pauser.subscribe) {
          this.pauser = this.controller.merge(pauser);
        } else {
          this.pauser = this.controller;
        }
        __super__.call(this, subscribe, source);
      }
      PausableBufferedObservable.prototype.pause = function() {
        this.controller.onNext(false);
      };
      PausableBufferedObservable.prototype.resume = function() {
        this.controller.onNext(true);
      };
      return PausableBufferedObservable;
    }(Observable));
    observableProto.pausableBuffered = function(subject) {
      return new PausableBufferedObservable(this, subject);
    };
    var ControlledObservable = (function(__super__) {
      inherits(ControlledObservable, __super__);
      function subscribe(observer) {
        return this.source.subscribe(observer);
      }
      function ControlledObservable(source, enableQueue) {
        __super__.call(this, subscribe, source);
        this.subject = new ControlledSubject(enableQueue);
        this.source = source.multicast(this.subject).refCount();
      }
      ControlledObservable.prototype.request = function(numberOfItems) {
        if (numberOfItems == null) {
          numberOfItems = -1;
        }
        return this.subject.request(numberOfItems);
      };
      return ControlledObservable;
    }(Observable));
    var ControlledSubject = (function(__super__) {
      function subscribe(observer) {
        return this.subject.subscribe(observer);
      }
      inherits(ControlledSubject, __super__);
      function ControlledSubject(enableQueue) {
        enableQueue == null && (enableQueue = true);
        __super__.call(this, subscribe);
        this.subject = new Subject();
        this.enableQueue = enableQueue;
        this.queue = enableQueue ? [] : null;
        this.requestedCount = 0;
        this.requestedDisposable = disposableEmpty;
        this.error = null;
        this.hasFailed = false;
        this.hasCompleted = false;
      }
      addProperties(ControlledSubject.prototype, Observer, {
        onCompleted: function() {
          this.hasCompleted = true;
          if (!this.enableQueue || this.queue.length === 0)
            this.subject.onCompleted();
          else
            this.queue.push(Rx.Notification.createOnCompleted());
        },
        onError: function(error) {
          this.hasFailed = true;
          this.error = error;
          if (!this.enableQueue || this.queue.length === 0)
            this.subject.onError(error);
          else
            this.queue.push(Rx.Notification.createOnError(error));
        },
        onNext: function(value) {
          var hasRequested = false;
          if (this.requestedCount === 0) {
            this.enableQueue && this.queue.push(Rx.Notification.createOnNext(value));
          } else {
            (this.requestedCount !== -1 && this.requestedCount-- === 0) && this.disposeCurrentRequest();
            hasRequested = true;
          }
          hasRequested && this.subject.onNext(value);
        },
        _processRequest: function(numberOfItems) {
          if (this.enableQueue) {
            while ((this.queue.length >= numberOfItems && numberOfItems > 0) || (this.queue.length > 0 && this.queue[0].kind !== 'N')) {
              var first = this.queue.shift();
              first.accept(this.subject);
              if (first.kind === 'N')
                numberOfItems--;
              else {
                this.disposeCurrentRequest();
                this.queue = [];
              }
            }
            return {
              numberOfItems: numberOfItems,
              returnValue: this.queue.length !== 0
            };
          }
          return {
            numberOfItems: numberOfItems,
            returnValue: false
          };
        },
        request: function(number) {
          this.disposeCurrentRequest();
          var self = this,
              r = this._processRequest(number);
          var number = r.numberOfItems;
          if (!r.returnValue) {
            this.requestedCount = number;
            this.requestedDisposable = disposableCreate(function() {
              self.requestedCount = 0;
            });
            return this.requestedDisposable;
          } else {
            return disposableEmpty;
          }
        },
        disposeCurrentRequest: function() {
          this.requestedDisposable.dispose();
          this.requestedDisposable = disposableEmpty;
        }
      });
      return ControlledSubject;
    }(Observable));
    observableProto.controlled = function(enableQueue) {
      if (enableQueue == null) {
        enableQueue = true;
      }
      return new ControlledObservable(this, enableQueue);
    };
    var StopAndWaitObservable = (function(__super__) {
      function subscribe(observer) {
        this.subscription = this.source.subscribe(new StopAndWaitObserver(observer, this, this.subscription));
        var self = this;
        timeoutScheduler.schedule(function() {
          self.source.request(1);
        });
        return this.subscription;
      }
      inherits(StopAndWaitObservable, __super__);
      function StopAndWaitObservable(source) {
        __super__.call(this, subscribe, source);
        this.source = source;
      }
      var StopAndWaitObserver = (function(__sub__) {
        inherits(StopAndWaitObserver, __sub__);
        function StopAndWaitObserver(observer, observable, cancel) {
          __sub__.call(this);
          this.observer = observer;
          this.observable = observable;
          this.cancel = cancel;
        }
        var stopAndWaitObserverProto = StopAndWaitObserver.prototype;
        stopAndWaitObserverProto.completed = function() {
          this.observer.onCompleted();
          this.dispose();
        };
        stopAndWaitObserverProto.error = function(error) {
          this.observer.onError(error);
          this.dispose();
        };
        stopAndWaitObserverProto.next = function(value) {
          this.observer.onNext(value);
          var self = this;
          timeoutScheduler.schedule(function() {
            self.observable.source.request(1);
          });
        };
        stopAndWaitObserverProto.dispose = function() {
          this.observer = null;
          if (this.cancel) {
            this.cancel.dispose();
            this.cancel = null;
          }
          __sub__.prototype.dispose.call(this);
        };
        return StopAndWaitObserver;
      }(AbstractObserver));
      return StopAndWaitObservable;
    }(Observable));
    ControlledObservable.prototype.stopAndWait = function() {
      return new StopAndWaitObservable(this);
    };
    var WindowedObservable = (function(__super__) {
      function subscribe(observer) {
        this.subscription = this.source.subscribe(new WindowedObserver(observer, this, this.subscription));
        var self = this;
        timeoutScheduler.schedule(function() {
          self.source.request(self.windowSize);
        });
        return this.subscription;
      }
      inherits(WindowedObservable, __super__);
      function WindowedObservable(source, windowSize) {
        __super__.call(this, subscribe, source);
        this.source = source;
        this.windowSize = windowSize;
      }
      var WindowedObserver = (function(__sub__) {
        inherits(WindowedObserver, __sub__);
        function WindowedObserver(observer, observable, cancel) {
          this.observer = observer;
          this.observable = observable;
          this.cancel = cancel;
          this.received = 0;
        }
        var windowedObserverPrototype = WindowedObserver.prototype;
        windowedObserverPrototype.completed = function() {
          this.observer.onCompleted();
          this.dispose();
        };
        windowedObserverPrototype.error = function(error) {
          this.observer.onError(error);
          this.dispose();
        };
        windowedObserverPrototype.next = function(value) {
          this.observer.onNext(value);
          this.received = ++this.received % this.observable.windowSize;
          if (this.received === 0) {
            var self = this;
            timeoutScheduler.schedule(function() {
              self.observable.source.request(self.observable.windowSize);
            });
          }
        };
        windowedObserverPrototype.dispose = function() {
          this.observer = null;
          if (this.cancel) {
            this.cancel.dispose();
            this.cancel = null;
          }
          __sub__.prototype.dispose.call(this);
        };
        return WindowedObserver;
      }(AbstractObserver));
      return WindowedObservable;
    }(Observable));
    ControlledObservable.prototype.windowed = function(windowSize) {
      return new WindowedObservable(this, windowSize);
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.binding", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        AnonymousObservable = Rx.AnonymousObservable,
        Subject = Rx.Subject,
        AsyncSubject = Rx.AsyncSubject,
        Observer = Rx.Observer,
        ScheduledObserver = Rx.internals.ScheduledObserver,
        disposableCreate = Rx.Disposable.create,
        disposableEmpty = Rx.Disposable.empty,
        CompositeDisposable = Rx.CompositeDisposable,
        currentThreadScheduler = Rx.Scheduler.currentThread,
        isFunction = Rx.helpers.isFunction,
        inherits = Rx.internals.inherits,
        addProperties = Rx.internals.addProperties,
        checkDisposed = Rx.Disposable.checkDisposed;
    function cloneArray(arr) {
      var len = arr.length,
          a = new Array(len);
      for (var i = 0; i < len; i++) {
        a[i] = arr[i];
      }
      return a;
    }
    observableProto.multicast = function(subjectOrSubjectSelector, selector) {
      var source = this;
      return typeof subjectOrSubjectSelector === 'function' ? new AnonymousObservable(function(observer) {
        var connectable = source.multicast(subjectOrSubjectSelector());
        return new CompositeDisposable(selector(connectable).subscribe(observer), connectable.connect());
      }, source) : new ConnectableObservable(source, subjectOrSubjectSelector);
    };
    observableProto.publish = function(selector) {
      return selector && isFunction(selector) ? this.multicast(function() {
        return new Subject();
      }, selector) : this.multicast(new Subject());
    };
    observableProto.share = function() {
      return this.publish().refCount();
    };
    observableProto.publishLast = function(selector) {
      return selector && isFunction(selector) ? this.multicast(function() {
        return new AsyncSubject();
      }, selector) : this.multicast(new AsyncSubject());
    };
    observableProto.publishValue = function(initialValueOrSelector, initialValue) {
      return arguments.length === 2 ? this.multicast(function() {
        return new BehaviorSubject(initialValue);
      }, initialValueOrSelector) : this.multicast(new BehaviorSubject(initialValueOrSelector));
    };
    observableProto.shareValue = function(initialValue) {
      return this.publishValue(initialValue).refCount();
    };
    observableProto.replay = function(selector, bufferSize, windowSize, scheduler) {
      return selector && isFunction(selector) ? this.multicast(function() {
        return new ReplaySubject(bufferSize, windowSize, scheduler);
      }, selector) : this.multicast(new ReplaySubject(bufferSize, windowSize, scheduler));
    };
    observableProto.shareReplay = function(bufferSize, windowSize, scheduler) {
      return this.replay(null, bufferSize, windowSize, scheduler).refCount();
    };
    var InnerSubscription = function(subject, observer) {
      this.subject = subject;
      this.observer = observer;
    };
    InnerSubscription.prototype.dispose = function() {
      if (!this.subject.isDisposed && this.observer !== null) {
        var idx = this.subject.observers.indexOf(this.observer);
        this.subject.observers.splice(idx, 1);
        this.observer = null;
      }
    };
    var BehaviorSubject = Rx.BehaviorSubject = (function(__super__) {
      function subscribe(observer) {
        checkDisposed(this);
        if (!this.isStopped) {
          this.observers.push(observer);
          observer.onNext(this.value);
          return new InnerSubscription(this, observer);
        }
        if (this.hasError) {
          observer.onError(this.error);
        } else {
          observer.onCompleted();
        }
        return disposableEmpty;
      }
      inherits(BehaviorSubject, __super__);
      function BehaviorSubject(value) {
        __super__.call(this, subscribe);
        this.value = value, this.observers = [], this.isDisposed = false, this.isStopped = false, this.hasError = false;
      }
      addProperties(BehaviorSubject.prototype, Observer, {
        getValue: function() {
          checkDisposed(this);
          if (this.hasError) {
            throw this.error;
          }
          return this.value;
        },
        hasObservers: function() {
          return this.observers.length > 0;
        },
        onCompleted: function() {
          checkDisposed(this);
          if (this.isStopped) {
            return ;
          }
          this.isStopped = true;
          for (var i = 0,
              os = cloneArray(this.observers),
              len = os.length; i < len; i++) {
            os[i].onCompleted();
          }
          this.observers.length = 0;
        },
        onError: function(error) {
          checkDisposed(this);
          if (this.isStopped) {
            return ;
          }
          this.isStopped = true;
          this.hasError = true;
          this.error = error;
          for (var i = 0,
              os = cloneArray(this.observers),
              len = os.length; i < len; i++) {
            os[i].onError(error);
          }
          this.observers.length = 0;
        },
        onNext: function(value) {
          checkDisposed(this);
          if (this.isStopped) {
            return ;
          }
          this.value = value;
          for (var i = 0,
              os = cloneArray(this.observers),
              len = os.length; i < len; i++) {
            os[i].onNext(value);
          }
        },
        dispose: function() {
          this.isDisposed = true;
          this.observers = null;
          this.value = null;
          this.exception = null;
        }
      });
      return BehaviorSubject;
    }(Observable));
    var ReplaySubject = Rx.ReplaySubject = (function(__super__) {
      var maxSafeInteger = Math.pow(2, 53) - 1;
      function createRemovableDisposable(subject, observer) {
        return disposableCreate(function() {
          observer.dispose();
          !subject.isDisposed && subject.observers.splice(subject.observers.indexOf(observer), 1);
        });
      }
      function subscribe(observer) {
        var so = new ScheduledObserver(this.scheduler, observer),
            subscription = createRemovableDisposable(this, so);
        checkDisposed(this);
        this._trim(this.scheduler.now());
        this.observers.push(so);
        for (var i = 0,
            len = this.q.length; i < len; i++) {
          so.onNext(this.q[i].value);
        }
        if (this.hasError) {
          so.onError(this.error);
        } else if (this.isStopped) {
          so.onCompleted();
        }
        so.ensureActive();
        return subscription;
      }
      inherits(ReplaySubject, __super__);
      function ReplaySubject(bufferSize, windowSize, scheduler) {
        this.bufferSize = bufferSize == null ? maxSafeInteger : bufferSize;
        this.windowSize = windowSize == null ? maxSafeInteger : windowSize;
        this.scheduler = scheduler || currentThreadScheduler;
        this.q = [];
        this.observers = [];
        this.isStopped = false;
        this.isDisposed = false;
        this.hasError = false;
        this.error = null;
        __super__.call(this, subscribe);
      }
      addProperties(ReplaySubject.prototype, Observer.prototype, {
        hasObservers: function() {
          return this.observers.length > 0;
        },
        _trim: function(now) {
          while (this.q.length > this.bufferSize) {
            this.q.shift();
          }
          while (this.q.length > 0 && (now - this.q[0].interval) > this.windowSize) {
            this.q.shift();
          }
        },
        onNext: function(value) {
          checkDisposed(this);
          if (this.isStopped) {
            return ;
          }
          var now = this.scheduler.now();
          this.q.push({
            interval: now,
            value: value
          });
          this._trim(now);
          for (var i = 0,
              os = cloneArray(this.observers),
              len = os.length; i < len; i++) {
            var observer = os[i];
            observer.onNext(value);
            observer.ensureActive();
          }
        },
        onError: function(error) {
          checkDisposed(this);
          if (this.isStopped) {
            return ;
          }
          this.isStopped = true;
          this.error = error;
          this.hasError = true;
          var now = this.scheduler.now();
          this._trim(now);
          for (var i = 0,
              os = cloneArray(this.observers),
              len = os.length; i < len; i++) {
            var observer = os[i];
            observer.onError(error);
            observer.ensureActive();
          }
          this.observers.length = 0;
        },
        onCompleted: function() {
          checkDisposed(this);
          if (this.isStopped) {
            return ;
          }
          this.isStopped = true;
          var now = this.scheduler.now();
          this._trim(now);
          for (var i = 0,
              os = cloneArray(this.observers),
              len = os.length; i < len; i++) {
            var observer = os[i];
            observer.onCompleted();
            observer.ensureActive();
          }
          this.observers.length = 0;
        },
        dispose: function() {
          this.isDisposed = true;
          this.observers = null;
        }
      });
      return ReplaySubject;
    }(Observable));
    var ConnectableObservable = Rx.ConnectableObservable = (function(__super__) {
      inherits(ConnectableObservable, __super__);
      function ConnectableObservable(source, subject) {
        var hasSubscription = false,
            subscription,
            sourceObservable = source.asObservable();
        this.connect = function() {
          if (!hasSubscription) {
            hasSubscription = true;
            subscription = new CompositeDisposable(sourceObservable.subscribe(subject), disposableCreate(function() {
              hasSubscription = false;
            }));
          }
          return subscription;
        };
        __super__.call(this, function(o) {
          return subject.subscribe(o);
        });
      }
      ConnectableObservable.prototype.refCount = function() {
        var connectableSubscription,
            count = 0,
            source = this;
        return new AnonymousObservable(function(observer) {
          var shouldConnect = ++count === 1,
              subscription = source.subscribe(observer);
          shouldConnect && (connectableSubscription = source.connect());
          return function() {
            subscription.dispose();
            --count === 0 && connectableSubscription.dispose();
          };
        });
      };
      return ConnectableObservable;
    }(Observable));
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.coincidence", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        CompositeDisposable = Rx.CompositeDisposable,
        RefCountDisposable = Rx.RefCountDisposable,
        SingleAssignmentDisposable = Rx.SingleAssignmentDisposable,
        SerialDisposable = Rx.SerialDisposable,
        Subject = Rx.Subject,
        observableProto = Observable.prototype,
        observableEmpty = Observable.empty,
        observableNever = Observable.never,
        AnonymousObservable = Rx.AnonymousObservable,
        observerCreate = Rx.Observer.create,
        addRef = Rx.internals.addRef,
        defaultComparer = Rx.internals.isEqual,
        inherits = Rx.internals.inherits,
        noop = Rx.helpers.noop,
        identity = Rx.helpers.identity,
        isPromise = Rx.helpers.isPromise,
        observableFromPromise = Observable.fromPromise,
        ArgumentOutOfRangeError = Rx.ArgumentOutOfRangeError;
    var Dictionary = (function() {
      var primes = [1, 3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143, 4194301, 8388593, 16777213, 33554393, 67108859, 134217689, 268435399, 536870909, 1073741789, 2147483647],
          noSuchkey = "no such key",
          duplicatekey = "duplicate key";
      function isPrime(candidate) {
        if ((candidate & 1) === 0) {
          return candidate === 2;
        }
        var num1 = Math.sqrt(candidate),
            num2 = 3;
        while (num2 <= num1) {
          if (candidate % num2 === 0) {
            return false;
          }
          num2 += 2;
        }
        return true;
      }
      function getPrime(min) {
        var index,
            num,
            candidate;
        for (index = 0; index < primes.length; ++index) {
          num = primes[index];
          if (num >= min) {
            return num;
          }
        }
        candidate = min | 1;
        while (candidate < primes[primes.length - 1]) {
          if (isPrime(candidate)) {
            return candidate;
          }
          candidate += 2;
        }
        return min;
      }
      function stringHashFn(str) {
        var hash = 757602046;
        if (!str.length) {
          return hash;
        }
        for (var i = 0,
            len = str.length; i < len; i++) {
          var character = str.charCodeAt(i);
          hash = ((hash << 5) - hash) + character;
          hash = hash & hash;
        }
        return hash;
      }
      function numberHashFn(key) {
        var c2 = 0x27d4eb2d;
        key = (key ^ 61) ^ (key >>> 16);
        key = key + (key << 3);
        key = key ^ (key >>> 4);
        key = key * c2;
        key = key ^ (key >>> 15);
        return key;
      }
      var getHashCode = (function() {
        var uniqueIdCounter = 0;
        return function(obj) {
          if (obj == null) {
            throw new Error(noSuchkey);
          }
          if (typeof obj === 'string') {
            return stringHashFn(obj);
          }
          if (typeof obj === 'number') {
            return numberHashFn(obj);
          }
          if (typeof obj === 'boolean') {
            return obj === true ? 1 : 0;
          }
          if (obj instanceof Date) {
            return numberHashFn(obj.valueOf());
          }
          if (obj instanceof RegExp) {
            return stringHashFn(obj.toString());
          }
          if (typeof obj.valueOf === 'function') {
            var valueOf = obj.valueOf();
            if (typeof valueOf === 'number') {
              return numberHashFn(valueOf);
            }
            if (typeof valueOf === 'string') {
              return stringHashFn(valueOf);
            }
          }
          if (obj.hashCode) {
            return obj.hashCode();
          }
          var id = 17 * uniqueIdCounter++;
          obj.hashCode = function() {
            return id;
          };
          return id;
        };
      }());
      function newEntry() {
        return {
          key: null,
          value: null,
          next: 0,
          hashCode: 0
        };
      }
      function Dictionary(capacity, comparer) {
        if (capacity < 0) {
          throw new ArgumentOutOfRangeError();
        }
        if (capacity > 0) {
          this._initialize(capacity);
        }
        this.comparer = comparer || defaultComparer;
        this.freeCount = 0;
        this.size = 0;
        this.freeList = -1;
      }
      var dictionaryProto = Dictionary.prototype;
      dictionaryProto._initialize = function(capacity) {
        var prime = getPrime(capacity),
            i;
        this.buckets = new Array(prime);
        this.entries = new Array(prime);
        for (i = 0; i < prime; i++) {
          this.buckets[i] = -1;
          this.entries[i] = newEntry();
        }
        this.freeList = -1;
      };
      dictionaryProto.add = function(key, value) {
        this._insert(key, value, true);
      };
      dictionaryProto._insert = function(key, value, add) {
        if (!this.buckets) {
          this._initialize(0);
        }
        var index3,
            num = getHashCode(key) & 2147483647,
            index1 = num % this.buckets.length;
        for (var index2 = this.buckets[index1]; index2 >= 0; index2 = this.entries[index2].next) {
          if (this.entries[index2].hashCode === num && this.comparer(this.entries[index2].key, key)) {
            if (add) {
              throw new Error(duplicatekey);
            }
            this.entries[index2].value = value;
            return ;
          }
        }
        if (this.freeCount > 0) {
          index3 = this.freeList;
          this.freeList = this.entries[index3].next;
          --this.freeCount;
        } else {
          if (this.size === this.entries.length) {
            this._resize();
            index1 = num % this.buckets.length;
          }
          index3 = this.size;
          ++this.size;
        }
        this.entries[index3].hashCode = num;
        this.entries[index3].next = this.buckets[index1];
        this.entries[index3].key = key;
        this.entries[index3].value = value;
        this.buckets[index1] = index3;
      };
      dictionaryProto._resize = function() {
        var prime = getPrime(this.size * 2),
            numArray = new Array(prime);
        for (index = 0; index < numArray.length; ++index) {
          numArray[index] = -1;
        }
        var entryArray = new Array(prime);
        for (index = 0; index < this.size; ++index) {
          entryArray[index] = this.entries[index];
        }
        for (var index = this.size; index < prime; ++index) {
          entryArray[index] = newEntry();
        }
        for (var index1 = 0; index1 < this.size; ++index1) {
          var index2 = entryArray[index1].hashCode % prime;
          entryArray[index1].next = numArray[index2];
          numArray[index2] = index1;
        }
        this.buckets = numArray;
        this.entries = entryArray;
      };
      dictionaryProto.remove = function(key) {
        if (this.buckets) {
          var num = getHashCode(key) & 2147483647,
              index1 = num % this.buckets.length,
              index2 = -1;
          for (var index3 = this.buckets[index1]; index3 >= 0; index3 = this.entries[index3].next) {
            if (this.entries[index3].hashCode === num && this.comparer(this.entries[index3].key, key)) {
              if (index2 < 0) {
                this.buckets[index1] = this.entries[index3].next;
              } else {
                this.entries[index2].next = this.entries[index3].next;
              }
              this.entries[index3].hashCode = -1;
              this.entries[index3].next = this.freeList;
              this.entries[index3].key = null;
              this.entries[index3].value = null;
              this.freeList = index3;
              ++this.freeCount;
              return true;
            } else {
              index2 = index3;
            }
          }
        }
        return false;
      };
      dictionaryProto.clear = function() {
        var index,
            len;
        if (this.size <= 0) {
          return ;
        }
        for (index = 0, len = this.buckets.length; index < len; ++index) {
          this.buckets[index] = -1;
        }
        for (index = 0; index < this.size; ++index) {
          this.entries[index] = newEntry();
        }
        this.freeList = -1;
        this.size = 0;
      };
      dictionaryProto._findEntry = function(key) {
        if (this.buckets) {
          var num = getHashCode(key) & 2147483647;
          for (var index = this.buckets[num % this.buckets.length]; index >= 0; index = this.entries[index].next) {
            if (this.entries[index].hashCode === num && this.comparer(this.entries[index].key, key)) {
              return index;
            }
          }
        }
        return -1;
      };
      dictionaryProto.count = function() {
        return this.size - this.freeCount;
      };
      dictionaryProto.tryGetValue = function(key) {
        var entry = this._findEntry(key);
        return entry >= 0 ? this.entries[entry].value : undefined;
      };
      dictionaryProto.getValues = function() {
        var index = 0,
            results = [];
        if (this.entries) {
          for (var index1 = 0; index1 < this.size; index1++) {
            if (this.entries[index1].hashCode >= 0) {
              results[index++] = this.entries[index1].value;
            }
          }
        }
        return results;
      };
      dictionaryProto.get = function(key) {
        var entry = this._findEntry(key);
        if (entry >= 0) {
          return this.entries[entry].value;
        }
        throw new Error(noSuchkey);
      };
      dictionaryProto.set = function(key, value) {
        this._insert(key, value, false);
      };
      dictionaryProto.containskey = function(key) {
        return this._findEntry(key) >= 0;
      };
      return Dictionary;
    }());
    observableProto.join = function(right, leftDurationSelector, rightDurationSelector, resultSelector) {
      var left = this;
      return new AnonymousObservable(function(observer) {
        var group = new CompositeDisposable();
        var leftDone = false,
            rightDone = false;
        var leftId = 0,
            rightId = 0;
        var leftMap = new Dictionary(),
            rightMap = new Dictionary();
        group.add(left.subscribe(function(value) {
          var id = leftId++;
          var md = new SingleAssignmentDisposable();
          leftMap.add(id, value);
          group.add(md);
          var expire = function() {
            leftMap.remove(id) && leftMap.count() === 0 && leftDone && observer.onCompleted();
            group.remove(md);
          };
          var duration;
          try {
            duration = leftDurationSelector(value);
          } catch (e) {
            observer.onError(e);
            return ;
          }
          md.setDisposable(duration.take(1).subscribe(noop, observer.onError.bind(observer), expire));
          rightMap.getValues().forEach(function(v) {
            var result;
            try {
              result = resultSelector(value, v);
            } catch (exn) {
              observer.onError(exn);
              return ;
            }
            observer.onNext(result);
          });
        }, observer.onError.bind(observer), function() {
          leftDone = true;
          (rightDone || leftMap.count() === 0) && observer.onCompleted();
        }));
        group.add(right.subscribe(function(value) {
          var id = rightId++;
          var md = new SingleAssignmentDisposable();
          rightMap.add(id, value);
          group.add(md);
          var expire = function() {
            rightMap.remove(id) && rightMap.count() === 0 && rightDone && observer.onCompleted();
            group.remove(md);
          };
          var duration;
          try {
            duration = rightDurationSelector(value);
          } catch (e) {
            observer.onError(e);
            return ;
          }
          md.setDisposable(duration.take(1).subscribe(noop, observer.onError.bind(observer), expire));
          leftMap.getValues().forEach(function(v) {
            var result;
            try {
              result = resultSelector(v, value);
            } catch (exn) {
              observer.onError(exn);
              return ;
            }
            observer.onNext(result);
          });
        }, observer.onError.bind(observer), function() {
          rightDone = true;
          (leftDone || rightMap.count() === 0) && observer.onCompleted();
        }));
        return group;
      }, left);
    };
    observableProto.groupJoin = function(right, leftDurationSelector, rightDurationSelector, resultSelector) {
      var left = this;
      return new AnonymousObservable(function(observer) {
        var group = new CompositeDisposable();
        var r = new RefCountDisposable(group);
        var leftMap = new Dictionary(),
            rightMap = new Dictionary();
        var leftId = 0,
            rightId = 0;
        function handleError(e) {
          return function(v) {
            v.onError(e);
          };
        }
        ;
        group.add(left.subscribe(function(value) {
          var s = new Subject();
          var id = leftId++;
          leftMap.add(id, s);
          var result;
          try {
            result = resultSelector(value, addRef(s, r));
          } catch (e) {
            leftMap.getValues().forEach(handleError(e));
            observer.onError(e);
            return ;
          }
          observer.onNext(result);
          rightMap.getValues().forEach(function(v) {
            s.onNext(v);
          });
          var md = new SingleAssignmentDisposable();
          group.add(md);
          var expire = function() {
            leftMap.remove(id) && s.onCompleted();
            group.remove(md);
          };
          var duration;
          try {
            duration = leftDurationSelector(value);
          } catch (e) {
            leftMap.getValues().forEach(handleError(e));
            observer.onError(e);
            return ;
          }
          md.setDisposable(duration.take(1).subscribe(noop, function(e) {
            leftMap.getValues().forEach(handleError(e));
            observer.onError(e);
          }, expire));
        }, function(e) {
          leftMap.getValues().forEach(handleError(e));
          observer.onError(e);
        }, observer.onCompleted.bind(observer)));
        group.add(right.subscribe(function(value) {
          var id = rightId++;
          rightMap.add(id, value);
          var md = new SingleAssignmentDisposable();
          group.add(md);
          var expire = function() {
            rightMap.remove(id);
            group.remove(md);
          };
          var duration;
          try {
            duration = rightDurationSelector(value);
          } catch (e) {
            leftMap.getValues().forEach(handleError(e));
            observer.onError(e);
            return ;
          }
          md.setDisposable(duration.take(1).subscribe(noop, function(e) {
            leftMap.getValues().forEach(handleError(e));
            observer.onError(e);
          }, expire));
          leftMap.getValues().forEach(function(v) {
            v.onNext(value);
          });
        }, function(e) {
          leftMap.getValues().forEach(handleError(e));
          observer.onError(e);
        }));
        return r;
      }, left);
    };
    observableProto.buffer = function(bufferOpeningsOrClosingSelector, bufferClosingSelector) {
      return this.window.apply(this, arguments).selectMany(function(x) {
        return x.toArray();
      });
    };
    observableProto.window = function(windowOpeningsOrClosingSelector, windowClosingSelector) {
      if (arguments.length === 1 && typeof arguments[0] !== 'function') {
        return observableWindowWithBoundaries.call(this, windowOpeningsOrClosingSelector);
      }
      return typeof windowOpeningsOrClosingSelector === 'function' ? observableWindowWithClosingSelector.call(this, windowOpeningsOrClosingSelector) : observableWindowWithOpenings.call(this, windowOpeningsOrClosingSelector, windowClosingSelector);
    };
    function observableWindowWithOpenings(windowOpenings, windowClosingSelector) {
      return windowOpenings.groupJoin(this, windowClosingSelector, observableEmpty, function(_, win) {
        return win;
      });
    }
    function observableWindowWithBoundaries(windowBoundaries) {
      var source = this;
      return new AnonymousObservable(function(observer) {
        var win = new Subject(),
            d = new CompositeDisposable(),
            r = new RefCountDisposable(d);
        observer.onNext(addRef(win, r));
        d.add(source.subscribe(function(x) {
          win.onNext(x);
        }, function(err) {
          win.onError(err);
          observer.onError(err);
        }, function() {
          win.onCompleted();
          observer.onCompleted();
        }));
        isPromise(windowBoundaries) && (windowBoundaries = observableFromPromise(windowBoundaries));
        d.add(windowBoundaries.subscribe(function(w) {
          win.onCompleted();
          win = new Subject();
          observer.onNext(addRef(win, r));
        }, function(err) {
          win.onError(err);
          observer.onError(err);
        }, function() {
          win.onCompleted();
          observer.onCompleted();
        }));
        return r;
      }, source);
    }
    function observableWindowWithClosingSelector(windowClosingSelector) {
      var source = this;
      return new AnonymousObservable(function(observer) {
        var m = new SerialDisposable(),
            d = new CompositeDisposable(m),
            r = new RefCountDisposable(d),
            win = new Subject();
        observer.onNext(addRef(win, r));
        d.add(source.subscribe(function(x) {
          win.onNext(x);
        }, function(err) {
          win.onError(err);
          observer.onError(err);
        }, function() {
          win.onCompleted();
          observer.onCompleted();
        }));
        function createWindowClose() {
          var windowClose;
          try {
            windowClose = windowClosingSelector();
          } catch (e) {
            observer.onError(e);
            return ;
          }
          isPromise(windowClose) && (windowClose = observableFromPromise(windowClose));
          var m1 = new SingleAssignmentDisposable();
          m.setDisposable(m1);
          m1.setDisposable(windowClose.take(1).subscribe(noop, function(err) {
            win.onError(err);
            observer.onError(err);
          }, function() {
            win.onCompleted();
            win = new Subject();
            observer.onNext(addRef(win, r));
            createWindowClose();
          }));
        }
        createWindowClose();
        return r;
      }, source);
    }
    observableProto.pairwise = function() {
      var source = this;
      return new AnonymousObservable(function(observer) {
        var previous,
            hasPrevious = false;
        return source.subscribe(function(x) {
          if (hasPrevious) {
            observer.onNext([previous, x]);
          } else {
            hasPrevious = true;
          }
          previous = x;
        }, observer.onError.bind(observer), observer.onCompleted.bind(observer));
      }, source);
    };
    observableProto.partition = function(predicate, thisArg) {
      return [this.filter(predicate, thisArg), this.filter(function(x, i, o) {
        return !predicate.call(thisArg, x, i, o);
      })];
    };
    observableProto.groupBy = function(keySelector, elementSelector, comparer) {
      return this.groupByUntil(keySelector, elementSelector, observableNever, comparer);
    };
    observableProto.groupByUntil = function(keySelector, elementSelector, durationSelector, comparer) {
      var source = this;
      elementSelector || (elementSelector = identity);
      comparer || (comparer = defaultComparer);
      return new AnonymousObservable(function(observer) {
        function handleError(e) {
          return function(item) {
            item.onError(e);
          };
        }
        var map = new Dictionary(0, comparer),
            groupDisposable = new CompositeDisposable(),
            refCountDisposable = new RefCountDisposable(groupDisposable);
        groupDisposable.add(source.subscribe(function(x) {
          var key;
          try {
            key = keySelector(x);
          } catch (e) {
            map.getValues().forEach(handleError(e));
            observer.onError(e);
            return ;
          }
          var fireNewMapEntry = false,
              writer = map.tryGetValue(key);
          if (!writer) {
            writer = new Subject();
            map.set(key, writer);
            fireNewMapEntry = true;
          }
          if (fireNewMapEntry) {
            var group = new GroupedObservable(key, writer, refCountDisposable),
                durationGroup = new GroupedObservable(key, writer);
            try {
              duration = durationSelector(durationGroup);
            } catch (e) {
              map.getValues().forEach(handleError(e));
              observer.onError(e);
              return ;
            }
            observer.onNext(group);
            var md = new SingleAssignmentDisposable();
            groupDisposable.add(md);
            var expire = function() {
              map.remove(key) && writer.onCompleted();
              groupDisposable.remove(md);
            };
            md.setDisposable(duration.take(1).subscribe(noop, function(exn) {
              map.getValues().forEach(handleError(exn));
              observer.onError(exn);
            }, expire));
          }
          var element;
          try {
            element = elementSelector(x);
          } catch (e) {
            map.getValues().forEach(handleError(e));
            observer.onError(e);
            return ;
          }
          writer.onNext(element);
        }, function(ex) {
          map.getValues().forEach(handleError(ex));
          observer.onError(ex);
        }, function() {
          map.getValues().forEach(function(item) {
            item.onCompleted();
          });
          observer.onCompleted();
        }));
        return refCountDisposable;
      }, source);
    };
    var GroupedObservable = (function(__super__) {
      inherits(GroupedObservable, __super__);
      function subscribe(observer) {
        return this.underlyingObservable.subscribe(observer);
      }
      function GroupedObservable(key, underlyingObservable, mergedDisposable) {
        __super__.call(this, subscribe);
        this.key = key;
        this.underlyingObservable = !mergedDisposable ? underlyingObservable : new AnonymousObservable(function(observer) {
          return new CompositeDisposable(mergedDisposable.getDisposable(), underlyingObservable.subscribe(observer));
        });
      }
      return GroupedObservable;
    }(Observable));
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.experimental", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        AnonymousObservable = Rx.AnonymousObservable,
        observableConcat = Observable.concat,
        observableDefer = Observable.defer,
        observableEmpty = Observable.empty,
        disposableEmpty = Rx.Disposable.empty,
        CompositeDisposable = Rx.CompositeDisposable,
        SerialDisposable = Rx.SerialDisposable,
        SingleAssignmentDisposable = Rx.SingleAssignmentDisposable,
        Enumerator = Rx.internals.Enumerator,
        Enumerable = Rx.internals.Enumerable,
        enumerableOf = Enumerable.of,
        immediateScheduler = Rx.Scheduler.immediate,
        currentThreadScheduler = Rx.Scheduler.currentThread,
        slice = Array.prototype.slice,
        AsyncSubject = Rx.AsyncSubject,
        Observer = Rx.Observer,
        inherits = Rx.internals.inherits,
        bindCallback = Rx.internals.bindCallback,
        addProperties = Rx.internals.addProperties,
        helpers = Rx.helpers,
        noop = helpers.noop,
        isPromise = helpers.isPromise,
        isScheduler = helpers.isScheduler,
        observableFromPromise = Observable.fromPromise;
    var $iterator$ = (typeof Symbol === 'function' && Symbol.iterator) || '_es6shim_iterator_';
    if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {
      $iterator$ = '@@iterator';
    }
    var doneEnumerator = Rx.doneEnumerator = {
      done: true,
      value: undefined
    };
    var isIterable = Rx.helpers.isIterable = function(o) {
      return o[$iterator$] !== undefined;
    };
    var isArrayLike = Rx.helpers.isArrayLike = function(o) {
      return o && o.length !== undefined;
    };
    Rx.helpers.iterator = $iterator$;
    function enumerableWhile(condition, source) {
      return new Enumerable(function() {
        return new Enumerator(function() {
          return condition() ? {
            done: false,
            value: source
          } : {
            done: true,
            value: undefined
          };
        });
      });
    }
    observableProto.letBind = observableProto['let'] = function(func) {
      return func(this);
    };
    Observable['if'] = Observable.ifThen = function(condition, thenSource, elseSourceOrScheduler) {
      return observableDefer(function() {
        elseSourceOrScheduler || (elseSourceOrScheduler = observableEmpty());
        isPromise(thenSource) && (thenSource = observableFromPromise(thenSource));
        isPromise(elseSourceOrScheduler) && (elseSourceOrScheduler = observableFromPromise(elseSourceOrScheduler));
        typeof elseSourceOrScheduler.now === 'function' && (elseSourceOrScheduler = observableEmpty(elseSourceOrScheduler));
        return condition() ? thenSource : elseSourceOrScheduler;
      });
    };
    Observable['for'] = Observable.forIn = function(sources, resultSelector, thisArg) {
      return enumerableOf(sources, resultSelector, thisArg).concat();
    };
    var observableWhileDo = Observable['while'] = Observable.whileDo = function(condition, source) {
      isPromise(source) && (source = observableFromPromise(source));
      return enumerableWhile(condition, source).concat();
    };
    observableProto.doWhile = function(condition) {
      return observableConcat([this, observableWhileDo(condition, this)]);
    };
    Observable['case'] = Observable.switchCase = function(selector, sources, defaultSourceOrScheduler) {
      return observableDefer(function() {
        isPromise(defaultSourceOrScheduler) && (defaultSourceOrScheduler = observableFromPromise(defaultSourceOrScheduler));
        defaultSourceOrScheduler || (defaultSourceOrScheduler = observableEmpty());
        typeof defaultSourceOrScheduler.now === 'function' && (defaultSourceOrScheduler = observableEmpty(defaultSourceOrScheduler));
        var result = sources[selector()];
        isPromise(result) && (result = observableFromPromise(result));
        return result || defaultSourceOrScheduler;
      });
    };
    observableProto.expand = function(selector, scheduler) {
      isScheduler(scheduler) || (scheduler = immediateScheduler);
      var source = this;
      return new AnonymousObservable(function(observer) {
        var q = [],
            m = new SerialDisposable(),
            d = new CompositeDisposable(m),
            activeCount = 0,
            isAcquired = false;
        var ensureActive = function() {
          var isOwner = false;
          if (q.length > 0) {
            isOwner = !isAcquired;
            isAcquired = true;
          }
          if (isOwner) {
            m.setDisposable(scheduler.scheduleRecursive(function(self) {
              var work;
              if (q.length > 0) {
                work = q.shift();
              } else {
                isAcquired = false;
                return ;
              }
              var m1 = new SingleAssignmentDisposable();
              d.add(m1);
              m1.setDisposable(work.subscribe(function(x) {
                observer.onNext(x);
                var result = null;
                try {
                  result = selector(x);
                } catch (e) {
                  observer.onError(e);
                }
                q.push(result);
                activeCount++;
                ensureActive();
              }, observer.onError.bind(observer), function() {
                d.remove(m1);
                activeCount--;
                if (activeCount === 0) {
                  observer.onCompleted();
                }
              }));
              self();
            }));
          }
        };
        q.push(source);
        activeCount++;
        ensureActive();
        return d;
      }, this);
    };
    Observable.forkJoin = function() {
      var allSources = [];
      if (Array.isArray(arguments[0])) {
        allSources = arguments[0];
      } else {
        for (var i = 0,
            len = arguments.length; i < len; i++) {
          allSources.push(arguments[i]);
        }
      }
      return new AnonymousObservable(function(subscriber) {
        var count = allSources.length;
        if (count === 0) {
          subscriber.onCompleted();
          return disposableEmpty;
        }
        var group = new CompositeDisposable(),
            finished = false,
            hasResults = new Array(count),
            hasCompleted = new Array(count),
            results = new Array(count);
        for (var idx = 0; idx < count; idx++) {
          (function(i) {
            var source = allSources[i];
            isPromise(source) && (source = observableFromPromise(source));
            group.add(source.subscribe(function(value) {
              if (!finished) {
                hasResults[i] = true;
                results[i] = value;
              }
            }, function(e) {
              finished = true;
              subscriber.onError(e);
              group.dispose();
            }, function() {
              if (!finished) {
                if (!hasResults[i]) {
                  subscriber.onCompleted();
                  return ;
                }
                hasCompleted[i] = true;
                for (var ix = 0; ix < count; ix++) {
                  if (!hasCompleted[ix]) {
                    return ;
                  }
                }
                finished = true;
                subscriber.onNext(results);
                subscriber.onCompleted();
              }
            }));
          })(idx);
        }
        return group;
      });
    };
    observableProto.forkJoin = function(second, resultSelector) {
      var first = this;
      return new AnonymousObservable(function(observer) {
        var leftStopped = false,
            rightStopped = false,
            hasLeft = false,
            hasRight = false,
            lastLeft,
            lastRight,
            leftSubscription = new SingleAssignmentDisposable(),
            rightSubscription = new SingleAssignmentDisposable();
        isPromise(second) && (second = observableFromPromise(second));
        leftSubscription.setDisposable(first.subscribe(function(left) {
          hasLeft = true;
          lastLeft = left;
        }, function(err) {
          rightSubscription.dispose();
          observer.onError(err);
        }, function() {
          leftStopped = true;
          if (rightStopped) {
            if (!hasLeft) {
              observer.onCompleted();
            } else if (!hasRight) {
              observer.onCompleted();
            } else {
              var result;
              try {
                result = resultSelector(lastLeft, lastRight);
              } catch (e) {
                observer.onError(e);
                return ;
              }
              observer.onNext(result);
              observer.onCompleted();
            }
          }
        }));
        rightSubscription.setDisposable(second.subscribe(function(right) {
          hasRight = true;
          lastRight = right;
        }, function(err) {
          leftSubscription.dispose();
          observer.onError(err);
        }, function() {
          rightStopped = true;
          if (leftStopped) {
            if (!hasLeft) {
              observer.onCompleted();
            } else if (!hasRight) {
              observer.onCompleted();
            } else {
              var result;
              try {
                result = resultSelector(lastLeft, lastRight);
              } catch (e) {
                observer.onError(e);
                return ;
              }
              observer.onNext(result);
              observer.onCompleted();
            }
          }
        }));
        return new CompositeDisposable(leftSubscription, rightSubscription);
      }, first);
    };
    observableProto.manySelect = function(selector, scheduler) {
      isScheduler(scheduler) || (scheduler = immediateScheduler);
      var source = this;
      return observableDefer(function() {
        var chain;
        return source.map(function(x) {
          var curr = new ChainObservable(x);
          chain && chain.onNext(x);
          chain = curr;
          return curr;
        }).tap(noop, function(e) {
          chain && chain.onError(e);
        }, function() {
          chain && chain.onCompleted();
        }).observeOn(scheduler).map(selector);
      }, source);
    };
    var ChainObservable = (function(__super__) {
      function subscribe(observer) {
        var self = this,
            g = new CompositeDisposable();
        g.add(currentThreadScheduler.schedule(function() {
          observer.onNext(self.head);
          g.add(self.tail.mergeAll().subscribe(observer));
        }));
        return g;
      }
      inherits(ChainObservable, __super__);
      function ChainObservable(head) {
        __super__.call(this, subscribe);
        this.head = head;
        this.tail = new AsyncSubject();
      }
      addProperties(ChainObservable.prototype, Observer, {
        onCompleted: function() {
          this.onNext(Observable.empty());
        },
        onError: function(e) {
          this.onNext(Observable.throwError(e));
        },
        onNext: function(v) {
          this.tail.onNext(v);
          this.tail.onCompleted();
        }
      });
      return ChainObservable;
    }(Observable));
    observableProto.exclusive = function() {
      var sources = this;
      return new AnonymousObservable(function(observer) {
        var hasCurrent = false,
            isStopped = false,
            m = new SingleAssignmentDisposable(),
            g = new CompositeDisposable();
        g.add(m);
        m.setDisposable(sources.subscribe(function(innerSource) {
          if (!hasCurrent) {
            hasCurrent = true;
            isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
            var innerSubscription = new SingleAssignmentDisposable();
            g.add(innerSubscription);
            innerSubscription.setDisposable(innerSource.subscribe(observer.onNext.bind(observer), observer.onError.bind(observer), function() {
              g.remove(innerSubscription);
              hasCurrent = false;
              if (isStopped && g.length === 1) {
                observer.onCompleted();
              }
            }));
          }
        }, observer.onError.bind(observer), function() {
          isStopped = true;
          if (!hasCurrent && g.length === 1) {
            observer.onCompleted();
          }
        }));
        return g;
      }, this);
    };
    observableProto.exclusiveMap = function(selector, thisArg) {
      var sources = this,
          selectorFunc = bindCallback(selector, thisArg, 3);
      return new AnonymousObservable(function(observer) {
        var index = 0,
            hasCurrent = false,
            isStopped = true,
            m = new SingleAssignmentDisposable(),
            g = new CompositeDisposable();
        g.add(m);
        m.setDisposable(sources.subscribe(function(innerSource) {
          if (!hasCurrent) {
            hasCurrent = true;
            innerSubscription = new SingleAssignmentDisposable();
            g.add(innerSubscription);
            isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
            innerSubscription.setDisposable(innerSource.subscribe(function(x) {
              var result;
              try {
                result = selectorFunc(x, index++, innerSource);
              } catch (e) {
                observer.onError(e);
                return ;
              }
              observer.onNext(result);
            }, function(e) {
              observer.onError(e);
            }, function() {
              g.remove(innerSubscription);
              hasCurrent = false;
              if (isStopped && g.length === 1) {
                observer.onCompleted();
              }
            }));
          }
        }, function(e) {
          observer.onError(e);
        }, function() {
          isStopped = true;
          if (g.length === 1 && !hasCurrent) {
            observer.onCompleted();
          }
        }));
        return g;
      }, this);
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.joinpatterns", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        AnonymousObservable = Rx.AnonymousObservable,
        observableThrow = Observable.throwError,
        observerCreate = Rx.Observer.create,
        SingleAssignmentDisposable = Rx.SingleAssignmentDisposable,
        CompositeDisposable = Rx.CompositeDisposable,
        AbstractObserver = Rx.internals.AbstractObserver,
        noop = Rx.helpers.noop,
        defaultComparer = Rx.internals.isEqual,
        inherits = Rx.internals.inherits,
        Enumerable = Rx.internals.Enumerable,
        Enumerator = Rx.internals.Enumerator,
        $iterator$ = Rx.iterator,
        doneEnumerator = Rx.doneEnumerator;
    var Map = root.Map || (function() {
      function Map() {
        this._keys = [];
        this._values = [];
      }
      Map.prototype.get = function(key) {
        var i = this._keys.indexOf(key);
        return i !== -1 ? this._values[i] : undefined;
      };
      Map.prototype.set = function(key, value) {
        var i = this._keys.indexOf(key);
        i !== -1 && (this._values[i] = value);
        this._values[this._keys.push(key) - 1] = value;
      };
      Map.prototype.forEach = function(callback, thisArg) {
        for (var i = 0,
            len = this._keys.length; i < len; i++) {
          callback.call(thisArg, this._values[i], this._keys[i]);
        }
      };
      return Map;
    }());
    function Pattern(patterns) {
      this.patterns = patterns;
    }
    Pattern.prototype.and = function(other) {
      return new Pattern(this.patterns.concat(other));
    };
    Pattern.prototype.thenDo = function(selector) {
      return new Plan(this, selector);
    };
    function Plan(expression, selector) {
      this.expression = expression;
      this.selector = selector;
    }
    Plan.prototype.activate = function(externalSubscriptions, observer, deactivate) {
      var self = this;
      var joinObservers = [];
      for (var i = 0,
          len = this.expression.patterns.length; i < len; i++) {
        joinObservers.push(planCreateObserver(externalSubscriptions, this.expression.patterns[i], observer.onError.bind(observer)));
      }
      var activePlan = new ActivePlan(joinObservers, function() {
        var result;
        try {
          result = self.selector.apply(self, arguments);
        } catch (e) {
          observer.onError(e);
          return ;
        }
        observer.onNext(result);
      }, function() {
        for (var j = 0,
            jlen = joinObservers.length; j < jlen; j++) {
          joinObservers[j].removeActivePlan(activePlan);
        }
        deactivate(activePlan);
      });
      for (i = 0, len = joinObservers.length; i < len; i++) {
        joinObservers[i].addActivePlan(activePlan);
      }
      return activePlan;
    };
    function planCreateObserver(externalSubscriptions, observable, onError) {
      var entry = externalSubscriptions.get(observable);
      if (!entry) {
        var observer = new JoinObserver(observable, onError);
        externalSubscriptions.set(observable, observer);
        return observer;
      }
      return entry;
    }
    function ActivePlan(joinObserverArray, onNext, onCompleted) {
      this.joinObserverArray = joinObserverArray;
      this.onNext = onNext;
      this.onCompleted = onCompleted;
      this.joinObservers = new Map();
      for (var i = 0,
          len = this.joinObserverArray.length; i < len; i++) {
        var joinObserver = this.joinObserverArray[i];
        this.joinObservers.set(joinObserver, joinObserver);
      }
    }
    ActivePlan.prototype.dequeue = function() {
      this.joinObservers.forEach(function(v) {
        v.queue.shift();
      });
    };
    ActivePlan.prototype.match = function() {
      var i,
          len,
          hasValues = true;
      for (i = 0, len = this.joinObserverArray.length; i < len; i++) {
        if (this.joinObserverArray[i].queue.length === 0) {
          hasValues = false;
          break;
        }
      }
      if (hasValues) {
        var firstValues = [],
            isCompleted = false;
        for (i = 0, len = this.joinObserverArray.length; i < len; i++) {
          firstValues.push(this.joinObserverArray[i].queue[0]);
          this.joinObserverArray[i].queue[0].kind === 'C' && (isCompleted = true);
        }
        if (isCompleted) {
          this.onCompleted();
        } else {
          this.dequeue();
          var values = [];
          for (i = 0, len = firstValues.length; i < firstValues.length; i++) {
            values.push(firstValues[i].value);
          }
          this.onNext.apply(this, values);
        }
      }
    };
    var JoinObserver = (function(__super__) {
      inherits(JoinObserver, __super__);
      function JoinObserver(source, onError) {
        __super__.call(this);
        this.source = source;
        this.onError = onError;
        this.queue = [];
        this.activePlans = [];
        this.subscription = new SingleAssignmentDisposable();
        this.isDisposed = false;
      }
      var JoinObserverPrototype = JoinObserver.prototype;
      JoinObserverPrototype.next = function(notification) {
        if (!this.isDisposed) {
          if (notification.kind === 'E') {
            return this.onError(notification.exception);
          }
          this.queue.push(notification);
          var activePlans = this.activePlans.slice(0);
          for (var i = 0,
              len = activePlans.length; i < len; i++) {
            activePlans[i].match();
          }
        }
      };
      JoinObserverPrototype.error = noop;
      JoinObserverPrototype.completed = noop;
      JoinObserverPrototype.addActivePlan = function(activePlan) {
        this.activePlans.push(activePlan);
      };
      JoinObserverPrototype.subscribe = function() {
        this.subscription.setDisposable(this.source.materialize().subscribe(this));
      };
      JoinObserverPrototype.removeActivePlan = function(activePlan) {
        this.activePlans.splice(this.activePlans.indexOf(activePlan), 1);
        this.activePlans.length === 0 && this.dispose();
      };
      JoinObserverPrototype.dispose = function() {
        __super__.prototype.dispose.call(this);
        if (!this.isDisposed) {
          this.isDisposed = true;
          this.subscription.dispose();
        }
      };
      return JoinObserver;
    }(AbstractObserver));
    observableProto.and = function(right) {
      return new Pattern([this, right]);
    };
    observableProto.thenDo = function(selector) {
      return new Pattern([this]).thenDo(selector);
    };
    Observable.when = function() {
      var len = arguments.length,
          plans;
      if (Array.isArray(arguments[0])) {
        plans = arguments[0];
      } else {
        plans = new Array(len);
        for (var i = 0; i < len; i++) {
          plans[i] = arguments[i];
        }
      }
      return new AnonymousObservable(function(o) {
        var activePlans = [],
            externalSubscriptions = new Map();
        var outObserver = observerCreate(function(x) {
          o.onNext(x);
        }, function(err) {
          externalSubscriptions.forEach(function(v) {
            v.onError(err);
          });
          o.onError(err);
        }, function(x) {
          o.onCompleted();
        });
        try {
          for (var i = 0,
              len = plans.length; i < len; i++) {
            activePlans.push(plans[i].activate(externalSubscriptions, outObserver, function(activePlan) {
              var idx = activePlans.indexOf(activePlan);
              activePlans.splice(idx, 1);
              activePlans.length === 0 && o.onCompleted();
            }));
          }
        } catch (e) {
          observableThrow(e).subscribe(o);
        }
        var group = new CompositeDisposable();
        externalSubscriptions.forEach(function(joinObserver) {
          joinObserver.subscribe();
          group.add(joinObserver);
        });
        return group;
      });
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.sorting", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        AnonymousObservable = Rx.AnonymousObservable,
        observableNever = Observable.never,
        isEqual = Rx.internals.isEqual,
        defaultSubComparer = Rx.helpers.defaultSubComparer;
    observableProto.jortSort = function() {
      return this.jortSortUntil(observableNever());
    };
    observableProto.jortSortUntil = function(other) {
      var source = this;
      return new AnonymousObservable(function(observer) {
        var arr = [];
        return source.takeUntil(other).subscribe(arr.push.bind(arr), observer.onError.bind(observer), function() {
          var sorted = arr.slice(0).sort(defaultSubComparer);
          observer.onNext(isEqual(arr, sorted));
          observer.onCompleted();
        });
      }, source);
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.virtualtime", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Scheduler = Rx.Scheduler,
        PriorityQueue = Rx.internals.PriorityQueue,
        ScheduledItem = Rx.internals.ScheduledItem,
        SchedulePeriodicRecursive = Rx.internals.SchedulePeriodicRecursive,
        disposableEmpty = Rx.Disposable.empty,
        inherits = Rx.internals.inherits,
        defaultSubComparer = Rx.helpers.defaultSubComparer,
        notImplemented = Rx.helpers.notImplemented;
    Rx.VirtualTimeScheduler = (function(__super__) {
      function localNow() {
        return this.toDateTimeOffset(this.clock);
      }
      function scheduleNow(state, action) {
        return this.scheduleAbsoluteWithState(state, this.clock, action);
      }
      function scheduleRelative(state, dueTime, action) {
        return this.scheduleRelativeWithState(state, this.toRelative(dueTime), action);
      }
      function scheduleAbsolute(state, dueTime, action) {
        return this.scheduleRelativeWithState(state, this.toRelative(dueTime - this.now()), action);
      }
      function invokeAction(scheduler, action) {
        action();
        return disposableEmpty;
      }
      inherits(VirtualTimeScheduler, __super__);
      function VirtualTimeScheduler(initialClock, comparer) {
        this.clock = initialClock;
        this.comparer = comparer;
        this.isEnabled = false;
        this.queue = new PriorityQueue(1024);
        __super__.call(this, localNow, scheduleNow, scheduleRelative, scheduleAbsolute);
      }
      var VirtualTimeSchedulerPrototype = VirtualTimeScheduler.prototype;
      VirtualTimeSchedulerPrototype.add = notImplemented;
      VirtualTimeSchedulerPrototype.toDateTimeOffset = notImplemented;
      VirtualTimeSchedulerPrototype.toRelative = notImplemented;
      VirtualTimeSchedulerPrototype.schedulePeriodicWithState = function(state, period, action) {
        var s = new SchedulePeriodicRecursive(this, state, period, action);
        return s.start();
      };
      VirtualTimeSchedulerPrototype.scheduleRelativeWithState = function(state, dueTime, action) {
        var runAt = this.add(this.clock, dueTime);
        return this.scheduleAbsoluteWithState(state, runAt, action);
      };
      VirtualTimeSchedulerPrototype.scheduleRelative = function(dueTime, action) {
        return this.scheduleRelativeWithState(action, dueTime, invokeAction);
      };
      VirtualTimeSchedulerPrototype.start = function() {
        if (!this.isEnabled) {
          this.isEnabled = true;
          do {
            var next = this.getNext();
            if (next !== null) {
              this.comparer(next.dueTime, this.clock) > 0 && (this.clock = next.dueTime);
              next.invoke();
            } else {
              this.isEnabled = false;
            }
          } while (this.isEnabled);
        }
      };
      VirtualTimeSchedulerPrototype.stop = function() {
        this.isEnabled = false;
      };
      VirtualTimeSchedulerPrototype.advanceTo = function(time) {
        var dueToClock = this.comparer(this.clock, time);
        if (this.comparer(this.clock, time) > 0) {
          throw new ArgumentOutOfRangeError();
        }
        if (dueToClock === 0) {
          return ;
        }
        if (!this.isEnabled) {
          this.isEnabled = true;
          do {
            var next = this.getNext();
            if (next !== null && this.comparer(next.dueTime, time) <= 0) {
              this.comparer(next.dueTime, this.clock) > 0 && (this.clock = next.dueTime);
              next.invoke();
            } else {
              this.isEnabled = false;
            }
          } while (this.isEnabled);
          this.clock = time;
        }
      };
      VirtualTimeSchedulerPrototype.advanceBy = function(time) {
        var dt = this.add(this.clock, time),
            dueToClock = this.comparer(this.clock, dt);
        if (dueToClock > 0) {
          throw new ArgumentOutOfRangeError();
        }
        if (dueToClock === 0) {
          return ;
        }
        this.advanceTo(dt);
      };
      VirtualTimeSchedulerPrototype.sleep = function(time) {
        var dt = this.add(this.clock, time);
        if (this.comparer(this.clock, dt) >= 0) {
          throw new ArgumentOutOfRangeError();
        }
        this.clock = dt;
      };
      VirtualTimeSchedulerPrototype.getNext = function() {
        while (this.queue.length > 0) {
          var next = this.queue.peek();
          if (next.isCancelled()) {
            this.queue.dequeue();
          } else {
            return next;
          }
        }
        return null;
      };
      VirtualTimeSchedulerPrototype.scheduleAbsolute = function(dueTime, action) {
        return this.scheduleAbsoluteWithState(action, dueTime, invokeAction);
      };
      VirtualTimeSchedulerPrototype.scheduleAbsoluteWithState = function(state, dueTime, action) {
        var self = this;
        function run(scheduler, state1) {
          self.queue.remove(si);
          return action(scheduler, state1);
        }
        var si = new ScheduledItem(this, state, run, dueTime, this.comparer);
        this.queue.enqueue(si);
        return si.disposable;
      };
      return VirtualTimeScheduler;
    }(Scheduler));
    Rx.HistoricalScheduler = (function(__super__) {
      inherits(HistoricalScheduler, __super__);
      function HistoricalScheduler(initialClock, comparer) {
        var clock = initialClock == null ? 0 : initialClock;
        var cmp = comparer || defaultSubComparer;
        __super__.call(this, clock, cmp);
      }
      var HistoricalSchedulerProto = HistoricalScheduler.prototype;
      HistoricalSchedulerProto.add = function(absolute, relative) {
        return absolute + relative;
      };
      HistoricalSchedulerProto.toDateTimeOffset = function(absolute) {
        return new Date(absolute).getTime();
      };
      HistoricalSchedulerProto.toRelative = function(timeSpan) {
        return timeSpan;
      };
      return HistoricalScheduler;
    }(Rx.VirtualTimeScheduler));
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.testing", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx.virtualtime", "exports"], function(Rx, exports) {
        root.Rx = factory(root, exports, Rx);
        return root.Rx;
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observer = Rx.Observer,
        Observable = Rx.Observable,
        Notification = Rx.Notification,
        VirtualTimeScheduler = Rx.VirtualTimeScheduler,
        Disposable = Rx.Disposable,
        disposableEmpty = Disposable.empty,
        disposableCreate = Disposable.create,
        CompositeDisposable = Rx.CompositeDisposable,
        SingleAssignmentDisposable = Rx.SingleAssignmentDisposable,
        inherits = Rx.internals.inherits,
        defaultComparer = Rx.internals.isEqual;
    function OnNextPredicate(predicate) {
      this.predicate = predicate;
    }
    ;
    OnNextPredicate.prototype.equals = function(other) {
      if (other === this) {
        return true;
      }
      if (other == null) {
        return false;
      }
      if (other.kind !== 'N') {
        return false;
      }
      return this.predicate(other.value);
    };
    function OnErrorPredicate(predicate) {
      this.predicate = predicate;
    }
    ;
    OnErrorPredicate.prototype.equals = function(other) {
      if (other === this) {
        return true;
      }
      if (other == null) {
        return false;
      }
      if (other.kind !== 'E') {
        return false;
      }
      return this.predicate(other.exception);
    };
    var ReactiveTest = Rx.ReactiveTest = {
      created: 100,
      subscribed: 200,
      disposed: 1000,
      onNext: function(ticks, value) {
        return typeof value === 'function' ? new Recorded(ticks, new OnNextPredicate(value)) : new Recorded(ticks, Notification.createOnNext(value));
      },
      onError: function(ticks, error) {
        return typeof error === 'function' ? new Recorded(ticks, new OnErrorPredicate(error)) : new Recorded(ticks, Notification.createOnError(error));
      },
      onCompleted: function(ticks) {
        return new Recorded(ticks, Notification.createOnCompleted());
      },
      subscribe: function(start, end) {
        return new Subscription(start, end);
      }
    };
    var Recorded = Rx.Recorded = function(time, value, comparer) {
      this.time = time;
      this.value = value;
      this.comparer = comparer || defaultComparer;
    };
    Recorded.prototype.equals = function(other) {
      return this.time === other.time && this.comparer(this.value, other.value);
    };
    Recorded.prototype.toString = function() {
      return this.value.toString() + '@' + this.time;
    };
    var Subscription = Rx.Subscription = function(start, end) {
      this.subscribe = start;
      this.unsubscribe = end || Number.MAX_VALUE;
    };
    Subscription.prototype.equals = function(other) {
      return this.subscribe === other.subscribe && this.unsubscribe === other.unsubscribe;
    };
    Subscription.prototype.toString = function() {
      return '(' + this.subscribe + ', ' + (this.unsubscribe === Number.MAX_VALUE ? 'Infinite' : this.unsubscribe) + ')';
    };
    var MockDisposable = Rx.MockDisposable = function(scheduler) {
      this.scheduler = scheduler;
      this.disposes = [];
      this.disposes.push(this.scheduler.clock);
    };
    MockDisposable.prototype.dispose = function() {
      this.disposes.push(this.scheduler.clock);
    };
    var MockObserver = (function(__super__) {
      inherits(MockObserver, __super__);
      function MockObserver(scheduler) {
        __super__.call(this);
        this.scheduler = scheduler;
        this.messages = [];
      }
      var MockObserverPrototype = MockObserver.prototype;
      MockObserverPrototype.onNext = function(value) {
        this.messages.push(new Recorded(this.scheduler.clock, Notification.createOnNext(value)));
      };
      MockObserverPrototype.onError = function(exception) {
        this.messages.push(new Recorded(this.scheduler.clock, Notification.createOnError(exception)));
      };
      MockObserverPrototype.onCompleted = function() {
        this.messages.push(new Recorded(this.scheduler.clock, Notification.createOnCompleted()));
      };
      return MockObserver;
    })(Observer);
    function MockPromise(scheduler, messages) {
      var self = this;
      this.scheduler = scheduler;
      this.messages = messages;
      this.subscriptions = [];
      this.observers = [];
      for (var i = 0,
          len = this.messages.length; i < len; i++) {
        var message = this.messages[i],
            notification = message.value;
        (function(innerNotification) {
          scheduler.scheduleAbsoluteWithState(null, message.time, function() {
            var obs = self.observers.slice(0);
            for (var j = 0,
                jLen = obs.length; j < jLen; j++) {
              innerNotification.accept(obs[j]);
            }
            return disposableEmpty;
          });
        })(notification);
      }
    }
    MockPromise.prototype.then = function(onResolved, onRejected) {
      var self = this;
      this.subscriptions.push(new Subscription(this.scheduler.clock));
      var index = this.subscriptions.length - 1;
      var newPromise;
      var observer = Rx.Observer.create(function(x) {
        var retValue = onResolved(x);
        if (retValue && typeof retValue.then === 'function') {
          newPromise = retValue;
        } else {
          var ticks = self.scheduler.clock;
          newPromise = new MockPromise(self.scheduler, [Rx.ReactiveTest.onNext(ticks, undefined), Rx.ReactiveTest.onCompleted(ticks)]);
        }
        var idx = self.observers.indexOf(observer);
        self.observers.splice(idx, 1);
        self.subscriptions[index] = new Subscription(self.subscriptions[index].subscribe, self.scheduler.clock);
      }, function(err) {
        onRejected(err);
        var idx = self.observers.indexOf(observer);
        self.observers.splice(idx, 1);
        self.subscriptions[index] = new Subscription(self.subscriptions[index].subscribe, self.scheduler.clock);
      });
      this.observers.push(observer);
      return newPromise || new MockPromise(this.scheduler, this.messages);
    };
    var HotObservable = (function(__super__) {
      function subscribe(observer) {
        var observable = this;
        this.observers.push(observer);
        this.subscriptions.push(new Subscription(this.scheduler.clock));
        var index = this.subscriptions.length - 1;
        return disposableCreate(function() {
          var idx = observable.observers.indexOf(observer);
          observable.observers.splice(idx, 1);
          observable.subscriptions[index] = new Subscription(observable.subscriptions[index].subscribe, observable.scheduler.clock);
        });
      }
      inherits(HotObservable, __super__);
      function HotObservable(scheduler, messages) {
        __super__.call(this, subscribe);
        var message,
            notification,
            observable = this;
        this.scheduler = scheduler;
        this.messages = messages;
        this.subscriptions = [];
        this.observers = [];
        for (var i = 0,
            len = this.messages.length; i < len; i++) {
          message = this.messages[i];
          notification = message.value;
          (function(innerNotification) {
            scheduler.scheduleAbsoluteWithState(null, message.time, function() {
              var obs = observable.observers.slice(0);
              for (var j = 0,
                  jLen = obs.length; j < jLen; j++) {
                innerNotification.accept(obs[j]);
              }
              return disposableEmpty;
            });
          })(notification);
        }
      }
      return HotObservable;
    })(Observable);
    var ColdObservable = (function(__super__) {
      function subscribe(observer) {
        var message,
            notification,
            observable = this;
        this.subscriptions.push(new Subscription(this.scheduler.clock));
        var index = this.subscriptions.length - 1;
        var d = new CompositeDisposable();
        for (var i = 0,
            len = this.messages.length; i < len; i++) {
          message = this.messages[i];
          notification = message.value;
          (function(innerNotification) {
            d.add(observable.scheduler.scheduleRelativeWithState(null, message.time, function() {
              innerNotification.accept(observer);
              return disposableEmpty;
            }));
          })(notification);
        }
        return disposableCreate(function() {
          observable.subscriptions[index] = new Subscription(observable.subscriptions[index].subscribe, observable.scheduler.clock);
          d.dispose();
        });
      }
      inherits(ColdObservable, __super__);
      function ColdObservable(scheduler, messages) {
        __super__.call(this, subscribe);
        this.scheduler = scheduler;
        this.messages = messages;
        this.subscriptions = [];
      }
      return ColdObservable;
    })(Observable);
    Rx.TestScheduler = (function(__super__) {
      inherits(TestScheduler, __super__);
      function baseComparer(x, y) {
        return x > y ? 1 : (x < y ? -1 : 0);
      }
      function TestScheduler() {
        __super__.call(this, 0, baseComparer);
      }
      TestScheduler.prototype.scheduleAbsoluteWithState = function(state, dueTime, action) {
        dueTime <= this.clock && (dueTime = this.clock + 1);
        return __super__.prototype.scheduleAbsoluteWithState.call(this, state, dueTime, action);
      };
      TestScheduler.prototype.add = function(absolute, relative) {
        return absolute + relative;
      };
      TestScheduler.prototype.toDateTimeOffset = function(absolute) {
        return new Date(absolute).getTime();
      };
      TestScheduler.prototype.toRelative = function(timeSpan) {
        return timeSpan;
      };
      TestScheduler.prototype.startWithTiming = function(create, created, subscribed, disposed) {
        var observer = this.createObserver(),
            source,
            subscription;
        this.scheduleAbsoluteWithState(null, created, function() {
          source = create();
          return disposableEmpty;
        });
        this.scheduleAbsoluteWithState(null, subscribed, function() {
          subscription = source.subscribe(observer);
          return disposableEmpty;
        });
        this.scheduleAbsoluteWithState(null, disposed, function() {
          subscription.dispose();
          return disposableEmpty;
        });
        this.start();
        return observer;
      };
      TestScheduler.prototype.startWithDispose = function(create, disposed) {
        return this.startWithTiming(create, ReactiveTest.created, ReactiveTest.subscribed, disposed);
      };
      TestScheduler.prototype.startWithCreate = function(create) {
        return this.startWithTiming(create, ReactiveTest.created, ReactiveTest.subscribed, ReactiveTest.disposed);
      };
      TestScheduler.prototype.createHotObservable = function() {
        var len = arguments.length,
            args;
        if (Array.isArray(arguments[0])) {
          args = arguments[0];
        } else {
          args = new Array(len);
          for (var i = 0; i < len; i++) {
            args[i] = arguments[i];
          }
        }
        return new HotObservable(this, args);
      };
      TestScheduler.prototype.createColdObservable = function() {
        var len = arguments.length,
            args;
        if (Array.isArray(arguments[0])) {
          args = arguments[0];
        } else {
          args = new Array(len);
          for (var i = 0; i < len; i++) {
            args[i] = arguments[i];
          }
        }
        return new ColdObservable(this, args);
      };
      TestScheduler.prototype.createResolvedPromise = function(ticks, value) {
        return new MockPromise(this, [Rx.ReactiveTest.onNext(ticks, value), Rx.ReactiveTest.onCompleted(ticks)]);
      };
      TestScheduler.prototype.createRejectedPromise = function(ticks, reason) {
        return new MockPromise(this, [Rx.ReactiveTest.onError(ticks, reason)]);
      };
      TestScheduler.prototype.createObserver = function() {
        return new MockObserver(this);
      };
      return TestScheduler;
    })(VirtualTimeScheduler);
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx.time", ["npm:rx@2.5.1/dist/rx"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  ;
  (function(factory) {
    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };
    var root = (objectTypes[typeof window] && window) || this,
        freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
        freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
        moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
        freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
      root = freeGlobal;
    }
    if (typeof define === 'function' && define.amd) {
      define(["rx"], function(Rx, exports) {
        return factory(root, exports, Rx);
      });
    } else if (typeof module === 'object' && module && module.exports === freeExports) {
      module.exports = factory(root, module.exports, require("npm:rx@2.5.1/dist/rx"));
    } else {
      root.Rx = factory(root, {}, root.Rx);
    }
  }.call(this, function(root, exp, Rx, undefined) {
    var Observable = Rx.Observable,
        observableProto = Observable.prototype,
        AnonymousObservable = Rx.AnonymousObservable,
        observableDefer = Observable.defer,
        observableEmpty = Observable.empty,
        observableNever = Observable.never,
        observableThrow = Observable.throwException,
        observableFromArray = Observable.fromArray,
        timeoutScheduler = Rx.Scheduler.timeout,
        SingleAssignmentDisposable = Rx.SingleAssignmentDisposable,
        SerialDisposable = Rx.SerialDisposable,
        CompositeDisposable = Rx.CompositeDisposable,
        RefCountDisposable = Rx.RefCountDisposable,
        Subject = Rx.Subject,
        addRef = Rx.internals.addRef,
        normalizeTime = Rx.Scheduler.normalize,
        helpers = Rx.helpers,
        isPromise = helpers.isPromise,
        isScheduler = helpers.isScheduler,
        observableFromPromise = Observable.fromPromise;
    function observableTimerDate(dueTime, scheduler) {
      return new AnonymousObservable(function(observer) {
        return scheduler.scheduleWithAbsolute(dueTime, function() {
          observer.onNext(0);
          observer.onCompleted();
        });
      });
    }
    function observableTimerDateAndPeriod(dueTime, period, scheduler) {
      return new AnonymousObservable(function(observer) {
        var d = dueTime,
            p = normalizeTime(period);
        return scheduler.scheduleRecursiveWithAbsoluteAndState(0, d, function(count, self) {
          if (p > 0) {
            var now = scheduler.now();
            d = d + p;
            d <= now && (d = now + p);
          }
          observer.onNext(count);
          self(count + 1, d);
        });
      });
    }
    function observableTimerTimeSpan(dueTime, scheduler) {
      return new AnonymousObservable(function(observer) {
        return scheduler.scheduleWithRelative(normalizeTime(dueTime), function() {
          observer.onNext(0);
          observer.onCompleted();
        });
      });
    }
    function observableTimerTimeSpanAndPeriod(dueTime, period, scheduler) {
      return dueTime === period ? new AnonymousObservable(function(observer) {
        return scheduler.schedulePeriodicWithState(0, period, function(count) {
          observer.onNext(count);
          return count + 1;
        });
      }) : observableDefer(function() {
        return observableTimerDateAndPeriod(scheduler.now() + dueTime, period, scheduler);
      });
    }
    var observableinterval = Observable.interval = function(period, scheduler) {
      return observableTimerTimeSpanAndPeriod(period, period, isScheduler(scheduler) ? scheduler : timeoutScheduler);
    };
    var observableTimer = Observable.timer = function(dueTime, periodOrScheduler, scheduler) {
      var period;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      if (periodOrScheduler !== undefined && typeof periodOrScheduler === 'number') {
        period = periodOrScheduler;
      } else if (isScheduler(periodOrScheduler)) {
        scheduler = periodOrScheduler;
      }
      if (dueTime instanceof Date && period === undefined) {
        return observableTimerDate(dueTime.getTime(), scheduler);
      }
      if (dueTime instanceof Date && period !== undefined) {
        period = periodOrScheduler;
        return observableTimerDateAndPeriod(dueTime.getTime(), period, scheduler);
      }
      return period === undefined ? observableTimerTimeSpan(dueTime, scheduler) : observableTimerTimeSpanAndPeriod(dueTime, period, scheduler);
    };
    function observableDelayTimeSpan(source, dueTime, scheduler) {
      return new AnonymousObservable(function(observer) {
        var active = false,
            cancelable = new SerialDisposable(),
            exception = null,
            q = [],
            running = false,
            subscription;
        subscription = source.materialize().timestamp(scheduler).subscribe(function(notification) {
          var d,
              shouldRun;
          if (notification.value.kind === 'E') {
            q = [];
            q.push(notification);
            exception = notification.value.exception;
            shouldRun = !running;
          } else {
            q.push({
              value: notification.value,
              timestamp: notification.timestamp + dueTime
            });
            shouldRun = !active;
            active = true;
          }
          if (shouldRun) {
            if (exception !== null) {
              observer.onError(exception);
            } else {
              d = new SingleAssignmentDisposable();
              cancelable.setDisposable(d);
              d.setDisposable(scheduler.scheduleRecursiveWithRelative(dueTime, function(self) {
                var e,
                    recurseDueTime,
                    result,
                    shouldRecurse;
                if (exception !== null) {
                  return ;
                }
                running = true;
                do {
                  result = null;
                  if (q.length > 0 && q[0].timestamp - scheduler.now() <= 0) {
                    result = q.shift().value;
                  }
                  if (result !== null) {
                    result.accept(observer);
                  }
                } while (result !== null);
                shouldRecurse = false;
                recurseDueTime = 0;
                if (q.length > 0) {
                  shouldRecurse = true;
                  recurseDueTime = Math.max(0, q[0].timestamp - scheduler.now());
                } else {
                  active = false;
                }
                e = exception;
                running = false;
                if (e !== null) {
                  observer.onError(e);
                } else if (shouldRecurse) {
                  self(recurseDueTime);
                }
              }));
            }
          }
        });
        return new CompositeDisposable(subscription, cancelable);
      }, source);
    }
    function observableDelayDate(source, dueTime, scheduler) {
      return observableDefer(function() {
        return observableDelayTimeSpan(source, dueTime - scheduler.now(), scheduler);
      });
    }
    observableProto.delay = function(dueTime, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return dueTime instanceof Date ? observableDelayDate(this, dueTime.getTime(), scheduler) : observableDelayTimeSpan(this, dueTime, scheduler);
    };
    observableProto.debounce = observableProto.throttleWithTimeout = function(dueTime, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      var source = this;
      return new AnonymousObservable(function(observer) {
        var cancelable = new SerialDisposable(),
            hasvalue = false,
            value,
            id = 0;
        var subscription = source.subscribe(function(x) {
          hasvalue = true;
          value = x;
          id++;
          var currentId = id,
              d = new SingleAssignmentDisposable();
          cancelable.setDisposable(d);
          d.setDisposable(scheduler.scheduleWithRelative(dueTime, function() {
            hasvalue && id === currentId && observer.onNext(value);
            hasvalue = false;
          }));
        }, function(e) {
          cancelable.dispose();
          observer.onError(e);
          hasvalue = false;
          id++;
        }, function() {
          cancelable.dispose();
          hasvalue && observer.onNext(value);
          observer.onCompleted();
          hasvalue = false;
          id++;
        });
        return new CompositeDisposable(subscription, cancelable);
      }, this);
    };
    observableProto.throttle = function(dueTime, scheduler) {
      return this.debounce(dueTime, scheduler);
    };
    observableProto.windowWithTime = function(timeSpan, timeShiftOrScheduler, scheduler) {
      var source = this,
          timeShift;
      timeShiftOrScheduler == null && (timeShift = timeSpan);
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      if (typeof timeShiftOrScheduler === 'number') {
        timeShift = timeShiftOrScheduler;
      } else if (isScheduler(timeShiftOrScheduler)) {
        timeShift = timeSpan;
        scheduler = timeShiftOrScheduler;
      }
      return new AnonymousObservable(function(observer) {
        var groupDisposable,
            nextShift = timeShift,
            nextSpan = timeSpan,
            q = [],
            refCountDisposable,
            timerD = new SerialDisposable(),
            totalTime = 0;
        groupDisposable = new CompositeDisposable(timerD), refCountDisposable = new RefCountDisposable(groupDisposable);
        function createTimer() {
          var m = new SingleAssignmentDisposable(),
              isSpan = false,
              isShift = false;
          timerD.setDisposable(m);
          if (nextSpan === nextShift) {
            isSpan = true;
            isShift = true;
          } else if (nextSpan < nextShift) {
            isSpan = true;
          } else {
            isShift = true;
          }
          var newTotalTime = isSpan ? nextSpan : nextShift,
              ts = newTotalTime - totalTime;
          totalTime = newTotalTime;
          if (isSpan) {
            nextSpan += timeShift;
          }
          if (isShift) {
            nextShift += timeShift;
          }
          m.setDisposable(scheduler.scheduleWithRelative(ts, function() {
            if (isShift) {
              var s = new Subject();
              q.push(s);
              observer.onNext(addRef(s, refCountDisposable));
            }
            isSpan && q.shift().onCompleted();
            createTimer();
          }));
        }
        ;
        q.push(new Subject());
        observer.onNext(addRef(q[0], refCountDisposable));
        createTimer();
        groupDisposable.add(source.subscribe(function(x) {
          for (var i = 0,
              len = q.length; i < len; i++) {
            q[i].onNext(x);
          }
        }, function(e) {
          for (var i = 0,
              len = q.length; i < len; i++) {
            q[i].onError(e);
          }
          observer.onError(e);
        }, function() {
          for (var i = 0,
              len = q.length; i < len; i++) {
            q[i].onCompleted();
          }
          observer.onCompleted();
        }));
        return refCountDisposable;
      }, source);
    };
    observableProto.windowWithTimeOrCount = function(timeSpan, count, scheduler) {
      var source = this;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(observer) {
        var timerD = new SerialDisposable(),
            groupDisposable = new CompositeDisposable(timerD),
            refCountDisposable = new RefCountDisposable(groupDisposable),
            n = 0,
            windowId = 0,
            s = new Subject();
        function createTimer(id) {
          var m = new SingleAssignmentDisposable();
          timerD.setDisposable(m);
          m.setDisposable(scheduler.scheduleWithRelative(timeSpan, function() {
            if (id !== windowId) {
              return ;
            }
            n = 0;
            var newId = ++windowId;
            s.onCompleted();
            s = new Subject();
            observer.onNext(addRef(s, refCountDisposable));
            createTimer(newId);
          }));
        }
        observer.onNext(addRef(s, refCountDisposable));
        createTimer(0);
        groupDisposable.add(source.subscribe(function(x) {
          var newId = 0,
              newWindow = false;
          s.onNext(x);
          if (++n === count) {
            newWindow = true;
            n = 0;
            newId = ++windowId;
            s.onCompleted();
            s = new Subject();
            observer.onNext(addRef(s, refCountDisposable));
          }
          newWindow && createTimer(newId);
        }, function(e) {
          s.onError(e);
          observer.onError(e);
        }, function() {
          s.onCompleted();
          observer.onCompleted();
        }));
        return refCountDisposable;
      }, source);
    };
    observableProto.bufferWithTime = function(timeSpan, timeShiftOrScheduler, scheduler) {
      return this.windowWithTime.apply(this, arguments).selectMany(function(x) {
        return x.toArray();
      });
    };
    observableProto.bufferWithTimeOrCount = function(timeSpan, count, scheduler) {
      return this.windowWithTimeOrCount(timeSpan, count, scheduler).selectMany(function(x) {
        return x.toArray();
      });
    };
    observableProto.timeInterval = function(scheduler) {
      var source = this;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return observableDefer(function() {
        var last = scheduler.now();
        return source.map(function(x) {
          var now = scheduler.now(),
              span = now - last;
          last = now;
          return {
            value: x,
            interval: span
          };
        });
      });
    };
    observableProto.timestamp = function(scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return this.map(function(x) {
        return {
          value: x,
          timestamp: scheduler.now()
        };
      });
    };
    function sampleObservable(source, sampler) {
      return new AnonymousObservable(function(observer) {
        var atEnd,
            value,
            hasValue;
        function sampleSubscribe() {
          if (hasValue) {
            hasValue = false;
            observer.onNext(value);
          }
          atEnd && observer.onCompleted();
        }
        return new CompositeDisposable(source.subscribe(function(newValue) {
          hasValue = true;
          value = newValue;
        }, observer.onError.bind(observer), function() {
          atEnd = true;
        }), sampler.subscribe(sampleSubscribe, observer.onError.bind(observer), sampleSubscribe));
      }, source);
    }
    observableProto.sample = observableProto.throttleLatest = function(intervalOrSampler, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return typeof intervalOrSampler === 'number' ? sampleObservable(this, observableinterval(intervalOrSampler, scheduler)) : sampleObservable(this, intervalOrSampler);
    };
    observableProto.timeout = function(dueTime, other, scheduler) {
      (other == null || typeof other === 'string') && (other = observableThrow(new Error(other || 'Timeout')));
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      var source = this,
          schedulerMethod = dueTime instanceof Date ? 'scheduleWithAbsolute' : 'scheduleWithRelative';
      return new AnonymousObservable(function(observer) {
        var id = 0,
            original = new SingleAssignmentDisposable(),
            subscription = new SerialDisposable(),
            switched = false,
            timer = new SerialDisposable();
        subscription.setDisposable(original);
        function createTimer() {
          var myId = id;
          timer.setDisposable(scheduler[schedulerMethod](dueTime, function() {
            if (id === myId) {
              isPromise(other) && (other = observableFromPromise(other));
              subscription.setDisposable(other.subscribe(observer));
            }
          }));
        }
        createTimer();
        original.setDisposable(source.subscribe(function(x) {
          if (!switched) {
            id++;
            observer.onNext(x);
            createTimer();
          }
        }, function(e) {
          if (!switched) {
            id++;
            observer.onError(e);
          }
        }, function() {
          if (!switched) {
            id++;
            observer.onCompleted();
          }
        }));
        return new CompositeDisposable(subscription, timer);
      }, source);
    };
    Observable.generateWithAbsoluteTime = function(initialState, condition, iterate, resultSelector, timeSelector, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(observer) {
        var first = true,
            hasResult = false,
            result,
            state = initialState,
            time;
        return scheduler.scheduleRecursiveWithAbsolute(scheduler.now(), function(self) {
          hasResult && observer.onNext(result);
          try {
            if (first) {
              first = false;
            } else {
              state = iterate(state);
            }
            hasResult = condition(state);
            if (hasResult) {
              result = resultSelector(state);
              time = timeSelector(state);
            }
          } catch (e) {
            observer.onError(e);
            return ;
          }
          if (hasResult) {
            self(time);
          } else {
            observer.onCompleted();
          }
        });
      });
    };
    Observable.generateWithRelativeTime = function(initialState, condition, iterate, resultSelector, timeSelector, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(observer) {
        var first = true,
            hasResult = false,
            result,
            state = initialState,
            time;
        return scheduler.scheduleRecursiveWithRelative(0, function(self) {
          hasResult && observer.onNext(result);
          try {
            if (first) {
              first = false;
            } else {
              state = iterate(state);
            }
            hasResult = condition(state);
            if (hasResult) {
              result = resultSelector(state);
              time = timeSelector(state);
            }
          } catch (e) {
            observer.onError(e);
            return ;
          }
          if (hasResult) {
            self(time);
          } else {
            observer.onCompleted();
          }
        });
      });
    };
    observableProto.delaySubscription = function(dueTime, scheduler) {
      return this.delayWithSelector(observableTimer(dueTime, isScheduler(scheduler) ? scheduler : timeoutScheduler), observableEmpty);
    };
    observableProto.delayWithSelector = function(subscriptionDelay, delayDurationSelector) {
      var source = this,
          subDelay,
          selector;
      if (typeof subscriptionDelay === 'function') {
        selector = subscriptionDelay;
      } else {
        subDelay = subscriptionDelay;
        selector = delayDurationSelector;
      }
      return new AnonymousObservable(function(observer) {
        var delays = new CompositeDisposable(),
            atEnd = false,
            done = function() {
              if (atEnd && delays.length === 0) {
                observer.onCompleted();
              }
            },
            subscription = new SerialDisposable(),
            start = function() {
              subscription.setDisposable(source.subscribe(function(x) {
                var delay;
                try {
                  delay = selector(x);
                } catch (error) {
                  observer.onError(error);
                  return ;
                }
                var d = new SingleAssignmentDisposable();
                delays.add(d);
                d.setDisposable(delay.subscribe(function() {
                  observer.onNext(x);
                  delays.remove(d);
                  done();
                }, observer.onError.bind(observer), function() {
                  observer.onNext(x);
                  delays.remove(d);
                  done();
                }));
              }, observer.onError.bind(observer), function() {
                atEnd = true;
                subscription.dispose();
                done();
              }));
            };
        if (!subDelay) {
          start();
        } else {
          subscription.setDisposable(subDelay.subscribe(start, observer.onError.bind(observer), start));
        }
        return new CompositeDisposable(subscription, delays);
      }, this);
    };
    observableProto.timeoutWithSelector = function(firstTimeout, timeoutdurationSelector, other) {
      if (arguments.length === 1) {
        timeoutdurationSelector = firstTimeout;
        firstTimeout = observableNever();
      }
      other || (other = observableThrow(new Error('Timeout')));
      var source = this;
      return new AnonymousObservable(function(observer) {
        var subscription = new SerialDisposable(),
            timer = new SerialDisposable(),
            original = new SingleAssignmentDisposable();
        subscription.setDisposable(original);
        var id = 0,
            switched = false;
        function setTimer(timeout) {
          var myId = id;
          function timerWins() {
            return id === myId;
          }
          var d = new SingleAssignmentDisposable();
          timer.setDisposable(d);
          d.setDisposable(timeout.subscribe(function() {
            timerWins() && subscription.setDisposable(other.subscribe(observer));
            d.dispose();
          }, function(e) {
            timerWins() && observer.onError(e);
          }, function() {
            timerWins() && subscription.setDisposable(other.subscribe(observer));
          }));
        }
        ;
        setTimer(firstTimeout);
        function observerWins() {
          var res = !switched;
          if (res) {
            id++;
          }
          return res;
        }
        original.setDisposable(source.subscribe(function(x) {
          if (observerWins()) {
            observer.onNext(x);
            var timeout;
            try {
              timeout = timeoutdurationSelector(x);
            } catch (e) {
              observer.onError(e);
              return ;
            }
            setTimer(isPromise(timeout) ? observableFromPromise(timeout) : timeout);
          }
        }, function(e) {
          observerWins() && observer.onError(e);
        }, function() {
          observerWins() && observer.onCompleted();
        }));
        return new CompositeDisposable(subscription, timer);
      }, source);
    };
    observableProto.debounceWithSelector = function(durationSelector) {
      var source = this;
      return new AnonymousObservable(function(observer) {
        var value,
            hasValue = false,
            cancelable = new SerialDisposable(),
            id = 0;
        var subscription = source.subscribe(function(x) {
          var throttle;
          try {
            throttle = durationSelector(x);
          } catch (e) {
            observer.onError(e);
            return ;
          }
          isPromise(throttle) && (throttle = observableFromPromise(throttle));
          hasValue = true;
          value = x;
          id++;
          var currentid = id,
              d = new SingleAssignmentDisposable();
          cancelable.setDisposable(d);
          d.setDisposable(throttle.subscribe(function() {
            hasValue && id === currentid && observer.onNext(value);
            hasValue = false;
            d.dispose();
          }, observer.onError.bind(observer), function() {
            hasValue && id === currentid && observer.onNext(value);
            hasValue = false;
            d.dispose();
          }));
        }, function(e) {
          cancelable.dispose();
          observer.onError(e);
          hasValue = false;
          id++;
        }, function() {
          cancelable.dispose();
          hasValue && observer.onNext(value);
          observer.onCompleted();
          hasValue = false;
          id++;
        });
        return new CompositeDisposable(subscription, cancelable);
      }, source);
    };
    observableProto.throttleWithSelector = function(durationSelector) {
      return this.debounceWithSelector(durationSelector);
    };
    observableProto.skipLastWithTime = function(duration, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      var source = this;
      return new AnonymousObservable(function(o) {
        var q = [];
        return source.subscribe(function(x) {
          var now = scheduler.now();
          q.push({
            interval: now,
            value: x
          });
          while (q.length > 0 && now - q[0].interval >= duration) {
            o.onNext(q.shift().value);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          var now = scheduler.now();
          while (q.length > 0 && now - q[0].interval >= duration) {
            o.onNext(q.shift().value);
          }
          o.onCompleted();
        });
      }, source);
    };
    observableProto.takeLastWithTime = function(duration, scheduler) {
      var source = this;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(o) {
        var q = [];
        return source.subscribe(function(x) {
          var now = scheduler.now();
          q.push({
            interval: now,
            value: x
          });
          while (q.length > 0 && now - q[0].interval >= duration) {
            q.shift();
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          var now = scheduler.now();
          while (q.length > 0) {
            var next = q.shift();
            if (now - next.interval <= duration) {
              o.onNext(next.value);
            }
          }
          o.onCompleted();
        });
      }, source);
    };
    observableProto.takeLastBufferWithTime = function(duration, scheduler) {
      var source = this;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(o) {
        var q = [];
        return source.subscribe(function(x) {
          var now = scheduler.now();
          q.push({
            interval: now,
            value: x
          });
          while (q.length > 0 && now - q[0].interval >= duration) {
            q.shift();
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          var now = scheduler.now(),
              res = [];
          while (q.length > 0) {
            var next = q.shift();
            now - next.interval <= duration && res.push(next.value);
          }
          o.onNext(res);
          o.onCompleted();
        });
      }, source);
    };
    observableProto.takeWithTime = function(duration, scheduler) {
      var source = this;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(o) {
        return new CompositeDisposable(scheduler.scheduleWithRelative(duration, function() {
          o.onCompleted();
        }), source.subscribe(o));
      }, source);
    };
    observableProto.skipWithTime = function(duration, scheduler) {
      var source = this;
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      return new AnonymousObservable(function(observer) {
        var open = false;
        return new CompositeDisposable(scheduler.scheduleWithRelative(duration, function() {
          open = true;
        }), source.subscribe(function(x) {
          open && observer.onNext(x);
        }, observer.onError.bind(observer), observer.onCompleted.bind(observer)));
      }, source);
    };
    observableProto.skipUntilWithTime = function(startTime, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      var source = this,
          schedulerMethod = startTime instanceof Date ? 'scheduleWithAbsolute' : 'scheduleWithRelative';
      return new AnonymousObservable(function(o) {
        var open = false;
        return new CompositeDisposable(scheduler[schedulerMethod](startTime, function() {
          open = true;
        }), source.subscribe(function(x) {
          open && o.onNext(x);
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onCompleted();
        }));
      }, source);
    };
    observableProto.takeUntilWithTime = function(endTime, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      var source = this,
          schedulerMethod = endTime instanceof Date ? 'scheduleWithAbsolute' : 'scheduleWithRelative';
      return new AnonymousObservable(function(o) {
        return new CompositeDisposable(scheduler[schedulerMethod](endTime, function() {
          o.onCompleted();
        }), source.subscribe(o));
      }, source);
    };
    observableProto.throttleFirst = function(windowDuration, scheduler) {
      isScheduler(scheduler) || (scheduler = timeoutScheduler);
      var duration = +windowDuration || 0;
      if (duration <= 0) {
        throw new RangeError('windowDuration cannot be less or equal zero.');
      }
      var source = this;
      return new AnonymousObservable(function(o) {
        var lastOnNext = 0;
        return source.subscribe(function(x) {
          var now = scheduler.now();
          if (lastOnNext === 0 || now - lastOnNext >= duration) {
            lastOnNext = now;
            o.onNext(x);
          }
        }, function(e) {
          o.onError(e);
        }, function() {
          o.onCompleted();
        });
      }, source);
    };
    return Rx;
  }));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/promise_pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var async_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/async");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var PromisePipe = (function(_super) {
    __extends(PromisePipe, _super);
    function PromisePipe(ref) {
      _super.call(this);
      this._ref = ref;
      this._latestValue = null;
      this._latestReturnedValue = null;
    }
    PromisePipe.prototype.supports = function(promise) {
      return async_1.PromiseWrapper.isPromise(promise);
    };
    PromisePipe.prototype.onDestroy = function() {};
    PromisePipe.prototype.transform = function(promise) {
      var _this = this;
      if (lang_1.isBlank(this._sourcePromise)) {
        this._sourcePromise = promise;
        promise.then(function(val) {
          if (_this._sourcePromise === promise) {
            _this._updateLatestValue(val);
          }
        });
        return null;
      }
      if (promise !== this._sourcePromise) {
        this._sourcePromise = null;
        return this.transform(promise);
      }
      if (this._latestValue === this._latestReturnedValue) {
        return this._latestReturnedValue;
      } else {
        this._latestReturnedValue = this._latestValue;
        return pipe_1.WrappedValue.wrap(this._latestValue);
      }
    };
    PromisePipe.prototype._updateLatestValue = function(value) {
      this._latestValue = value;
      this._ref.requestCheck();
    };
    return PromisePipe;
  })(pipe_1.Pipe);
  exports.PromisePipe = PromisePipe;
  var PromisePipeFactory = (function() {
    function PromisePipeFactory() {}
    PromisePipeFactory.prototype.supports = function(promise) {
      return async_1.PromiseWrapper.isPromise(promise);
    };
    PromisePipeFactory.prototype.create = function(cdRef) {
      return new PromisePipe(cdRef);
    };
    return PromisePipeFactory;
  })();
  exports.PromisePipeFactory = PromisePipeFactory;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/uppercase_pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var UpperCasePipe = (function(_super) {
    __extends(UpperCasePipe, _super);
    function UpperCasePipe() {
      _super.call(this);
      this._latestValue = null;
    }
    UpperCasePipe.prototype.supports = function(str) {
      return lang_1.isString(str);
    };
    UpperCasePipe.prototype.onDestroy = function() {
      this._latestValue = null;
    };
    UpperCasePipe.prototype.transform = function(value) {
      if (this._latestValue !== value) {
        this._latestValue = value;
        return lang_1.StringWrapper.toUpperCase(value);
      } else {
        return this._latestValue;
      }
    };
    return UpperCasePipe;
  })(pipe_1.Pipe);
  exports.UpperCasePipe = UpperCasePipe;
  var UpperCaseFactory = (function() {
    function UpperCaseFactory() {}
    UpperCaseFactory.prototype.supports = function(str) {
      return lang_1.isString(str);
    };
    UpperCaseFactory.prototype.create = function() {
      return new UpperCasePipe();
    };
    return UpperCaseFactory;
  })();
  exports.UpperCaseFactory = UpperCaseFactory;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/lowercase_pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var LowerCasePipe = (function(_super) {
    __extends(LowerCasePipe, _super);
    function LowerCasePipe() {
      _super.call(this);
      this._latestValue = null;
    }
    LowerCasePipe.prototype.supports = function(str) {
      return lang_1.isString(str);
    };
    LowerCasePipe.prototype.onDestroy = function() {
      this._latestValue = null;
    };
    LowerCasePipe.prototype.transform = function(value) {
      if (this._latestValue !== value) {
        this._latestValue = value;
        return lang_1.StringWrapper.toLowerCase(value);
      } else {
        return this._latestValue;
      }
    };
    return LowerCasePipe;
  })(pipe_1.Pipe);
  exports.LowerCasePipe = LowerCasePipe;
  var LowerCaseFactory = (function() {
    function LowerCaseFactory() {}
    LowerCaseFactory.prototype.supports = function(str) {
      return lang_1.isString(str);
    };
    LowerCaseFactory.prototype.create = function() {
      return new LowerCasePipe();
    };
    return LowerCaseFactory;
  })();
  exports.LowerCaseFactory = LowerCaseFactory;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/json_pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var JsonPipe = (function(_super) {
    __extends(JsonPipe, _super);
    function JsonPipe() {
      _super.call(this);
      this._latestRef = null;
      this._latestValue = null;
    }
    JsonPipe.prototype.onDestroy = function() {
      if (lang_1.isPresent(this._latestValue)) {
        this._latestRef = null;
        this._latestValue = null;
      }
    };
    JsonPipe.prototype.supports = function(obj) {
      return true;
    };
    JsonPipe.prototype.transform = function(value) {
      if (value === this._latestRef) {
        return this._latestValue;
      } else {
        return this._prettyPrint(value);
      }
    };
    JsonPipe.prototype._prettyPrint = function(value) {
      this._latestRef = value;
      this._latestValue = lang_1.Json.stringify(value);
      return this._latestValue;
    };
    return JsonPipe;
  })(pipe_1.Pipe);
  exports.JsonPipe = JsonPipe;
  var JsonPipeFactory = (function(_super) {
    __extends(JsonPipeFactory, _super);
    function JsonPipeFactory() {
      _super.call(this);
    }
    JsonPipeFactory.prototype.supports = function(obj) {
      return true;
    };
    JsonPipeFactory.prototype.create = function(cdRef) {
      return new JsonPipe();
    };
    JsonPipeFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], JsonPipeFactory);
    return JsonPipeFactory;
  })(pipe_1.PipeFactory);
  exports.JsonPipeFactory = JsonPipeFactory;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Visibility: {get: function() {
        return Visibility;
      }},
    Self: {get: function() {
        return Self;
      }},
    Parent: {get: function() {
        return Parent;
      }},
    Ancestor: {get: function() {
        return Ancestor;
      }},
    Unbounded: {get: function() {
        return Unbounded;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_di_47_annotations_95_impl__;
  var CONST = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).CONST;
  var DependencyAnnotation = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).DependencyAnnotation;
  var Visibility = function Visibility(depth, crossComponentBoundaries) {
    $traceurRuntime.superConstructor($Visibility).call(this);
    this.depth = depth;
    this.crossComponentBoundaries = crossComponentBoundaries;
  };
  var $Visibility = Visibility;
  ($traceurRuntime.createClass)(Visibility, {shouldIncludeSelf: function() {
      return this.depth === 0;
    }}, {}, DependencyAnnotation);
  Object.defineProperty(Visibility, "annotations", {get: function() {
      return [new CONST()];
    }});
  Object.defineProperty(Visibility, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.boolean]];
    }});
  var Self = function Self() {
    $traceurRuntime.superConstructor($Self).call(this, 0, false);
  };
  var $Self = Self;
  ($traceurRuntime.createClass)(Self, {}, {}, Visibility);
  Object.defineProperty(Self, "annotations", {get: function() {
      return [new CONST()];
    }});
  var Parent = function Parent() {
    $traceurRuntime.superConstructor($Parent).call(this, 1, false);
  };
  var $Parent = Parent;
  ($traceurRuntime.createClass)(Parent, {}, {}, Visibility);
  Object.defineProperty(Parent, "annotations", {get: function() {
      return [new CONST()];
    }});
  var Ancestor = function Ancestor() {
    $traceurRuntime.superConstructor($Ancestor).call(this, 999999, false);
  };
  var $Ancestor = Ancestor;
  ($traceurRuntime.createClass)(Ancestor, {}, {}, Visibility);
  Object.defineProperty(Ancestor, "annotations", {get: function() {
      return [new CONST()];
    }});
  var Unbounded = function Unbounded() {
    $traceurRuntime.superConstructor($Unbounded).call(this, 999999, true);
  };
  var $Unbounded = Unbounded;
  ($traceurRuntime.createClass)(Unbounded, {}, {}, Visibility);
  Object.defineProperty(Unbounded, "annotations", {get: function() {
      return [new CONST()];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/interfaces", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  "use strict";
  Object.defineProperties(module.exports, {
    OnChange: {get: function() {
        return OnChange;
      }},
    __esModule: {value: true}
  });
  var OnChange = function OnChange() {
    ;
  };
  ($traceurRuntime.createClass)(OnChange, {onChange: function(changes) {
      throw "OnChange.onChange is not implemented";
    }}, {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    View: {get: function() {
        return View;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      ABSTRACT = $__0.ABSTRACT,
      CONST = $__0.CONST,
      Type = $__0.Type;
  var View = function View($__2) {
    var $__3 = $__2,
        templateUrl = $__3.templateUrl,
        template = $__3.template,
        directives = $__3.directives,
        renderer = $__3.renderer;
    this.templateUrl = templateUrl;
    this.template = template;
    this.directives = directives;
    this.renderer = renderer;
  };
  ($traceurRuntime.createClass)(View, {}, {});
  Object.defineProperty(View, "annotations", {get: function() {
      return [new CONST()];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/forward_ref", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  function forwardRef(forwardRefFn) {
    forwardRefFn.__forward_ref__ = forwardRef;
    return forwardRefFn;
  }
  exports.forwardRef = forwardRef;
  function resolveForwardRef(type) {
    if (typeof type == 'function' && type.hasOwnProperty('__forward_ref__') && type.__forward_ref__ === forwardRef) {
      return type();
    } else {
      return type;
    }
  }
  exports.resolveForwardRef = resolveForwardRef;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/type_literal", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var TypeLiteral = (function() {
    function TypeLiteral() {}
    Object.defineProperty(TypeLiteral.prototype, "type", {
      get: function() {
        throw new Error("Type literals are only supported in Dart");
      },
      enumerable: true,
      configurable: true
    });
    return TypeLiteral;
  })();
  exports.TypeLiteral = TypeLiteral;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/exceptions", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  function findFirstClosedCycle(keys) {
    var res = [];
    for (var i = 0; i < keys.length; ++i) {
      if (collection_1.ListWrapper.contains(res, keys[i])) {
        collection_1.ListWrapper.push(res, keys[i]);
        return res;
      } else {
        collection_1.ListWrapper.push(res, keys[i]);
      }
    }
    return res;
  }
  function constructResolvingPath(keys) {
    if (keys.length > 1) {
      var reversed = findFirstClosedCycle(collection_1.ListWrapper.reversed(keys));
      var tokenStrs = collection_1.ListWrapper.map(reversed, function(k) {
        return lang_1.stringify(k.token);
      });
      return " (" + tokenStrs.join(' -> ') + ")";
    } else {
      return "";
    }
  }
  var AbstractBindingError = (function(_super) {
    __extends(AbstractBindingError, _super);
    function AbstractBindingError(key, constructResolvingMessage) {
      _super.call(this);
      this.keys = [key];
      this.constructResolvingMessage = constructResolvingMessage;
      this.message = this.constructResolvingMessage(this.keys);
    }
    AbstractBindingError.prototype.addKey = function(key) {
      collection_1.ListWrapper.push(this.keys, key);
      this.message = this.constructResolvingMessage(this.keys);
    };
    AbstractBindingError.prototype.toString = function() {
      return this.message;
    };
    return AbstractBindingError;
  })(lang_1.BaseException);
  exports.AbstractBindingError = AbstractBindingError;
  var NoBindingError = (function(_super) {
    __extends(NoBindingError, _super);
    function NoBindingError(key) {
      _super.call(this, key, function(keys) {
        var first = lang_1.stringify(collection_1.ListWrapper.first(keys).token);
        return "No provider for " + first + "!" + constructResolvingPath(keys);
      });
    }
    return NoBindingError;
  })(AbstractBindingError);
  exports.NoBindingError = NoBindingError;
  var AsyncBindingError = (function(_super) {
    __extends(AsyncBindingError, _super);
    function AsyncBindingError(key) {
      _super.call(this, key, function(keys) {
        var first = lang_1.stringify(collection_1.ListWrapper.first(keys).token);
        return "Cannot instantiate " + first + " synchronously. It is provided as a promise!" + constructResolvingPath(keys);
      });
    }
    return AsyncBindingError;
  })(AbstractBindingError);
  exports.AsyncBindingError = AsyncBindingError;
  var CyclicDependencyError = (function(_super) {
    __extends(CyclicDependencyError, _super);
    function CyclicDependencyError(key) {
      _super.call(this, key, function(keys) {
        return "Cannot instantiate cyclic dependency!" + constructResolvingPath(keys);
      });
    }
    return CyclicDependencyError;
  })(AbstractBindingError);
  exports.CyclicDependencyError = CyclicDependencyError;
  var InstantiationError = (function(_super) {
    __extends(InstantiationError, _super);
    function InstantiationError(cause, key) {
      _super.call(this, key, function(keys) {
        var first = lang_1.stringify(collection_1.ListWrapper.first(keys).token);
        return "Error during instantiation of " + first + "!" + constructResolvingPath(keys) + ". ORIGINAL ERROR: " + cause;
      });
      this.cause = cause;
      this.causeKey = key;
    }
    return InstantiationError;
  })(AbstractBindingError);
  exports.InstantiationError = InstantiationError;
  var InvalidBindingError = (function(_super) {
    __extends(InvalidBindingError, _super);
    function InvalidBindingError(binding) {
      _super.call(this);
      this.message = "Invalid binding - only instances of Binding and Type are allowed, got: " + binding.toString();
    }
    InvalidBindingError.prototype.toString = function() {
      return this.message;
    };
    return InvalidBindingError;
  })(lang_1.BaseException);
  exports.InvalidBindingError = InvalidBindingError;
  var NoAnnotationError = (function(_super) {
    __extends(NoAnnotationError, _super);
    function NoAnnotationError(typeOrFunc) {
      _super.call(this);
      this.message = "Cannot resolve all parameters for " + lang_1.stringify(typeOrFunc) + ". " + 'Make sure they all have valid type or annotations.';
    }
    NoAnnotationError.prototype.toString = function() {
      return this.message;
    };
    return NoAnnotationError;
  })(lang_1.BaseException);
  exports.NoAnnotationError = NoAnnotationError;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/opaque_token", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var OpaqueToken = (function() {
    function OpaqueToken(desc) {
      this._desc = "Token(" + desc + ")";
    }
    OpaqueToken.prototype.toString = function() {
      return this._desc;
    };
    return OpaqueToken;
  })();
  exports.OpaqueToken = OpaqueToken;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/change_detection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Directive: {get: function() {
        return Directive;
      }},
    Component: {get: function() {
        return Component;
      }},
    onDestroy: {get: function() {
        return onDestroy;
      }},
    onChange: {get: function() {
        return onChange;
      }},
    onAllChangesDone: {get: function() {
        return onAllChangesDone;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_change_95_detection__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      CONST = $__0.CONST,
      normalizeBlank = $__0.normalizeBlank,
      isPresent = $__0.isPresent;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__1.ListWrapper,
      List = $__1.List;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var DEFAULT = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).DEFAULT;
  var Directive = function Directive() {
    var $__6;
    var $__5 = arguments[0] !== (void 0) ? arguments[0] : {},
        selector = $__5.selector,
        properties = $__5.properties,
        events = $__5.events,
        hostListeners = $__5.hostListeners,
        hostProperties = $__5.hostProperties,
        hostAttributes = $__5.hostAttributes,
        hostActions = $__5.hostActions,
        lifecycle = $__5.lifecycle,
        hostInjector = $__5.hostInjector,
        compileChildren = ($__6 = $__5.compileChildren) === void 0 ? true : $__6;
    $traceurRuntime.superConstructor($Directive).call(this);
    this.selector = selector;
    this.properties = properties;
    this.events = events;
    this.hostListeners = hostListeners;
    this.hostProperties = hostProperties;
    this.hostAttributes = hostAttributes;
    this.hostActions = hostActions;
    this.lifecycle = lifecycle;
    this.compileChildren = compileChildren;
    this.hostInjector = hostInjector;
  };
  var $Directive = Directive;
  ($traceurRuntime.createClass)(Directive, {hasLifecycleHook: function(hook) {
      return isPresent(this.lifecycle) ? ListWrapper.contains(this.lifecycle, hook) : false;
    }}, {}, Injectable);
  Object.defineProperty(Directive, "annotations", {get: function() {
      return [new CONST()];
    }});
  Object.defineProperty(Directive.prototype.hasLifecycleHook, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var Component = function Component() {
    var $__6,
        $__7;
    var $__5 = arguments[0] !== (void 0) ? arguments[0] : {},
        selector = $__5.selector,
        properties = $__5.properties,
        events = $__5.events,
        hostListeners = $__5.hostListeners,
        hostProperties = $__5.hostProperties,
        hostAttributes = $__5.hostAttributes,
        hostActions = $__5.hostActions,
        appInjector = $__5.appInjector,
        lifecycle = $__5.lifecycle,
        hostInjector = $__5.hostInjector,
        viewInjector = $__5.viewInjector,
        changeDetection = ($__6 = $__5.changeDetection) === void 0 ? DEFAULT : $__6,
        compileChildren = ($__7 = $__5.compileChildren) === void 0 ? true : $__7;
    $traceurRuntime.superConstructor($Component).call(this, {
      selector: selector,
      properties: properties,
      events: events,
      hostListeners: hostListeners,
      hostProperties: hostProperties,
      hostAttributes: hostAttributes,
      hostActions: hostActions,
      hostInjector: hostInjector,
      lifecycle: lifecycle,
      compileChildren: compileChildren
    });
    this.changeDetection = changeDetection;
    this.appInjector = appInjector;
    this.viewInjector = viewInjector;
  };
  var $Component = Component;
  ($traceurRuntime.createClass)(Component, {}, {}, Directive);
  Object.defineProperty(Component, "annotations", {get: function() {
      return [new CONST()];
    }});
  var onDestroy = "onDestroy";
  var onChange = "onChange";
  var onAllChangesDone = "onAllChangesDone";
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/di", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Attribute: {get: function() {
        return Attribute;
      }},
    Query: {get: function() {
        return Query;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_di_47_annotations_95_impl__;
  var CONST = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).CONST;
  var DependencyAnnotation = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).DependencyAnnotation;
  var Attribute = function Attribute(attributeName) {
    $traceurRuntime.superConstructor($Attribute).call(this);
    this.attributeName = attributeName;
  };
  var $Attribute = Attribute;
  ($traceurRuntime.createClass)(Attribute, {get token() {
      return this;
    }}, {}, DependencyAnnotation);
  Object.defineProperty(Attribute, "annotations", {get: function() {
      return [new CONST()];
    }});
  var Query = function Query(directive) {
    $traceurRuntime.superConstructor($Query).call(this);
    this.directive = directive;
  };
  var $Query = Query;
  ($traceurRuntime.createClass)(Query, {}, {}, DependencyAnnotation);
  Object.defineProperty(Query, "annotations", {get: function() {
      return [new CONST()];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/api", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/change_detection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    EventBinding: {get: function() {
        return EventBinding;
      }},
    ElementBinder: {get: function() {
        return ElementBinder;
      }},
    DirectiveBinder: {get: function() {
        return DirectiveBinder;
      }},
    ProtoViewDto: {get: function() {
        return ProtoViewDto;
      }},
    DirectiveMetadata: {get: function() {
        return DirectiveMetadata;
      }},
    RenderProtoViewRef: {get: function() {
        return RenderProtoViewRef;
      }},
    RenderViewRef: {get: function() {
        return RenderViewRef;
      }},
    ViewDefinition: {get: function() {
        return ViewDefinition;
      }},
    RenderCompiler: {get: function() {
        return RenderCompiler;
      }},
    Renderer: {get: function() {
        return Renderer;
      }},
    EventDispatcher: {get: function() {
        return EventDispatcher;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_change_95_detection__;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__2.List,
      Map = $__2.Map;
  var ASTWithSource = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).ASTWithSource;
  var EventBinding = function EventBinding(fullName, source) {
    this.fullName = fullName;
    this.source = source;
  };
  ($traceurRuntime.createClass)(EventBinding, {}, {});
  Object.defineProperty(EventBinding, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [ASTWithSource]];
    }});
  var ElementBinder = function ElementBinder($__5) {
    var $__6 = $__5,
        index = $__6.index,
        parentIndex = $__6.parentIndex,
        distanceToParent = $__6.distanceToParent,
        directives = $__6.directives,
        nestedProtoView = $__6.nestedProtoView,
        propertyBindings = $__6.propertyBindings,
        variableBindings = $__6.variableBindings,
        eventBindings = $__6.eventBindings,
        textBindings = $__6.textBindings,
        readAttributes = $__6.readAttributes;
    this.index = index;
    this.parentIndex = parentIndex;
    this.distanceToParent = distanceToParent;
    this.directives = directives;
    this.nestedProtoView = nestedProtoView;
    this.propertyBindings = propertyBindings;
    this.variableBindings = variableBindings;
    this.eventBindings = eventBindings;
    this.textBindings = textBindings;
    this.readAttributes = readAttributes;
  };
  ($traceurRuntime.createClass)(ElementBinder, {}, {});
  var DirectiveBinder = function DirectiveBinder($__5) {
    var $__6 = $__5,
        directiveIndex = $__6.directiveIndex,
        propertyBindings = $__6.propertyBindings,
        eventBindings = $__6.eventBindings,
        hostPropertyBindings = $__6.hostPropertyBindings;
    this.directiveIndex = directiveIndex;
    this.propertyBindings = propertyBindings;
    this.eventBindings = eventBindings;
    this.hostPropertyBindings = hostPropertyBindings;
  };
  ($traceurRuntime.createClass)(DirectiveBinder, {}, {});
  var ProtoViewDto = function ProtoViewDto() {
    var $__5 = arguments[0] !== (void 0) ? arguments[0] : {},
        render = $__5.render,
        elementBinders = $__5.elementBinders,
        variableBindings = $__5.variableBindings,
        type = $__5.type;
    this.render = render;
    this.elementBinders = elementBinders;
    this.variableBindings = variableBindings;
    this.type = type;
  };
  ($traceurRuntime.createClass)(ProtoViewDto, {}, {
    get HOST_VIEW_TYPE() {
      return 0;
    },
    get COMPONENT_VIEW_TYPE() {
      return 1;
    },
    get EMBEDDED_VIEW_TYPE() {
      return 2;
    }
  });
  var DirectiveMetadata = function DirectiveMetadata($__5) {
    var $__6 = $__5,
        id = $__6.id,
        selector = $__6.selector,
        compileChildren = $__6.compileChildren,
        events = $__6.events,
        hostListeners = $__6.hostListeners,
        hostProperties = $__6.hostProperties,
        hostAttributes = $__6.hostAttributes,
        hostActions = $__6.hostActions,
        properties = $__6.properties,
        readAttributes = $__6.readAttributes,
        type = $__6.type,
        callOnDestroy = $__6.callOnDestroy,
        callOnChange = $__6.callOnChange,
        callOnAllChangesDone = $__6.callOnAllChangesDone,
        changeDetection = $__6.changeDetection;
    this.id = id;
    this.selector = selector;
    this.compileChildren = isPresent(compileChildren) ? compileChildren : true;
    this.events = events;
    this.hostListeners = hostListeners;
    this.hostProperties = hostProperties;
    this.hostAttributes = hostAttributes;
    this.hostActions = hostActions;
    this.properties = properties;
    this.readAttributes = readAttributes;
    this.type = type;
    this.callOnDestroy = callOnDestroy;
    this.callOnChange = callOnChange;
    this.callOnAllChangesDone = callOnAllChangesDone;
    this.changeDetection = changeDetection;
  };
  ($traceurRuntime.createClass)(DirectiveMetadata, {}, {
    get DIRECTIVE_TYPE() {
      return 0;
    },
    get COMPONENT_TYPE() {
      return 1;
    }
  });
  var RenderProtoViewRef = function RenderProtoViewRef() {
    ;
  };
  ($traceurRuntime.createClass)(RenderProtoViewRef, {}, {});
  var RenderViewRef = function RenderViewRef() {
    ;
  };
  ($traceurRuntime.createClass)(RenderViewRef, {}, {});
  var ViewDefinition = function ViewDefinition($__5) {
    var $__6 = $__5,
        componentId = $__6.componentId,
        absUrl = $__6.absUrl,
        template = $__6.template,
        directives = $__6.directives;
    this.componentId = componentId;
    this.absUrl = absUrl;
    this.template = template;
    this.directives = directives;
  };
  ($traceurRuntime.createClass)(ViewDefinition, {}, {});
  var RenderCompiler = function RenderCompiler() {
    ;
  };
  ($traceurRuntime.createClass)(RenderCompiler, {
    compileHost: function(componentId) {
      return null;
    },
    compile: function(template) {
      return null;
    }
  }, {});
  Object.defineProperty(RenderCompiler.prototype.compile, "parameters", {get: function() {
      return [[ViewDefinition]];
    }});
  var Renderer = function Renderer() {
    ;
  };
  ($traceurRuntime.createClass)(Renderer, {
    createRootHostView: function(hostProtoViewRef, hostElementSelector) {
      return null;
    },
    detachFreeHostView: function(parentHostViewRef, hostViewRef) {},
    createView: function(protoViewRef) {
      return null;
    },
    destroyView: function(viewRef) {},
    attachComponentView: function(hostViewRef, elementIndex, componentViewRef) {},
    detachComponentView: function(hostViewRef, boundElementIndex, componentViewRef) {},
    attachViewInContainer: function(parentViewRef, boundElementIndex, atIndex, viewRef) {},
    detachViewInContainer: function(parentViewRef, boundElementIndex, atIndex, viewRef) {},
    hydrateView: function(viewRef) {},
    dehydrateView: function(viewRef) {},
    setElementProperty: function(viewRef, elementIndex, propertyName, propertyValue) {},
    callAction: function(viewRef, elementIndex, actionExpression, actionArgs) {},
    setText: function(viewRef, textNodeIndex, text) {},
    setEventDispatcher: function(viewRef, dispatcher) {}
  }, {});
  Object.defineProperty(Renderer.prototype.createRootHostView, "parameters", {get: function() {
      return [[RenderProtoViewRef], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(Renderer.prototype.detachFreeHostView, "parameters", {get: function() {
      return [[RenderViewRef], [RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.createView, "parameters", {get: function() {
      return [[RenderProtoViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.destroyView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.attachComponentView, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.detachComponentView, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.attachViewInContainer, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.detachViewInContainer, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.hydrateView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.dehydrateView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(Renderer.prototype.setElementProperty, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(Renderer.prototype.callAction, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(Renderer.prototype.setText, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(Renderer.prototype.setEventDispatcher, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.any]];
    }});
  var EventDispatcher = function EventDispatcher() {
    ;
  };
  ($traceurRuntime.createClass)(EventDispatcher, {dispatchEvent: function(elementIndex, eventName, locals) {}}, {});
  Object.defineProperty(EventDispatcher.prototype.dispatchEvent, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.any)]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view_container", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    DomViewContainer: {get: function() {
        return DomViewContainer;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__view__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__0.ListWrapper,
      MapWrapper = $__0.MapWrapper,
      List = $__0.List;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var DomViewContainer = function DomViewContainer() {
    this.views = [];
  };
  ($traceurRuntime.createClass)(DomViewContainer, {
    contentTagContainers: function() {
      return this.views;
    },
    nodes: function() {
      var r = [];
      for (var i = 0; i < this.views.length; ++i) {
        r = ListWrapper.concat(r, this.views[i].rootNodes);
      }
      return r;
    }
  }, {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/view/element_binder", ["npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/reflection/types", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ElementBinder: {get: function() {
        return ElementBinder;
      }},
    Event: {get: function() {
        return Event;
      }},
    HostAction: {get: function() {
        return HostAction;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_change_95_detection__,
      $__angular2_47_src_47_reflection_47_types__,
      $__angular2_47_src_47_facade_47_collection__,
      $__proto_95_view__;
  var AST = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).AST;
  var SetterFn = ($__angular2_47_src_47_reflection_47_types__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/types"), $__angular2_47_src_47_reflection_47_types__ && $__angular2_47_src_47_reflection_47_types__.__esModule && $__angular2_47_src_47_reflection_47_types__ || {default: $__angular2_47_src_47_reflection_47_types__}).SetterFn;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__2.List,
      ListWrapper = $__2.ListWrapper;
  var protoViewModule = ($__proto_95_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view"), $__proto_95_view__ && $__proto_95_view__.__esModule && $__proto_95_view__ || {default: $__proto_95_view__});
  var ElementBinder = function ElementBinder() {
    var $__4 = arguments[0] !== (void 0) ? arguments[0] : {},
        textNodeIndices = $__4.textNodeIndices,
        contentTagSelector = $__4.contentTagSelector,
        nestedProtoView = $__4.nestedProtoView,
        componentId = $__4.componentId,
        eventLocals = $__4.eventLocals,
        localEvents = $__4.localEvents,
        globalEvents = $__4.globalEvents,
        hostActions = $__4.hostActions,
        parentIndex = $__4.parentIndex,
        distanceToParent = $__4.distanceToParent,
        propertySetters = $__4.propertySetters;
    this.textNodeIndices = textNodeIndices;
    this.contentTagSelector = contentTagSelector;
    this.nestedProtoView = nestedProtoView;
    this.componentId = componentId;
    this.eventLocals = eventLocals;
    this.localEvents = localEvents;
    this.globalEvents = globalEvents;
    this.hostActions = hostActions;
    this.parentIndex = parentIndex;
    this.distanceToParent = distanceToParent;
    this.propertySetters = propertySetters;
  };
  ($traceurRuntime.createClass)(ElementBinder, {}, {});
  var Event = function Event(name, target, fullName) {
    this.name = name;
    this.target = target;
    this.fullName = fullName;
  };
  ($traceurRuntime.createClass)(Event, {}, {});
  Object.defineProperty(Event, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  var HostAction = function HostAction(actionName, actionExpression, expression) {
    this.actionName = actionName;
    this.actionExpression = actionExpression;
    this.expression = expression;
  };
  ($traceurRuntime.createClass)(HostAction, {}, {});
  Object.defineProperty(HostAction, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [AST]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/util", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    NG_BINDING_CLASS_SELECTOR: {get: function() {
        return NG_BINDING_CLASS_SELECTOR;
      }},
    NG_BINDING_CLASS: {get: function() {
        return NG_BINDING_CLASS;
      }},
    EVENT_TARGET_SEPARATOR: {get: function() {
        return EVENT_TARGET_SEPARATOR;
      }},
    camelCaseToDashCase: {get: function() {
        return camelCaseToDashCase;
      }},
    dashCaseToCamelCase: {get: function() {
        return dashCaseToCamelCase;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      StringWrapper = $__0.StringWrapper,
      RegExpWrapper = $__0.RegExpWrapper,
      isPresent = $__0.isPresent;
  var NG_BINDING_CLASS_SELECTOR = '.ng-binding';
  var NG_BINDING_CLASS = 'ng-binding';
  var EVENT_TARGET_SEPARATOR = ':';
  var CAMEL_CASE_REGEXP = RegExpWrapper.create('([A-Z])');
  var DASH_CASE_REGEXP = RegExpWrapper.create('-([a-z])');
  function camelCaseToDashCase(input) {
    return StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, (function(m) {
      return '-' + m[1].toLowerCase();
    }));
  }
  Object.defineProperty(camelCaseToDashCase, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  function dashCaseToCamelCase(input) {
    return StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, (function(m) {
      return m[1].toUpperCase();
    }));
  }
  Object.defineProperty(dashCaseToCamelCase, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag", ["npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Content: {get: function() {
        return Content;
      }},
    __esModule: {value: true}
  });
  var $__light_95_dom__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__;
  var ldModule = ($__light_95_dom__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom"), $__light_95_dom__ && $__light_95_dom__.__esModule && $__light_95_dom__ || {default: $__light_95_dom__});
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__2.List,
      ListWrapper = $__2.ListWrapper;
  var ContentStrategy = function ContentStrategy() {
    ;
  };
  ($traceurRuntime.createClass)(ContentStrategy, {insert: function(nodes) {}}, {});
  Object.defineProperty(ContentStrategy.prototype.insert, "parameters", {get: function() {
      return [[List]];
    }});
  var RenderedContent = function RenderedContent(contentEl) {
    $traceurRuntime.superConstructor($RenderedContent).call(this);
    this.beginScript = contentEl;
    this.endScript = DOM.nextSibling(this.beginScript);
    this.nodes = [];
  };
  var $RenderedContent = RenderedContent;
  ($traceurRuntime.createClass)(RenderedContent, {
    insert: function(nodes) {
      this.nodes = nodes;
      DOM.insertAllBefore(this.endScript, nodes);
      this._removeNodesUntil(ListWrapper.isEmpty(nodes) ? this.endScript : nodes[0]);
    },
    _removeNodesUntil: function(node) {
      var p = DOM.parentElement(this.beginScript);
      for (var next = DOM.nextSibling(this.beginScript); next !== node; next = DOM.nextSibling(this.beginScript)) {
        DOM.removeChild(p, next);
      }
    }
  }, {}, ContentStrategy);
  Object.defineProperty(RenderedContent.prototype.insert, "parameters", {get: function() {
      return [[List]];
    }});
  var IntermediateContent = function IntermediateContent(destinationLightDom) {
    $traceurRuntime.superConstructor($IntermediateContent).call(this);
    this.nodes = [];
    this.destinationLightDom = destinationLightDom;
  };
  var $IntermediateContent = IntermediateContent;
  ($traceurRuntime.createClass)(IntermediateContent, {insert: function(nodes) {
      this.nodes = nodes;
      this.destinationLightDom.redistribute();
    }}, {}, ContentStrategy);
  Object.defineProperty(IntermediateContent, "parameters", {get: function() {
      return [[ldModule.LightDom]];
    }});
  Object.defineProperty(IntermediateContent.prototype.insert, "parameters", {get: function() {
      return [[List]];
    }});
  var Content = function Content(contentStartEl, selector) {
    this.select = selector;
    this.contentStartElement = contentStartEl;
    this._strategy = null;
  };
  ($traceurRuntime.createClass)(Content, {
    init: function(destinationLightDom) {
      this._strategy = isPresent(destinationLightDom) ? new IntermediateContent(destinationLightDom) : new RenderedContent(this.contentStartElement);
    },
    nodes: function() {
      return this._strategy.nodes;
    },
    insert: function(nodes) {
      this._strategy.insert(nodes);
    }
  }, {});
  Object.defineProperty(Content, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(Content.prototype.init, "parameters", {get: function() {
      return [[ldModule.LightDom]];
    }});
  Object.defineProperty(Content.prototype.insert, "parameters", {get: function() {
      return [[List]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ViewContainerRef: {get: function() {
        return ViewContainerRef;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_di__,
      $__angular2_47_src_47_facade_47_lang__,
      $__view_95_manager__,
      $__element_95_ref__,
      $__view_95_ref__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__0.ListWrapper,
      List = $__0.List;
  var Injector = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}).Injector;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__2.isPresent,
      isBlank = $__2.isBlank;
  var avmModule = ($__view_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager"), $__view_95_manager__ && $__view_95_manager__.__esModule && $__view_95_manager__ || {default: $__view_95_manager__});
  var ElementRef = ($__element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__element_95_ref__ && $__element_95_ref__.__esModule && $__element_95_ref__ || {default: $__element_95_ref__}).ElementRef;
  var $__4 = ($__view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__view_95_ref__ && $__view_95_ref__.__esModule && $__view_95_ref__ || {default: $__view_95_ref__}),
      ViewRef = $__4.ViewRef,
      ProtoViewRef = $__4.ProtoViewRef,
      internalView = $__4.internalView;
  var ViewContainerRef = function ViewContainerRef(viewManager, element) {
    this._viewManager = viewManager;
    this._element = element;
  };
  ($traceurRuntime.createClass)(ViewContainerRef, {
    _getViews: function() {
      var vc = internalView(this._element.parentView).viewContainers[this._element.boundElementIndex];
      return isPresent(vc) ? vc.views : [];
    },
    clear: function() {
      for (var i = this.length - 1; i >= 0; i--) {
        this.remove(i);
      }
    },
    get: function(index) {
      return new ViewRef(this._getViews()[index]);
    },
    get length() {
      return this._getViews().length;
    },
    create: function() {
      var protoViewRef = arguments[0] !== (void 0) ? arguments[0] : null;
      var atIndex = arguments[1] !== (void 0) ? arguments[1] : -1;
      var context = arguments[2];
      var injector = arguments[3] !== (void 0) ? arguments[3] : null;
      if (atIndex == -1)
        atIndex = this.length;
      return this._viewManager.createViewInContainer(this._element, atIndex, protoViewRef, context, injector);
    },
    insert: function(viewRef) {
      var atIndex = arguments[1] !== (void 0) ? arguments[1] : -1;
      if (atIndex == -1)
        atIndex = this.length;
      return this._viewManager.attachViewInContainer(this._element, atIndex, viewRef);
    },
    indexOf: function(viewRef) {
      return ListWrapper.indexOf(this._getViews(), internalView(viewRef));
    },
    remove: function() {
      var atIndex = arguments[0] !== (void 0) ? arguments[0] : -1;
      if (atIndex == -1)
        atIndex = this.length - 1;
      this._viewManager.destroyViewInContainer(this._element, atIndex);
    },
    detach: function() {
      var atIndex = arguments[0] !== (void 0) ? arguments[0] : -1;
      if (atIndex == -1)
        atIndex = this.length - 1;
      return this._viewManager.detachViewInContainer(this._element, atIndex);
    }
  }, {});
  Object.defineProperty(ViewContainerRef, "parameters", {get: function() {
      return [[avmModule.AppViewManager], [ElementRef]];
    }});
  Object.defineProperty(ViewContainerRef.prototype.get, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ViewContainerRef.prototype.create, "parameters", {get: function() {
      return [[ProtoViewRef], [$traceurRuntime.type.number], [ElementRef], [Injector]];
    }});
  Object.defineProperty(ViewContainerRef.prototype.insert, "parameters", {get: function() {
      return [[ViewRef], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ViewContainerRef.prototype.indexOf, "parameters", {get: function() {
      return [[ViewRef]];
    }});
  Object.defineProperty(ViewContainerRef.prototype.remove, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ViewContainerRef.prototype.detach, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager_utils", ["npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    AppViewManagerUtils: {get: function() {
        return AppViewManagerUtils;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_di__,
      $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_collection__,
      $__element_95_injector__,
      $__angular2_47_src_47_facade_47_lang__,
      $__view__,
      $__view_95_manager__,
      $__angular2_47_src_47_render_47_api__,
      $__angular2_47_change_95_detection__,
      $__directive_95_resolver__,
      $__angular2_47_src_47_render_47_api__;
  var $__0 = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}),
      Injector = $__0.Injector,
      Binding = $__0.Binding;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__2.ListWrapper,
      MapWrapper = $__2.MapWrapper,
      Map = $__2.Map,
      StringMapWrapper = $__2.StringMapWrapper,
      List = $__2.List;
  var eli = ($__element_95_injector__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"), $__element_95_injector__ && $__element_95_injector__.__esModule && $__element_95_injector__ || {default: $__element_95_injector__});
  var $__3 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__3.isPresent,
      isBlank = $__3.isBlank,
      BaseException = $__3.BaseException;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var avmModule = ($__view_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager"), $__view_95_manager__ && $__view_95_manager__.__esModule && $__view_95_manager__ || {default: $__view_95_manager__});
  var Renderer = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}).Renderer;
  var $__5 = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}),
      BindingPropagationConfig = $__5.BindingPropagationConfig,
      Locals = $__5.Locals;
  var DirectiveResolver = ($__directive_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver"), $__directive_95_resolver__ && $__directive_95_resolver__.__esModule && $__directive_95_resolver__ || {default: $__directive_95_resolver__}).DirectiveResolver;
  var RenderViewRef = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}).RenderViewRef;
  var AppViewManagerUtils = function AppViewManagerUtils(metadataReader) {
    this._directiveResolver = metadataReader;
  };
  ($traceurRuntime.createClass)(AppViewManagerUtils, {
    getComponentInstance: function(parentView, boundElementIndex) {
      var binder = parentView.proto.elementBinders[boundElementIndex];
      var eli = parentView.elementInjectors[boundElementIndex];
      if (binder.hasDynamicComponent()) {
        return eli.getDynamicallyLoadedComponent();
      } else {
        return eli.getComponent();
      }
    },
    createView: function(protoView, renderView, viewManager, renderer) {
      var view = new viewModule.AppView(renderer, protoView, protoView.protoLocals);
      view.render = renderView;
      var changeDetector = protoView.protoChangeDetector.instantiate(view);
      var binders = protoView.elementBinders;
      var elementInjectors = ListWrapper.createFixedSize(binders.length);
      var rootElementInjectors = [];
      var preBuiltObjects = ListWrapper.createFixedSize(binders.length);
      var componentChildViews = ListWrapper.createFixedSize(binders.length);
      for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
        var binder = binders[binderIdx];
        var elementInjector = null;
        var protoElementInjector = binder.protoElementInjector;
        if (isPresent(protoElementInjector)) {
          if (isPresent(protoElementInjector.parent)) {
            var parentElementInjector = elementInjectors[protoElementInjector.parent.index];
            elementInjector = protoElementInjector.instantiate(parentElementInjector);
          } else {
            elementInjector = protoElementInjector.instantiate(null);
            ListWrapper.push(rootElementInjectors, elementInjector);
          }
        }
        elementInjectors[binderIdx] = elementInjector;
        if (isPresent(elementInjector)) {
          var embeddedProtoView = binder.hasEmbeddedProtoView() ? binder.nestedProtoView : null;
          preBuiltObjects[binderIdx] = new eli.PreBuiltObjects(viewManager, view, embeddedProtoView);
        }
      }
      view.init(changeDetector, elementInjectors, rootElementInjectors, preBuiltObjects, componentChildViews);
      return view;
    },
    attachComponentView: function(hostView, boundElementIndex, componentView) {
      var childChangeDetector = componentView.changeDetector;
      hostView.changeDetector.addShadowDomChild(childChangeDetector);
      hostView.componentChildViews[boundElementIndex] = componentView;
    },
    detachComponentView: function(hostView, boundElementIndex) {
      var componentView = hostView.componentChildViews[boundElementIndex];
      hostView.changeDetector.removeShadowDomChild(componentView.changeDetector);
      hostView.componentChildViews[boundElementIndex] = null;
    },
    hydrateComponentView: function(hostView, boundElementIndex) {
      var injector = arguments[2] !== (void 0) ? arguments[2] : null;
      var elementInjector = hostView.elementInjectors[boundElementIndex];
      var componentView = hostView.componentChildViews[boundElementIndex];
      var component = this.getComponentInstance(hostView, boundElementIndex);
      this._hydrateView(componentView, injector, elementInjector, component, null);
    },
    hydrateRootHostView: function(hostView) {
      var injector = arguments[1] !== (void 0) ? arguments[1] : null;
      this._hydrateView(hostView, injector, null, new Object(), null);
    },
    attachAndHydrateFreeHostView: function(parentComponentHostView, parentComponentBoundElementIndex, hostView) {
      var injector = arguments[3] !== (void 0) ? arguments[3] : null;
      var hostElementInjector = parentComponentHostView.elementInjectors[parentComponentBoundElementIndex];
      var parentView = parentComponentHostView.componentChildViews[parentComponentBoundElementIndex];
      parentView.changeDetector.addChild(hostView.changeDetector);
      ListWrapper.push(parentView.freeHostViews, hostView);
      this._hydrateView(hostView, injector, hostElementInjector, new Object(), null);
    },
    detachFreeHostView: function(parentView, hostView) {
      parentView.changeDetector.removeChild(hostView.changeDetector);
      ListWrapper.remove(parentView.freeHostViews, hostView);
    },
    attachViewInContainer: function(parentView, boundElementIndex, contextView, contextBoundElementIndex, atIndex, view) {
      if (isBlank(contextView)) {
        contextView = parentView;
        contextBoundElementIndex = boundElementIndex;
      }
      parentView.changeDetector.addChild(view.changeDetector);
      var viewContainer = parentView.viewContainers[boundElementIndex];
      if (isBlank(viewContainer)) {
        viewContainer = new viewModule.AppViewContainer();
        parentView.viewContainers[boundElementIndex] = viewContainer;
      }
      ListWrapper.insert(viewContainer.views, atIndex, view);
      var sibling;
      if (atIndex == 0) {
        sibling = null;
      } else {
        sibling = ListWrapper.last(viewContainer.views[atIndex - 1].rootElementInjectors);
      }
      var elementInjector = contextView.elementInjectors[contextBoundElementIndex];
      for (var i = view.rootElementInjectors.length - 1; i >= 0; i--) {
        view.rootElementInjectors[i].linkAfter(elementInjector, sibling);
      }
    },
    detachViewInContainer: function(parentView, boundElementIndex, atIndex) {
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[atIndex];
      view.changeDetector.remove();
      ListWrapper.removeAt(viewContainer.views, atIndex);
      for (var i = 0; i < view.rootElementInjectors.length; ++i) {
        view.rootElementInjectors[i].unlink();
      }
    },
    hydrateViewInContainer: function(parentView, boundElementIndex, contextView, contextBoundElementIndex, atIndex, injector) {
      if (isBlank(contextView)) {
        contextView = parentView;
        contextBoundElementIndex = boundElementIndex;
      }
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[atIndex];
      var elementInjector = contextView.elementInjectors[contextBoundElementIndex].getHost();
      this._hydrateView(view, injector, elementInjector, contextView.context, contextView.locals);
    },
    hydrateDynamicComponentInElementInjector: function(hostView, boundElementIndex, componentBinding) {
      var injector = arguments[3] !== (void 0) ? arguments[3] : null;
      var elementInjector = hostView.elementInjectors[boundElementIndex];
      if (isPresent(elementInjector.getDynamicallyLoadedComponent())) {
        throw new BaseException(("There already is a dynamic component loaded at element " + boundElementIndex));
      }
      if (isBlank(injector)) {
        injector = elementInjector.getLightDomAppInjector();
      }
      var annotation = this._directiveResolver.resolve(componentBinding.token);
      var componentDirective = eli.DirectiveBinding.createFromBinding(componentBinding, annotation);
      elementInjector.dynamicallyCreateComponent(componentDirective, injector);
    },
    _hydrateView: function(view, appInjector, hostElementInjector, context, parentLocals) {
      if (isBlank(appInjector)) {
        appInjector = hostElementInjector.getShadowDomAppInjector();
      }
      if (isBlank(appInjector)) {
        appInjector = hostElementInjector.getLightDomAppInjector();
      }
      view.context = context;
      view.locals.parent = parentLocals;
      var binders = view.proto.elementBinders;
      for (var i = 0; i < binders.length; ++i) {
        var elementInjector = view.elementInjectors[i];
        if (isPresent(elementInjector)) {
          elementInjector.hydrate(appInjector, hostElementInjector, view.preBuiltObjects[i]);
          this._setUpEventEmitters(view, elementInjector, i);
          this._setUpHostActions(view, elementInjector, i);
          var exportImplicitName = elementInjector.getExportImplicitName();
          if (elementInjector.isExportingComponent()) {
            view.locals.set(exportImplicitName, elementInjector.getComponent());
          } else if (elementInjector.isExportingElement()) {
            view.locals.set(exportImplicitName, elementInjector.getElementRef().domElement);
          }
        }
      }
      view.changeDetector.hydrate(view.context, view.locals, view);
    },
    _setUpEventEmitters: function(view, elementInjector, boundElementIndex) {
      var emitters = elementInjector.getEventEmitterAccessors();
      for (var directiveIndex = 0; directiveIndex < emitters.length; ++directiveIndex) {
        var directiveEmitters = emitters[directiveIndex];
        var directive = elementInjector.getDirectiveAtIndex(directiveIndex);
        for (var eventIndex = 0; eventIndex < directiveEmitters.length; ++eventIndex) {
          var eventEmitterAccessor = directiveEmitters[eventIndex];
          eventEmitterAccessor.subscribe(view, boundElementIndex, directive);
        }
      }
    },
    _setUpHostActions: function(view, elementInjector, boundElementIndex) {
      var hostActions = elementInjector.getHostActionAccessors();
      for (var directiveIndex = 0; directiveIndex < hostActions.length; ++directiveIndex) {
        var directiveHostActions = hostActions[directiveIndex];
        var directive = elementInjector.getDirectiveAtIndex(directiveIndex);
        for (var index = 0; index < directiveHostActions.length; ++index) {
          var hostActionAccessor = directiveHostActions[index];
          hostActionAccessor.subscribe(view, boundElementIndex, directive);
        }
      }
    },
    dehydrateView: function(view) {
      var binders = view.proto.elementBinders;
      for (var i = 0; i < binders.length; ++i) {
        var elementInjector = view.elementInjectors[i];
        if (isPresent(elementInjector)) {
          elementInjector.dehydrate();
        }
      }
      if (isPresent(view.locals)) {
        view.locals.clearValues();
      }
      view.context = null;
      view.changeDetector.dehydrate();
    }
  }, {});
  Object.defineProperty(AppViewManagerUtils, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(AppViewManagerUtils, "parameters", {get: function() {
      return [[DirectiveResolver]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.getComponentInstance, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.createView, "parameters", {get: function() {
      return [[viewModule.AppProtoView], [RenderViewRef], [avmModule.AppViewManager], [Renderer]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.attachComponentView, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [viewModule.AppView]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.detachComponentView, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.hydrateComponentView, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [Injector]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.hydrateRootHostView, "parameters", {get: function() {
      return [[viewModule.AppView], [Injector]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.attachAndHydrateFreeHostView, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [viewModule.AppView], [Injector]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.detachFreeHostView, "parameters", {get: function() {
      return [[viewModule.AppView], [viewModule.AppView]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.attachViewInContainer, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [viewModule.AppView], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [viewModule.AppView]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.detachViewInContainer, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.hydrateViewInContainer, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [viewModule.AppView], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [Injector]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.hydrateDynamicComponentInElementInjector, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [Binding], [Injector]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype._hydrateView, "parameters", {get: function() {
      return [[viewModule.AppView], [Injector], [eli.ElementInjector], [Object], [Locals]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype._setUpEventEmitters, "parameters", {get: function() {
      return [[viewModule.AppView], [eli.ElementInjector], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype._setUpHostActions, "parameters", {get: function() {
      return [[viewModule.AppView], [eli.ElementInjector], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManagerUtils.prototype.dehydrateView, "parameters", {get: function() {
      return [[viewModule.AppView]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_pool", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    APP_VIEW_POOL_CAPACITY: {get: function() {
        return APP_VIEW_POOL_CAPACITY;
      }},
    AppViewPool: {get: function() {
        return AppViewPool;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__,
      $__view__;
  var Inject = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Inject;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__1.ListWrapper,
      MapWrapper = $__1.MapWrapper,
      Map = $__1.Map,
      List = $__1.List;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__2.isPresent,
      isBlank = $__2.isBlank;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var APP_VIEW_POOL_CAPACITY = 'AppViewPool.viewPoolCapacity';
  var AppViewPool = function AppViewPool(poolCapacityPerProtoView) {
    this._poolCapacityPerProtoView = poolCapacityPerProtoView;
    this._pooledViewsPerProtoView = MapWrapper.create();
  };
  ($traceurRuntime.createClass)(AppViewPool, {
    getView: function(protoView) {
      var pooledViews = MapWrapper.get(this._pooledViewsPerProtoView, protoView);
      if (isPresent(pooledViews) && pooledViews.length > 0) {
        return ListWrapper.removeLast(pooledViews);
      }
      return null;
    },
    returnView: function(view) {
      var protoView = view.proto;
      var pooledViews = MapWrapper.get(this._pooledViewsPerProtoView, protoView);
      if (isBlank(pooledViews)) {
        pooledViews = [];
        MapWrapper.set(this._pooledViewsPerProtoView, protoView, pooledViews);
      }
      if (pooledViews.length < this._poolCapacityPerProtoView) {
        ListWrapper.push(pooledViews, view);
      }
    }
  }, {});
  Object.defineProperty(AppViewPool, "parameters", {get: function() {
      return [[new Inject(APP_VIEW_POOL_CAPACITY)]];
    }});
  Object.defineProperty(AppViewPool.prototype.getView, "parameters", {get: function() {
      return [[viewModule.AppProtoView]];
    }});
  Object.defineProperty(AppViewPool.prototype.returnView, "parameters", {get: function() {
      return [[viewModule.AppView]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/base_query_list", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  var $__3;
  Object.defineProperties(module.exports, {
    BaseQueryList: {get: function() {
        return BaseQueryList;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__0.List,
      MapWrapper = $__0.MapWrapper,
      ListWrapper = $__0.ListWrapper;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var BaseQueryList = function BaseQueryList() {
    this._results = [];
    this._callbacks = [];
    this._dirty = false;
  };
  ($traceurRuntime.createClass)(BaseQueryList, ($__3 = {}, Object.defineProperty($__3, Symbol.iterator, {
    value: function() {
      return this._results[Symbol.iterator]();
    },
    configurable: true,
    enumerable: true,
    writable: true
  }), Object.defineProperty($__3, "reset", {
    value: function(newList) {
      this._results = newList;
      this._dirty = true;
    },
    configurable: true,
    enumerable: true,
    writable: true
  }), Object.defineProperty($__3, "add", {
    value: function(obj) {
      ListWrapper.push(this._results, obj);
      this._dirty = true;
    },
    configurable: true,
    enumerable: true,
    writable: true
  }), Object.defineProperty($__3, "fireCallbacks", {
    value: function() {
      if (this._dirty) {
        ListWrapper.forEach(this._callbacks, (function(c) {
          return c();
        }));
        this._dirty = false;
      }
    },
    configurable: true,
    enumerable: true,
    writable: true
  }), Object.defineProperty($__3, "onChange", {
    value: function(callback) {
      ListWrapper.push(this._callbacks, callback);
    },
    configurable: true,
    enumerable: true,
    writable: true
  }), Object.defineProperty($__3, "removeCallback", {
    value: function(callback) {
      ListWrapper.remove(this._callbacks, callback);
    },
    configurable: true,
    enumerable: true,
    writable: true
  }), $__3), {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_binder", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ElementBinder: {get: function() {
        return ElementBinder;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__element_95_injector__,
      $__element_95_injector__,
      $__angular2_47_src_47_facade_47_collection__,
      $__view__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      int = $__0.int,
      isBlank = $__0.isBlank,
      isPresent = $__0.isPresent,
      BaseException = $__0.BaseException;
  var eiModule = ($__element_95_injector__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"), $__element_95_injector__ && $__element_95_injector__.__esModule && $__element_95_injector__ || {default: $__element_95_injector__});
  var DirectiveBinding = ($__element_95_injector__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"), $__element_95_injector__ && $__element_95_injector__.__esModule && $__element_95_injector__ || {default: $__element_95_injector__}).DirectiveBinding;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__2.List,
      StringMap = $__2.StringMap;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var ElementBinder = function ElementBinder(index, parent, distanceToParent, protoElementInjector, componentDirective) {
    if (isBlank(index)) {
      throw new BaseException('null index not allowed.');
    }
    this.protoElementInjector = protoElementInjector;
    this.componentDirective = componentDirective;
    this.parent = parent;
    this.index = index;
    this.distanceToParent = distanceToParent;
    this.hostListeners = null;
    this.nestedProtoView = null;
  };
  var $ElementBinder = ElementBinder;
  ($traceurRuntime.createClass)(ElementBinder, {
    hasStaticComponent: function() {
      return isPresent(this.componentDirective) && isPresent(this.nestedProtoView);
    },
    hasDynamicComponent: function() {
      return isPresent(this.componentDirective) && isBlank(this.nestedProtoView);
    },
    hasEmbeddedProtoView: function() {
      return !isPresent(this.componentDirective) && isPresent(this.nestedProtoView);
    }
  }, {});
  Object.defineProperty(ElementBinder, "parameters", {get: function() {
      return [[int], [ElementBinder], [int], [eiModule.ProtoElementInjector], [DirectiveBinding]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/template_resolver", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    TemplateResolver: {get: function() {
        return TemplateResolver;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_view__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_reflection_47_reflection__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var View = ($__angular2_47_src_47_core_47_annotations_95_impl_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view"), $__angular2_47_src_47_core_47_annotations_95_impl_47_view__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_view__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_view__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_view__}).View;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      Type = $__2.Type,
      stringify = $__2.stringify,
      isBlank = $__2.isBlank,
      BaseException = $__2.BaseException;
  var $__3 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      Map = $__3.Map,
      MapWrapper = $__3.MapWrapper,
      List = $__3.List,
      ListWrapper = $__3.ListWrapper;
  var reflector = ($__angular2_47_src_47_reflection_47_reflection__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection"), $__angular2_47_src_47_reflection_47_reflection__ && $__angular2_47_src_47_reflection_47_reflection__.__esModule && $__angular2_47_src_47_reflection_47_reflection__ || {default: $__angular2_47_src_47_reflection_47_reflection__}).reflector;
  var TemplateResolver = function TemplateResolver() {
    this._cache = MapWrapper.create();
  };
  ($traceurRuntime.createClass)(TemplateResolver, {
    resolve: function(component) {
      var view = MapWrapper.get(this._cache, component);
      if (isBlank(view)) {
        view = this._resolve(component);
        MapWrapper.set(this._cache, component, view);
      }
      return view;
    },
    _resolve: function(component) {
      var annotations = reflector.annotations(component);
      for (var i = 0; i < annotations.length; i++) {
        var annotation = annotations[i];
        if (annotation instanceof View) {
          return annotation;
        }
      }
      return null;
    }
  }, {});
  Object.defineProperty(TemplateResolver, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(TemplateResolver.prototype.resolve, "parameters", {get: function() {
      return [[Type]];
    }});
  Object.defineProperty(TemplateResolver.prototype._resolve, "parameters", {get: function() {
      return [[Type]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/component_url_mapper", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ComponentUrlMapper: {get: function() {
        return ComponentUrlMapper;
      }},
    RuntimeComponentUrlMapper: {get: function() {
        return RuntimeComponentUrlMapper;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      Type = $__1.Type,
      isPresent = $__1.isPresent;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      Map = $__2.Map,
      MapWrapper = $__2.MapWrapper;
  var ComponentUrlMapper = function ComponentUrlMapper() {
    ;
  };
  ($traceurRuntime.createClass)(ComponentUrlMapper, {getUrl: function(component) {
      return './';
    }}, {});
  Object.defineProperty(ComponentUrlMapper, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(ComponentUrlMapper.prototype.getUrl, "parameters", {get: function() {
      return [[Type]];
    }});
  var RuntimeComponentUrlMapper = function RuntimeComponentUrlMapper() {
    $traceurRuntime.superConstructor($RuntimeComponentUrlMapper).call(this);
    this._componentUrls = MapWrapper.create();
  };
  var $RuntimeComponentUrlMapper = RuntimeComponentUrlMapper;
  ($traceurRuntime.createClass)(RuntimeComponentUrlMapper, {
    setComponentUrl: function(component, url) {
      MapWrapper.set(this._componentUrls, component, url);
    },
    getUrl: function(component) {
      var url = MapWrapper.get(this._componentUrls, component);
      if (isPresent(url))
        return url;
      return $traceurRuntime.superGet(this, $RuntimeComponentUrlMapper.prototype, "getUrl").call(this, component);
    }
  }, {}, ComponentUrlMapper);
  Object.defineProperty(RuntimeComponentUrlMapper.prototype.setComponentUrl, "parameters", {get: function() {
      return [[Type], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(RuntimeComponentUrlMapper.prototype.getUrl, "parameters", {get: function() {
      return [[Type]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/proto_view_factory", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ProtoViewFactory: {get: function() {
        return ProtoViewFactory;
      }},
    getChangeDetectorDefinitions: {get: function() {
        return getChangeDetectorDefinitions;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_reflection_47_reflection__,
      $__angular2_47_change_95_detection__,
      $__angular2_47_src_47_render_47_api__,
      $__view__,
      $__element_95_injector__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__1.List,
      ListWrapper = $__1.ListWrapper,
      MapWrapper = $__1.MapWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__2.isPresent,
      isBlank = $__2.isBlank;
  var reflector = ($__angular2_47_src_47_reflection_47_reflection__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection"), $__angular2_47_src_47_reflection_47_reflection__ && $__angular2_47_src_47_reflection_47_reflection__.__esModule && $__angular2_47_src_47_reflection_47_reflection__ || {default: $__angular2_47_src_47_reflection_47_reflection__}).reflector;
  var $__4 = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}),
      ChangeDetection = $__4.ChangeDetection,
      DirectiveIndex = $__4.DirectiveIndex,
      BindingRecord = $__4.BindingRecord,
      DirectiveRecord = $__4.DirectiveRecord,
      ProtoChangeDetector = $__4.ProtoChangeDetector,
      DEFAULT = $__4.DEFAULT,
      ChangeDetectorDefinition = $__4.ChangeDetectorDefinition;
  var renderApi = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__});
  var AppProtoView = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__}).AppProtoView;
  var $__6 = ($__element_95_injector__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"), $__element_95_injector__ && $__element_95_injector__.__esModule && $__element_95_injector__ || {default: $__element_95_injector__}),
      ProtoElementInjector = $__6.ProtoElementInjector,
      DirectiveBinding = $__6.DirectiveBinding;
  var BindingRecordsCreator = function BindingRecordsCreator() {
    this._directiveRecordsMap = MapWrapper.create();
    this._textNodeIndex = 0;
  };
  ($traceurRuntime.createClass)(BindingRecordsCreator, {
    getBindingRecords: function(elementBinders, allDirectiveMetadatas) {
      var bindings = [];
      for (var boundElementIndex = 0; boundElementIndex < elementBinders.length; boundElementIndex++) {
        var renderElementBinder = elementBinders[boundElementIndex];
        this._createTextNodeRecords(bindings, renderElementBinder);
        this._createElementPropertyRecords(bindings, boundElementIndex, renderElementBinder);
        this._createDirectiveRecords(bindings, boundElementIndex, renderElementBinder.directives, allDirectiveMetadatas);
      }
      return bindings;
    },
    getDirectiveRecords: function(elementBinders, allDirectiveMetadatas) {
      var directiveRecords = [];
      for (var elementIndex = 0; elementIndex < elementBinders.length; ++elementIndex) {
        var dirs = elementBinders[elementIndex].directives;
        for (var dirIndex = 0; dirIndex < dirs.length; ++dirIndex) {
          ListWrapper.push(directiveRecords, this._getDirectiveRecord(elementIndex, dirIndex, allDirectiveMetadatas[dirs[dirIndex].directiveIndex]));
        }
      }
      return directiveRecords;
    },
    _createTextNodeRecords: function(bindings, renderElementBinder) {
      var $__7 = this;
      if (isBlank(renderElementBinder.textBindings))
        return ;
      ListWrapper.forEach(renderElementBinder.textBindings, (function(b) {
        ListWrapper.push(bindings, BindingRecord.createForTextNode(b, $__7._textNodeIndex++));
      }));
    },
    _createElementPropertyRecords: function(bindings, boundElementIndex, renderElementBinder) {
      MapWrapper.forEach(renderElementBinder.propertyBindings, (function(astWithSource, propertyName) {
        ListWrapper.push(bindings, BindingRecord.createForElement(astWithSource, boundElementIndex, propertyName));
      }));
    },
    _createDirectiveRecords: function(bindings, boundElementIndex, directiveBinders, allDirectiveMetadatas) {
      var $__7 = this;
      for (var i = 0; i < directiveBinders.length; i++) {
        var directiveBinder = directiveBinders[i];
        var directiveMetadata = allDirectiveMetadatas[directiveBinder.directiveIndex];
        MapWrapper.forEach(directiveBinder.propertyBindings, (function(astWithSource, propertyName) {
          var setter = reflector.setter(propertyName);
          var directiveRecord = $__7._getDirectiveRecord(boundElementIndex, i, directiveMetadata);
          ListWrapper.push(bindings, BindingRecord.createForDirective(astWithSource, propertyName, setter, directiveRecord));
        }));
        MapWrapper.forEach(directiveBinder.hostPropertyBindings, (function(astWithSource, propertyName) {
          var dirIndex = new DirectiveIndex(boundElementIndex, i);
          ListWrapper.push(bindings, BindingRecord.createForHostProperty(dirIndex, astWithSource, propertyName));
        }));
      }
    },
    _getDirectiveRecord: function(boundElementIndex, directiveIndex, directiveMetadata) {
      var id = boundElementIndex * 100 + directiveIndex;
      if (!MapWrapper.contains(this._directiveRecordsMap, id)) {
        var changeDetection = directiveMetadata.changeDetection;
        MapWrapper.set(this._directiveRecordsMap, id, new DirectiveRecord(new DirectiveIndex(boundElementIndex, directiveIndex), directiveMetadata.callOnAllChangesDone, directiveMetadata.callOnChange, changeDetection));
      }
      return MapWrapper.get(this._directiveRecordsMap, id);
    }
  }, {});
  Object.defineProperty(BindingRecordsCreator.prototype.getBindingRecords, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, renderApi.ElementBinder)], [$traceurRuntime.genericType(List, renderApi.DirectiveMetadata)]];
    }});
  Object.defineProperty(BindingRecordsCreator.prototype.getDirectiveRecords, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, renderApi.ElementBinder)], [$traceurRuntime.genericType(List, renderApi.DirectiveMetadata)]];
    }});
  Object.defineProperty(BindingRecordsCreator.prototype._createTextNodeRecords, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, BindingRecord)], [renderApi.ElementBinder]];
    }});
  Object.defineProperty(BindingRecordsCreator.prototype._createElementPropertyRecords, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, BindingRecord)], [$traceurRuntime.type.number], [renderApi.ElementBinder]];
    }});
  Object.defineProperty(BindingRecordsCreator.prototype._createDirectiveRecords, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, BindingRecord)], [$traceurRuntime.type.number], [$traceurRuntime.genericType(List, renderApi.DirectiveBinder)], [$traceurRuntime.genericType(List, renderApi.DirectiveMetadata)]];
    }});
  Object.defineProperty(BindingRecordsCreator.prototype._getDirectiveRecord, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.number], [renderApi.DirectiveMetadata]];
    }});
  var ProtoViewFactory = function ProtoViewFactory(changeDetection) {
    this._changeDetection = changeDetection;
  };
  ($traceurRuntime.createClass)(ProtoViewFactory, {createAppProtoViews: function(hostComponentBinding, rootRenderProtoView, allDirectives) {
      var $__7 = this;
      var allRenderDirectiveMetadata = ListWrapper.map(allDirectives, (function(directiveBinding) {
        return directiveBinding.metadata;
      }));
      var nestedPvsWithIndex = _collectNestedProtoViews(rootRenderProtoView);
      var nestedPvVariableBindings = _collectNestedProtoViewsVariableBindings(nestedPvsWithIndex);
      var nestedPvVariableNames = _collectNestedProtoViewsVariableNames(nestedPvsWithIndex, nestedPvVariableBindings);
      var changeDetectorDefs = _getChangeDetectorDefinitions(hostComponentBinding.metadata, nestedPvsWithIndex, nestedPvVariableNames, allRenderDirectiveMetadata);
      var protoChangeDetectors = ListWrapper.map(changeDetectorDefs, (function(changeDetectorDef) {
        return $__7._changeDetection.createProtoChangeDetector(changeDetectorDef);
      }));
      var appProtoViews = ListWrapper.createFixedSize(nestedPvsWithIndex.length);
      ListWrapper.forEach(nestedPvsWithIndex, (function(pvWithIndex) {
        var appProtoView = _createAppProtoView(pvWithIndex.renderProtoView, protoChangeDetectors[pvWithIndex.index], nestedPvVariableBindings[pvWithIndex.index], allDirectives);
        if (isPresent(pvWithIndex.parentIndex)) {
          var parentView = appProtoViews[pvWithIndex.parentIndex];
          parentView.elementBinders[pvWithIndex.boundElementIndex].nestedProtoView = appProtoView;
        }
        appProtoViews[pvWithIndex.index] = appProtoView;
      }));
      return appProtoViews;
    }}, {});
  Object.defineProperty(ProtoViewFactory, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(ProtoViewFactory, "parameters", {get: function() {
      return [[ChangeDetection]];
    }});
  Object.defineProperty(ProtoViewFactory.prototype.createAppProtoViews, "parameters", {get: function() {
      return [[DirectiveBinding], [renderApi.ProtoViewDto], [$traceurRuntime.genericType(List, DirectiveBinding)]];
    }});
  function getChangeDetectorDefinitions(hostComponentMetadata, rootRenderProtoView, allRenderDirectiveMetadata) {
    var nestedPvsWithIndex = _collectNestedProtoViews(rootRenderProtoView);
    var nestedPvVariableBindings = _collectNestedProtoViewsVariableBindings(nestedPvsWithIndex);
    var nestedPvVariableNames = _collectNestedProtoViewsVariableNames(nestedPvsWithIndex, nestedPvVariableBindings);
    return _getChangeDetectorDefinitions(hostComponentMetadata, nestedPvsWithIndex, nestedPvVariableNames, allRenderDirectiveMetadata);
  }
  Object.defineProperty(getChangeDetectorDefinitions, "parameters", {get: function() {
      return [[renderApi.DirectiveMetadata], [renderApi.ProtoViewDto], [$traceurRuntime.genericType(List, renderApi.DirectiveMetadata)]];
    }});
  function _collectNestedProtoViews(renderProtoView) {
    var parentIndex = arguments[1] !== (void 0) ? arguments[1] : null;
    var boundElementIndex = arguments[2] !== (void 0) ? arguments[2] : null;
    var result = arguments[3] !== (void 0) ? arguments[3] : null;
    if (isBlank(result)) {
      result = [];
    }
    ListWrapper.push(result, new RenderProtoViewWithIndex(renderProtoView, result.length, parentIndex, boundElementIndex));
    var currentIndex = result.length - 1;
    var childBoundElementIndex = 0;
    ListWrapper.forEach(renderProtoView.elementBinders, (function(elementBinder) {
      if (isPresent(elementBinder.nestedProtoView)) {
        _collectNestedProtoViews(elementBinder.nestedProtoView, currentIndex, childBoundElementIndex, result);
      }
      childBoundElementIndex++;
    }));
    return result;
  }
  Object.defineProperty(_collectNestedProtoViews, "parameters", {get: function() {
      return [[renderApi.ProtoViewDto], [$traceurRuntime.type.number], [], [$traceurRuntime.genericType(List, RenderProtoViewWithIndex)]];
    }});
  function _getChangeDetectorDefinitions(hostComponentMetadata, nestedPvsWithIndex, nestedPvVariableNames, allRenderDirectiveMetadata) {
    return ListWrapper.map(nestedPvsWithIndex, (function(pvWithIndex) {
      var elementBinders = pvWithIndex.renderProtoView.elementBinders;
      var bindingRecordsCreator = new BindingRecordsCreator();
      var bindingRecords = bindingRecordsCreator.getBindingRecords(elementBinders, allRenderDirectiveMetadata);
      var directiveRecords = bindingRecordsCreator.getDirectiveRecords(elementBinders, allRenderDirectiveMetadata);
      var strategyName = DEFAULT;
      var typeString;
      if (pvWithIndex.renderProtoView.type === renderApi.ProtoViewDto.COMPONENT_VIEW_TYPE) {
        strategyName = hostComponentMetadata.changeDetection;
        typeString = 'comp';
      } else if (pvWithIndex.renderProtoView.type === renderApi.ProtoViewDto.HOST_VIEW_TYPE) {
        typeString = 'host';
      } else {
        typeString = 'embedded';
      }
      var id = (hostComponentMetadata.id + "_" + typeString + "_" + pvWithIndex.index);
      var variableNames = nestedPvVariableNames[pvWithIndex.index];
      return new ChangeDetectorDefinition(id, strategyName, variableNames, bindingRecords, directiveRecords);
    }));
  }
  Object.defineProperty(_getChangeDetectorDefinitions, "parameters", {get: function() {
      return [[renderApi.DirectiveMetadata], [$traceurRuntime.genericType(List, RenderProtoViewWithIndex)], [$traceurRuntime.genericType(List, $traceurRuntime.genericType(List, $traceurRuntime.type.string))], [$traceurRuntime.genericType(List, renderApi.DirectiveMetadata)]];
    }});
  function _createAppProtoView(renderProtoView, protoChangeDetector, variableBindings, allDirectives) {
    var elementBinders = renderProtoView.elementBinders;
    var protoView = new AppProtoView(renderProtoView.render, protoChangeDetector, variableBindings);
    _createElementBinders(protoView, elementBinders, allDirectives);
    _bindDirectiveEvents(protoView, elementBinders);
    return protoView;
  }
  Object.defineProperty(_createAppProtoView, "parameters", {get: function() {
      return [[renderApi.ProtoViewDto], [ProtoChangeDetector], [$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.string)], [$traceurRuntime.genericType(List, DirectiveBinding)]];
    }});
  function _collectNestedProtoViewsVariableBindings(nestedPvsWithIndex) {
    return ListWrapper.map(nestedPvsWithIndex, (function(pvWithIndex) {
      return _createVariableBindings(pvWithIndex.renderProtoView);
    }));
  }
  Object.defineProperty(_collectNestedProtoViewsVariableBindings, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, RenderProtoViewWithIndex)]];
    }});
  function _createVariableBindings(renderProtoView) {
    var variableBindings = MapWrapper.create();
    MapWrapper.forEach(renderProtoView.variableBindings, (function(mappedName, varName) {
      MapWrapper.set(variableBindings, varName, mappedName);
    }));
    ListWrapper.forEach(renderProtoView.elementBinders, (function(binder) {
      MapWrapper.forEach(binder.variableBindings, (function(mappedName, varName) {
        MapWrapper.set(variableBindings, varName, mappedName);
      }));
    }));
    return variableBindings;
  }
  function _collectNestedProtoViewsVariableNames(nestedPvsWithIndex, nestedPvVariableBindings) {
    var nestedPvVariableNames = ListWrapper.createFixedSize(nestedPvsWithIndex.length);
    ListWrapper.forEach(nestedPvsWithIndex, (function(pvWithIndex) {
      var parentVariableNames = isPresent(pvWithIndex.parentIndex) ? nestedPvVariableNames[pvWithIndex.parentIndex] : null;
      nestedPvVariableNames[pvWithIndex.index] = _createVariableNames(parentVariableNames, nestedPvVariableBindings[pvWithIndex.index]);
    }));
    return nestedPvVariableNames;
  }
  Object.defineProperty(_collectNestedProtoViewsVariableNames, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, RenderProtoViewWithIndex)], [$traceurRuntime.genericType(List, $traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.string))]];
    }});
  function _createVariableNames(parentVariableNames, variableBindings) {
    var variableNames = isPresent(parentVariableNames) ? ListWrapper.clone(parentVariableNames) : [];
    MapWrapper.forEach(variableBindings, (function(local, v) {
      ListWrapper.push(variableNames, local);
    }));
    return variableNames;
  }
  function _createElementBinders(protoView, elementBinders, allDirectiveBindings) {
    for (var i = 0; i < elementBinders.length; i++) {
      var renderElementBinder = elementBinders[i];
      var dirs = elementBinders[i].directives;
      var parentPeiWithDistance = _findParentProtoElementInjectorWithDistance(i, protoView.elementBinders, elementBinders);
      var directiveBindings = ListWrapper.map(dirs, (function(dir) {
        return allDirectiveBindings[dir.directiveIndex];
      }));
      var componentDirectiveBinding = null;
      if (directiveBindings.length > 0) {
        if (directiveBindings[0].metadata.type === renderApi.DirectiveMetadata.COMPONENT_TYPE) {
          componentDirectiveBinding = directiveBindings[0];
        }
      }
      var protoElementInjector = _createProtoElementInjector(i, parentPeiWithDistance, renderElementBinder, componentDirectiveBinding, directiveBindings);
      _createElementBinder(protoView, i, renderElementBinder, protoElementInjector, componentDirectiveBinding);
    }
  }
  function _findParentProtoElementInjectorWithDistance(binderIndex, elementBinders, renderElementBinders) {
    var distance = 0;
    do {
      var renderElementBinder = renderElementBinders[binderIndex];
      binderIndex = renderElementBinder.parentIndex;
      if (binderIndex !== -1) {
        distance += renderElementBinder.distanceToParent;
        var elementBinder = elementBinders[binderIndex];
        if (isPresent(elementBinder.protoElementInjector)) {
          return new ParentProtoElementInjectorWithDistance(elementBinder.protoElementInjector, distance);
        }
      }
    } while (binderIndex !== -1);
    return new ParentProtoElementInjectorWithDistance(null, -1);
  }
  function _createProtoElementInjector(binderIndex, parentPeiWithDistance, renderElementBinder, componentDirectiveBinding, directiveBindings) {
    var protoElementInjector = null;
    var hasVariables = MapWrapper.size(renderElementBinder.variableBindings) > 0;
    if (directiveBindings.length > 0 || hasVariables) {
      protoElementInjector = ProtoElementInjector.create(parentPeiWithDistance.protoElementInjector, binderIndex, directiveBindings, isPresent(componentDirectiveBinding), parentPeiWithDistance.distance);
      protoElementInjector.attributes = renderElementBinder.readAttributes;
      if (hasVariables) {
        protoElementInjector.exportComponent = isPresent(componentDirectiveBinding);
        protoElementInjector.exportElement = isBlank(componentDirectiveBinding);
        var exportImplicitName = MapWrapper.get(renderElementBinder.variableBindings, '\$implicit');
        if (isPresent(exportImplicitName)) {
          protoElementInjector.exportImplicitName = exportImplicitName;
        }
      }
    }
    return protoElementInjector;
  }
  function _createElementBinder(protoView, boundElementIndex, renderElementBinder, protoElementInjector, componentDirectiveBinding) {
    var parent = null;
    if (renderElementBinder.parentIndex !== -1) {
      parent = protoView.elementBinders[renderElementBinder.parentIndex];
    }
    var elBinder = protoView.bindElement(parent, renderElementBinder.distanceToParent, protoElementInjector, componentDirectiveBinding);
    protoView.bindEvent(renderElementBinder.eventBindings, boundElementIndex, -1);
    MapWrapper.forEach(renderElementBinder.variableBindings, (function(mappedName, varName) {
      MapWrapper.set(protoView.protoLocals, mappedName, null);
    }));
    return elBinder;
  }
  function _bindDirectiveEvents(protoView, elementBinders) {
    for (var boundElementIndex = 0; boundElementIndex < elementBinders.length; ++boundElementIndex) {
      var dirs = elementBinders[boundElementIndex].directives;
      for (var i = 0; i < dirs.length; i++) {
        var directiveBinder = dirs[i];
        protoView.bindEvent(directiveBinder.eventBindings, boundElementIndex, i);
      }
    }
  }
  Object.defineProperty(_bindDirectiveEvents, "parameters", {get: function() {
      return [[], [$traceurRuntime.genericType(List, renderApi.ElementBinder)]];
    }});
  var RenderProtoViewWithIndex = function RenderProtoViewWithIndex(renderProtoView, index, parentIndex, boundElementIndex) {
    this.renderProtoView = renderProtoView;
    this.index = index;
    this.parentIndex = parentIndex;
    this.boundElementIndex = boundElementIndex;
  };
  ($traceurRuntime.createClass)(RenderProtoViewWithIndex, {}, {});
  Object.defineProperty(RenderProtoViewWithIndex, "parameters", {get: function() {
      return [[renderApi.ProtoViewDto], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [$traceurRuntime.type.number]];
    }});
  var ParentProtoElementInjectorWithDistance = function ParentProtoElementInjectorWithDistance(protoElementInjector, distance) {
    this.protoElementInjector = protoElementInjector;
    this.distance = distance;
  };
  ($traceurRuntime.createClass)(ParentProtoElementInjectorWithDistance, {}, {});
  Object.defineProperty(ParentProtoElementInjectorWithDistance, "parameters", {get: function() {
      return [[ProtoElementInjector], [$traceurRuntime.type.number]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/services/url_resolver", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    UrlResolver: {get: function() {
        return UrlResolver;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__1.isPresent,
      isBlank = $__1.isBlank,
      RegExpWrapper = $__1.RegExpWrapper,
      BaseException = $__1.BaseException;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var UrlResolver = function UrlResolver() {
    if (isBlank($UrlResolver.a)) {
      $UrlResolver.a = DOM.createElement('a');
    }
  };
  var $UrlResolver = UrlResolver;
  ($traceurRuntime.createClass)(UrlResolver, {resolve: function(baseUrl, url) {
      if (isBlank(baseUrl)) {
        DOM.resolveAndSetHref($UrlResolver.a, url, null);
        return DOM.getHref($UrlResolver.a);
      }
      if (isBlank(url) || url == '')
        return baseUrl;
      if (url[0] == '/') {
        throw new BaseException(("Could not resolve the url " + url + " from " + baseUrl));
      }
      var m = RegExpWrapper.firstMatch(_schemeRe, url);
      if (isPresent(m[1])) {
        return url;
      }
      DOM.resolveAndSetHref($UrlResolver.a, baseUrl, url);
      return DOM.getHref($UrlResolver.a);
    }}, {});
  Object.defineProperty(UrlResolver, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(UrlResolver.prototype.resolve, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  var _schemeRe = RegExpWrapper.create('^([^:/?#]+:)?');
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/exception_handler", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ExceptionHandler: {get: function() {
        return ExceptionHandler;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__1.isPresent,
      print = $__1.print;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__2.ListWrapper,
      isListLikeIterable = $__2.isListLikeIterable;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var ExceptionHandler = function ExceptionHandler() {
    ;
  };
  ($traceurRuntime.createClass)(ExceptionHandler, {call: function(error) {
      var stackTrace = arguments[1] !== (void 0) ? arguments[1] : null;
      var reason = arguments[2] !== (void 0) ? arguments[2] : null;
      var longStackTrace = isListLikeIterable(stackTrace) ? ListWrapper.join(stackTrace, "\n\n") : stackTrace;
      var reasonStr = isPresent(reason) ? ("\n" + reason) : '';
      DOM.logError(("" + error + reasonStr + "\nSTACKTRACE:\n" + longStackTrace));
    }}, {});
  Object.defineProperty(ExceptionHandler, "annotations", {get: function() {
      return [new Injectable()];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/services/xhr", ["npm:angular2@2.0.0-alpha.24/src/facade/async"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    XHR: {get: function() {
        return XHR;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_async__;
  var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
  var XHR = function XHR() {
    ;
  };
  ($traceurRuntime.createClass)(XHR, {get: function(url) {
      return null;
    }}, {});
  Object.defineProperty(XHR.prototype.get, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone", [], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  "use strict";
  Object.defineProperties(module.exports, {
    NgZone: {get: function() {
        return NgZone;
      }},
    __esModule: {value: true}
  });
  var NgZone = function NgZone($__1) {
    var enableLongStackTrace = $__1.enableLongStackTrace;
  };
  ($traceurRuntime.createClass)(NgZone, {
    initCallbacks: function() {
      var $__1 = arguments[0] !== (void 0) ? arguments[0] : {},
          onTurnStart = $__1.onTurnStart,
          onTurnDone = $__1.onTurnDone,
          onScheduleMicrotask = $__1.onScheduleMicrotask,
          onErrorHandler = $__1.onErrorHandler;
    },
    run: function(fn) {
      return fn();
    },
    runOutsideAngular: function(fn) {
      return fn();
    }
  }, {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/life_cycle/life_cycle", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone", "npm:angular2@2.0.0-alpha.24/src/core/exception_handler", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    LifeCycle: {get: function() {
        return LifeCycle;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_change_95_detection__,
      $__angular2_47_src_47_core_47_zone_47_ng_95_zone__,
      $__angular2_47_src_47_core_47_exception_95_handler__,
      $__angular2_47_src_47_facade_47_lang__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var ChangeDetector = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).ChangeDetector;
  var NgZone = ($__angular2_47_src_47_core_47_zone_47_ng_95_zone__ = require("npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone"), $__angular2_47_src_47_core_47_zone_47_ng_95_zone__ && $__angular2_47_src_47_core_47_zone_47_ng_95_zone__.__esModule && $__angular2_47_src_47_core_47_zone_47_ng_95_zone__ || {default: $__angular2_47_src_47_core_47_zone_47_ng_95_zone__}).NgZone;
  var ExceptionHandler = ($__angular2_47_src_47_core_47_exception_95_handler__ = require("npm:angular2@2.0.0-alpha.24/src/core/exception_handler"), $__angular2_47_src_47_core_47_exception_95_handler__ && $__angular2_47_src_47_core_47_exception_95_handler__.__esModule && $__angular2_47_src_47_core_47_exception_95_handler__ || {default: $__angular2_47_src_47_core_47_exception_95_handler__}).ExceptionHandler;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var LifeCycle = function LifeCycle(exceptionHandler) {
    var changeDetector = arguments[1] !== (void 0) ? arguments[1] : null;
    var enforceNoNewChanges = arguments[2] !== (void 0) ? arguments[2] : false;
    this._errorHandler = (function(exception, stackTrace) {
      exceptionHandler.call(exception, stackTrace);
      throw exception;
    });
    this._changeDetector = changeDetector;
    this._enforceNoNewChanges = enforceNoNewChanges;
  };
  ($traceurRuntime.createClass)(LifeCycle, {
    registerWith: function(zone) {
      var changeDetector = arguments[1] !== (void 0) ? arguments[1] : null;
      var $__5 = this;
      if (isPresent(changeDetector)) {
        this._changeDetector = changeDetector;
      }
      zone.initCallbacks({
        onErrorHandler: this._errorHandler,
        onTurnDone: (function() {
          return $__5.tick();
        })
      });
    },
    tick: function() {
      this._changeDetector.detectChanges();
      if (this._enforceNoNewChanges) {
        this._changeDetector.checkNoChanges();
      }
    }
  }, {});
  Object.defineProperty(LifeCycle, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(LifeCycle, "parameters", {get: function() {
      return [[ExceptionHandler], [ChangeDetector], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(LifeCycle.prototype.registerWith, "parameters", {get: function() {
      return [[NgZone], [ChangeDetector]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      ShadowDomStrategy: {get: function() {
          return ShadowDomStrategy;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_facade_47_async__,
        $___46__46__47_view_47_view__,
        $__light_95_dom__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isBlank = $__0.isBlank,
        isPresent = $__0.isPresent;
    var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
    var viewModule = ($___46__46__47_view_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $___46__46__47_view_47_view__ && $___46__46__47_view_47_view__.__esModule && $___46__46__47_view_47_view__ || {default: $___46__46__47_view_47_view__});
    var LightDom = ($__light_95_dom__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom"), $__light_95_dom__ && $__light_95_dom__.__esModule && $__light_95_dom__ || {default: $__light_95_dom__}).LightDom;
    var ShadowDomStrategy = function ShadowDomStrategy() {
      ;
    };
    ($traceurRuntime.createClass)(ShadowDomStrategy, {
      hasNativeContentElement: function() {
        return true;
      },
      prepareShadowRoot: function(el) {
        return null;
      },
      constructLightDom: function(lightDomView, el) {
        return null;
      },
      processStyleElement: function(hostComponentId, templateUrl, styleElement) {
        return null;
      },
      processElement: function(hostComponentId, elementComponentId, element) {}
    }, {});
    Object.defineProperty(ShadowDomStrategy.prototype.constructLightDom, "parameters", {get: function() {
        return [[viewModule.DomView], []];
      }});
    Object.defineProperty(ShadowDomStrategy.prototype.processStyleElement, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], []];
      }});
    Object.defineProperty(ShadowDomStrategy.prototype.processElement, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], []];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/services/url_resolver"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    StyleUrlResolver: {get: function() {
        return StyleUrlResolver;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_services_47_url_95_resolver__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      RegExp = $__1.RegExp,
      RegExpWrapper = $__1.RegExpWrapper,
      StringWrapper = $__1.StringWrapper;
  var UrlResolver = ($__angular2_47_src_47_services_47_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/services/url_resolver"), $__angular2_47_src_47_services_47_url_95_resolver__ && $__angular2_47_src_47_services_47_url_95_resolver__.__esModule && $__angular2_47_src_47_services_47_url_95_resolver__ || {default: $__angular2_47_src_47_services_47_url_95_resolver__}).UrlResolver;
  var StyleUrlResolver = function StyleUrlResolver(resolver) {
    this._resolver = resolver;
  };
  ($traceurRuntime.createClass)(StyleUrlResolver, {
    resolveUrls: function(cssText, baseUrl) {
      cssText = this._replaceUrls(cssText, _cssUrlRe, baseUrl);
      cssText = this._replaceUrls(cssText, _cssImportRe, baseUrl);
      return cssText;
    },
    _replaceUrls: function(cssText, re, baseUrl) {
      var $__3 = this;
      return StringWrapper.replaceAllMapped(cssText, re, (function(m) {
        var pre = m[1];
        var url = StringWrapper.replaceAll(m[2], _quoteRe, '');
        var post = m[3];
        var resolvedUrl = $__3._resolver.resolve(baseUrl, url);
        return pre + "'" + resolvedUrl + "'" + post;
      }));
    }
  }, {});
  Object.defineProperty(StyleUrlResolver, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(StyleUrlResolver, "parameters", {get: function() {
      return [[UrlResolver]];
    }});
  Object.defineProperty(StyleUrlResolver.prototype.resolveUrls, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(StyleUrlResolver.prototype._replaceUrls, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [RegExp], [$traceurRuntime.type.string]];
    }});
  var _cssUrlRe = RegExpWrapper.create('(url\\()([^)]*)(\\))');
  var _cssImportRe = RegExpWrapper.create('(@import[\\s]+(?!url\\())[\'"]([^\'"]*)[\'"](.*;)');
  var _quoteRe = RegExpWrapper.create('[\'"]');
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_css", ["npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ShadowCss: {get: function() {
        return ShadowCss;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__1.List,
      ListWrapper = $__1.ListWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      StringWrapper = $__2.StringWrapper,
      RegExp = $__2.RegExp,
      RegExpWrapper = $__2.RegExpWrapper,
      RegExpMatcherWrapper = $__2.RegExpMatcherWrapper,
      isPresent = $__2.isPresent,
      isBlank = $__2.isBlank,
      BaseException = $__2.BaseException,
      int = $__2.int;
  var ShadowCss = function ShadowCss() {
    this.strictStyling = true;
  };
  ($traceurRuntime.createClass)(ShadowCss, {
    shimStyle: function(style, selector) {
      var hostSelector = arguments[2] !== (void 0) ? arguments[2] : '';
      var cssText = DOM.getText(style);
      return this.shimCssText(cssText, selector, hostSelector);
    },
    shimCssText: function(cssText, selector) {
      var hostSelector = arguments[2] !== (void 0) ? arguments[2] : '';
      cssText = this._insertDirectives(cssText);
      return this._scopeCssText(cssText, selector, hostSelector);
    },
    _insertDirectives: function(cssText) {
      cssText = this._insertPolyfillDirectivesInCssText(cssText);
      return this._insertPolyfillRulesInCssText(cssText);
    },
    _insertPolyfillDirectivesInCssText: function(cssText) {
      return StringWrapper.replaceAllMapped(cssText, _cssContentNextSelectorRe, function(m) {
        return m[1] + '{';
      });
    },
    _insertPolyfillRulesInCssText: function(cssText) {
      return StringWrapper.replaceAllMapped(cssText, _cssContentRuleRe, function(m) {
        var rule = m[0];
        rule = StringWrapper.replace(rule, m[1], '');
        rule = StringWrapper.replace(rule, m[2], '');
        return m[3] + rule;
      });
    },
    _scopeCssText: function(cssText, scopeSelector, hostSelector) {
      var $__3 = this;
      var unscoped = this._extractUnscopedRulesFromCssText(cssText);
      cssText = this._insertPolyfillHostInCssText(cssText);
      cssText = this._convertColonHost(cssText);
      cssText = this._convertColonHostContext(cssText);
      cssText = this._convertShadowDOMSelectors(cssText);
      if (isPresent(scopeSelector)) {
        _withCssRules(cssText, (function(rules) {
          cssText = $__3._scopeRules(rules, scopeSelector, hostSelector);
        }));
      }
      cssText = cssText + '\n' + unscoped;
      return cssText.trim();
    },
    _extractUnscopedRulesFromCssText: function(cssText) {
      var r = '',
          m;
      var matcher = RegExpWrapper.matcher(_cssContentUnscopedRuleRe, cssText);
      while (isPresent(m = RegExpMatcherWrapper.next(matcher))) {
        var rule = m[0];
        rule = StringWrapper.replace(rule, m[2], '');
        rule = StringWrapper.replace(rule, m[1], m[3]);
        r = rule + '\n\n';
      }
      return r;
    },
    _convertColonHost: function(cssText) {
      return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);
    },
    _convertColonHostContext: function(cssText) {
      return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);
    },
    _convertColonRule: function(cssText, regExp, partReplacer) {
      return StringWrapper.replaceAllMapped(cssText, regExp, function(m) {
        if (isPresent(m[2])) {
          var parts = m[2].split(','),
              r = [];
          for (var i = 0; i < parts.length; i++) {
            var p = parts[i];
            if (isBlank(p))
              break;
            p = p.trim();
            ListWrapper.push(r, partReplacer(_polyfillHostNoCombinator, p, m[3]));
          }
          return r.join(',');
        } else {
          return _polyfillHostNoCombinator + m[3];
        }
      });
    },
    _colonHostContextPartReplacer: function(host, part, suffix) {
      if (StringWrapper.contains(part, _polyfillHost)) {
        return this._colonHostPartReplacer(host, part, suffix);
      } else {
        return host + part + suffix + ', ' + part + ' ' + host + suffix;
      }
    },
    _colonHostPartReplacer: function(host, part, suffix) {
      return host + StringWrapper.replace(part, _polyfillHost, '') + suffix;
    },
    _convertShadowDOMSelectors: function(cssText) {
      for (var i = 0; i < _shadowDOMSelectorsRe.length; i++) {
        cssText = StringWrapper.replaceAll(cssText, _shadowDOMSelectorsRe[i], ' ');
      }
      return cssText;
    },
    _scopeRules: function(cssRules, scopeSelector, hostSelector) {
      var cssText = '';
      if (isPresent(cssRules)) {
        for (var i = 0; i < cssRules.length; i++) {
          var rule = cssRules[i];
          if (DOM.isStyleRule(rule) || DOM.isPageRule(rule)) {
            cssText += this._scopeSelector(rule.selectorText, scopeSelector, hostSelector, this.strictStyling) + ' {\n';
            cssText += this._propertiesFromRule(rule) + '\n}\n\n';
          } else if (DOM.isMediaRule(rule)) {
            cssText += '@media ' + rule.media.mediaText + ' {\n';
            cssText += this._scopeRules(rule.cssRules, scopeSelector, hostSelector);
            cssText += '\n}\n\n';
          } else {
            try {
              if (isPresent(rule.cssText)) {
                cssText += rule.cssText + '\n\n';
              }
            } catch (x) {
              if (DOM.isKeyframesRule(rule) && isPresent(rule.cssRules)) {
                cssText += this._ieSafeCssTextFromKeyFrameRule(rule);
              }
            }
          }
        }
      }
      return cssText;
    },
    _ieSafeCssTextFromKeyFrameRule: function(rule) {
      var cssText = '@keyframes ' + rule.name + ' {';
      for (var i = 0; i < rule.cssRules.length; i++) {
        var r = rule.cssRules[i];
        cssText += ' ' + r.keyText + ' {' + r.style.cssText + '}';
      }
      cssText += ' }';
      return cssText;
    },
    _scopeSelector: function(selector, scopeSelector, hostSelector, strict) {
      var r = [],
          parts = selector.split(',');
      for (var i = 0; i < parts.length; i++) {
        var p = parts[i];
        p = p.trim();
        if (this._selectorNeedsScoping(p, scopeSelector)) {
          p = strict && !StringWrapper.contains(p, _polyfillHostNoCombinator) ? this._applyStrictSelectorScope(p, scopeSelector) : this._applySelectorScope(p, scopeSelector, hostSelector);
        }
        ListWrapper.push(r, p);
      }
      return r.join(', ');
    },
    _selectorNeedsScoping: function(selector, scopeSelector) {
      var re = this._makeScopeMatcher(scopeSelector);
      return !isPresent(RegExpWrapper.firstMatch(re, selector));
    },
    _makeScopeMatcher: function(scopeSelector) {
      var lre = RegExpWrapper.create('\\[');
      var rre = RegExpWrapper.create('\\]');
      scopeSelector = StringWrapper.replaceAll(scopeSelector, lre, '\\[');
      scopeSelector = StringWrapper.replaceAll(scopeSelector, rre, '\\]');
      return RegExpWrapper.create('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');
    },
    _applySelectorScope: function(selector, scopeSelector, hostSelector) {
      return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);
    },
    _applySimpleSelectorScope: function(selector, scopeSelector, hostSelector) {
      if (isPresent(RegExpWrapper.firstMatch(_polyfillHostRe, selector))) {
        var replaceBy = this.strictStyling ? ("[" + hostSelector + "]") : scopeSelector;
        selector = StringWrapper.replace(selector, _polyfillHostNoCombinator, replaceBy);
        return StringWrapper.replaceAll(selector, _polyfillHostRe, replaceBy + ' ');
      } else {
        return scopeSelector + ' ' + selector;
      }
    },
    _applyStrictSelectorScope: function(selector, scopeSelector) {
      var isRe = RegExpWrapper.create('\\[is=([^\\]]*)\\]');
      scopeSelector = StringWrapper.replaceAllMapped(scopeSelector, isRe, (function(m) {
        return m[1];
      }));
      var splits = [' ', '>', '+', '~'],
          scoped = selector,
          attrName = '[' + scopeSelector + ']';
      for (var i = 0; i < splits.length; i++) {
        var sep = splits[i];
        var parts = scoped.split(sep);
        scoped = ListWrapper.map(parts, function(p) {
          var t = StringWrapper.replaceAll(p.trim(), _polyfillHostRe, '');
          if (t.length > 0 && !ListWrapper.contains(splits, t) && !StringWrapper.contains(t, attrName)) {
            var re = RegExpWrapper.create('([^:]*)(:*)(.*)');
            var m = RegExpWrapper.firstMatch(re, t);
            if (isPresent(m)) {
              p = m[1] + attrName + m[2] + m[3];
            }
          }
          return p;
        }).join(sep);
      }
      return scoped;
    },
    _insertPolyfillHostInCssText: function(selector) {
      selector = StringWrapper.replaceAll(selector, _colonHostContextRe, _polyfillHostContext);
      selector = StringWrapper.replaceAll(selector, _colonHostRe, _polyfillHost);
      return selector;
    },
    _propertiesFromRule: function(rule) {
      var cssText = rule.style.cssText;
      var attrRe = RegExpWrapper.create('[\'"]+|attr');
      if (rule.style.content.length > 0 && !isPresent(RegExpWrapper.firstMatch(attrRe, rule.style.content))) {
        var contentRe = RegExpWrapper.create('content:[^;]*;');
        cssText = StringWrapper.replaceAll(cssText, contentRe, 'content: \'' + rule.style.content + '\';');
      }
      return cssText;
    }
  }, {});
  Object.defineProperty(ShadowCss.prototype.shimStyle, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype.shimCssText, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._insertDirectives, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._insertPolyfillDirectivesInCssText, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._insertPolyfillRulesInCssText, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._scopeCssText, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._extractUnscopedRulesFromCssText, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._convertColonHost, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._convertColonHostContext, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._convertColonRule, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [RegExp], [Function]];
    }});
  Object.defineProperty(ShadowCss.prototype._colonHostContextPartReplacer, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._colonHostPartReplacer, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._convertShadowDOMSelectors, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._scopeRules, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._scopeSelector, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(ShadowCss.prototype._selectorNeedsScoping, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._makeScopeMatcher, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._applySelectorScope, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._applySimpleSelectorScope, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._applyStrictSelectorScope, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ShadowCss.prototype._insertPolyfillHostInCssText, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var _cssContentNextSelectorRe = RegExpWrapper.create('polyfill-next-selector[^}]*content:[\\s]*?[\'"](.*?)[\'"][;\\s]*}([^{]*?){', 'im');
  var _cssContentRuleRe = RegExpWrapper.create('(polyfill-rule)[^}]*(content:[\\s]*[\'"](.*?)[\'"])[;\\s]*[^}]*}', 'im');
  var _cssContentUnscopedRuleRe = RegExpWrapper.create('(polyfill-unscoped-rule)[^}]*(content:[\\s]*[\'"](.*?)[\'"])[;\\s]*[^}]*}', 'im');
  var _polyfillHost = '-shadowcsshost';
  var _polyfillHostContext = '-shadowcsscontext';
  var _parenSuffix = ')(?:\\((' + '(?:\\([^)(]*\\)|[^)(]*)+?' + ')\\))?([^,{]*)';
  var _cssColonHostRe = RegExpWrapper.create('(' + _polyfillHost + _parenSuffix, 'im');
  var _cssColonHostContextRe = RegExpWrapper.create('(' + _polyfillHostContext + _parenSuffix, 'im');
  var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';
  var _shadowDOMSelectorsRe = [RegExpWrapper.create('>>>'), RegExpWrapper.create('::shadow'), RegExpWrapper.create('::content'), RegExpWrapper.create('/deep/'), RegExpWrapper.create('/shadow-deep/'), RegExpWrapper.create('/shadow/')];
  var _selectorReSuffix = '([>\\s~+\[.,{:][\\s\\S]*)?$';
  var _polyfillHostRe = RegExpWrapper.create(_polyfillHost, 'im');
  var _colonHostRe = RegExpWrapper.create(':host', 'im');
  var _colonHostContextRe = RegExpWrapper.create(':host-context', 'im');
  function _cssToRules(cssText) {
    return DOM.cssToRules(cssText);
  }
  Object.defineProperty(_cssToRules, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  function _withCssRules(cssText, callback) {
    if (isBlank(callback))
      return ;
    var rules = _cssToRules(cssText);
    callback(rules);
  }
  Object.defineProperty(_withCssRules, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [Function]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/services/xhr_impl", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/services/xhr"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    XHRImpl: {get: function() {
        return XHRImpl;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_async__,
      $__xhr__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      Promise = $__1.Promise,
      PromiseWrapper = $__1.PromiseWrapper;
  var XHR = ($__xhr__ = require("npm:angular2@2.0.0-alpha.24/src/services/xhr"), $__xhr__ && $__xhr__.__esModule && $__xhr__ || {default: $__xhr__}).XHR;
  var XHRImpl = function XHRImpl() {
    $traceurRuntime.superConstructor($XHRImpl).apply(this, arguments);
    ;
  };
  var $XHRImpl = XHRImpl;
  ($traceurRuntime.createClass)(XHRImpl, {get: function(url) {
      var completer = PromiseWrapper.completer();
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, true);
      xhr.responseType = 'text';
      xhr.onload = function() {
        var status = xhr.status;
        if (200 <= status && status <= 300) {
          completer.resolve(xhr.responseText);
        } else {
          completer.reject(("Failed to load " + url));
        }
      };
      xhr.onerror = function() {
        completer.reject(("Failed to load " + url));
      };
      xhr.send();
      return completer.promise;
    }}, {}, XHR);
  Object.defineProperty(XHRImpl, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(XHRImpl.prototype.get, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    EventManager: {get: function() {
        return EventManager;
      }},
    EventManagerPlugin: {get: function() {
        return EventManagerPlugin;
      }},
    DomEventsPlugin: {get: function() {
        return DomEventsPlugin;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_core_47_zone_47_ng_95_zone__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isBlank = $__0.isBlank,
      BaseException = $__0.BaseException,
      isPresent = $__0.isPresent,
      StringWrapper = $__0.StringWrapper;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__2.List,
      ListWrapper = $__2.ListWrapper,
      MapWrapper = $__2.MapWrapper;
  var NgZone = ($__angular2_47_src_47_core_47_zone_47_ng_95_zone__ = require("npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone"), $__angular2_47_src_47_core_47_zone_47_ng_95_zone__ && $__angular2_47_src_47_core_47_zone_47_ng_95_zone__.__esModule && $__angular2_47_src_47_core_47_zone_47_ng_95_zone__ || {default: $__angular2_47_src_47_core_47_zone_47_ng_95_zone__}).NgZone;
  var BUBBLE_SYMBOL = '^';
  var EventManager = function EventManager(plugins, zone) {
    this._zone = zone;
    this._plugins = plugins;
    for (var i = 0; i < plugins.length; i++) {
      plugins[i].manager = this;
    }
  };
  ($traceurRuntime.createClass)(EventManager, {
    addEventListener: function(element, eventName, handler) {
      var withoutBubbleSymbol = this._removeBubbleSymbol(eventName);
      var plugin = this._findPluginFor(withoutBubbleSymbol);
      plugin.addEventListener(element, withoutBubbleSymbol, handler, withoutBubbleSymbol != eventName);
    },
    addGlobalEventListener: function(target, eventName, handler) {
      var withoutBubbleSymbol = this._removeBubbleSymbol(eventName);
      var plugin = this._findPluginFor(withoutBubbleSymbol);
      return plugin.addGlobalEventListener(target, withoutBubbleSymbol, handler, withoutBubbleSymbol != eventName);
    },
    getZone: function() {
      return this._zone;
    },
    _findPluginFor: function(eventName) {
      var plugins = this._plugins;
      for (var i = 0; i < plugins.length; i++) {
        var plugin = plugins[i];
        if (plugin.supports(eventName)) {
          return plugin;
        }
      }
      throw new BaseException(("No event manager plugin found for event " + eventName));
    },
    _removeBubbleSymbol: function(eventName) {
      return eventName[0] == BUBBLE_SYMBOL ? StringWrapper.substring(eventName, 1) : eventName;
    }
  }, {});
  Object.defineProperty(EventManager, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, EventManagerPlugin)], [NgZone]];
    }});
  Object.defineProperty(EventManager.prototype.addEventListener, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [Function]];
    }});
  Object.defineProperty(EventManager.prototype.addGlobalEventListener, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [Function]];
    }});
  Object.defineProperty(EventManager.prototype._findPluginFor, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(EventManager.prototype._removeBubbleSymbol, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var EventManagerPlugin = function EventManagerPlugin() {
    ;
  };
  ($traceurRuntime.createClass)(EventManagerPlugin, {
    supports: function(eventName) {
      return false;
    },
    addEventListener: function(element, eventName, handler, shouldSupportBubble) {
      throw "not implemented";
    },
    addGlobalEventListener: function(element, eventName, handler, shouldSupportBubble) {
      throw "not implemented";
    }
  }, {});
  Object.defineProperty(EventManagerPlugin.prototype.supports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(EventManagerPlugin.prototype.addEventListener, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [Function], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(EventManagerPlugin.prototype.addGlobalEventListener, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [Function], [$traceurRuntime.type.boolean]];
    }});
  var DomEventsPlugin = function DomEventsPlugin() {
    $traceurRuntime.superConstructor($DomEventsPlugin).apply(this, arguments);
    ;
  };
  var $DomEventsPlugin = DomEventsPlugin;
  ($traceurRuntime.createClass)(DomEventsPlugin, {
    supports: function(eventName) {
      return true;
    },
    addEventListener: function(element, eventName, handler, shouldSupportBubble) {
      var outsideHandler = this._getOutsideHandler(shouldSupportBubble, element, handler, this.manager._zone);
      this.manager._zone.runOutsideAngular((function() {
        DOM.on(element, eventName, outsideHandler);
      }));
    },
    addGlobalEventListener: function(target, eventName, handler, shouldSupportBubble) {
      var element = DOM.getGlobalEventTarget(target);
      var outsideHandler = this._getOutsideHandler(shouldSupportBubble, element, handler, this.manager._zone);
      return this.manager._zone.runOutsideAngular((function() {
        return DOM.onAndCancel(element, eventName, outsideHandler);
      }));
    },
    _getOutsideHandler: function(shouldSupportBubble, element, handler, zone) {
      return shouldSupportBubble ? $DomEventsPlugin.bubbleCallback(element, handler, zone) : $DomEventsPlugin.sameElementCallback(element, handler, zone);
    }
  }, {
    sameElementCallback: function(element, handler, zone) {
      return (function(event) {
        if (event.target === element) {
          zone.run((function() {
            return handler(event);
          }));
        }
      });
    },
    bubbleCallback: function(element, handler, zone) {
      return (function(event) {
        return zone.run((function() {
          return handler(event);
        }));
      });
    }
  }, EventManagerPlugin);
  Object.defineProperty(DomEventsPlugin.prototype.supports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(DomEventsPlugin.prototype.addEventListener, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [Function], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(DomEventsPlugin.prototype.addGlobalEventListener, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [Function], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(DomEventsPlugin.prototype._getOutsideHandler, "parameters", {get: function() {
      return [[$traceurRuntime.type.boolean], [], [Function], [NgZone]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/events/key_events", ["npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    KeyEventsPlugin: {get: function() {
        return KeyEventsPlugin;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__event_95_manager__;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__1.isPresent,
      isBlank = $__1.isBlank,
      StringWrapper = $__1.StringWrapper,
      RegExpWrapper = $__1.RegExpWrapper,
      BaseException = $__1.BaseException,
      NumberWrapper = $__1.NumberWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      StringMapWrapper = $__2.StringMapWrapper,
      ListWrapper = $__2.ListWrapper;
  var EventManagerPlugin = ($__event_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager"), $__event_95_manager__ && $__event_95_manager__.__esModule && $__event_95_manager__ || {default: $__event_95_manager__}).EventManagerPlugin;
  var modifierKeys = ['alt', 'control', 'meta', 'shift'];
  var modifierKeyGetters = {
    'alt': (function(event) {
      return event.altKey;
    }),
    'control': (function(event) {
      return event.ctrlKey;
    }),
    'meta': (function(event) {
      return event.metaKey;
    }),
    'shift': (function(event) {
      return event.shiftKey;
    })
  };
  var KeyEventsPlugin = function KeyEventsPlugin() {
    $traceurRuntime.superConstructor($KeyEventsPlugin).call(this);
  };
  var $KeyEventsPlugin = KeyEventsPlugin;
  ($traceurRuntime.createClass)(KeyEventsPlugin, {
    supports: function(eventName) {
      return isPresent($KeyEventsPlugin.parseEventName(eventName));
    },
    addEventListener: function(element, eventName, handler, shouldSupportBubble) {
      var parsedEvent = $KeyEventsPlugin.parseEventName(eventName);
      var outsideHandler = $KeyEventsPlugin.eventCallback(element, shouldSupportBubble, StringMapWrapper.get(parsedEvent, 'fullKey'), handler, this.manager.getZone());
      this.manager.getZone().runOutsideAngular((function() {
        DOM.on(element, StringMapWrapper.get(parsedEvent, 'domEventName'), outsideHandler);
      }));
    }
  }, {
    parseEventName: function(eventName) {
      eventName = eventName.toLowerCase();
      var parts = eventName.split('.');
      var domEventName = ListWrapper.removeAt(parts, 0);
      if ((parts.length === 0) || !(StringWrapper.equals(domEventName, 'keydown') || StringWrapper.equals(domEventName, 'keyup'))) {
        return null;
      }
      var key = ListWrapper.removeLast(parts);
      var fullKey = '';
      ListWrapper.forEach(modifierKeys, (function(modifierName) {
        if (ListWrapper.contains(parts, modifierName)) {
          ListWrapper.remove(parts, modifierName);
          fullKey += modifierName + '.';
        }
      }));
      fullKey += key;
      if (parts.length != 0 || key.length === 0) {
        return null;
      }
      return {
        'domEventName': domEventName,
        'fullKey': fullKey
      };
    },
    getEventFullKey: function(event) {
      var fullKey = '';
      var key = DOM.getEventKey(event);
      key = key.toLowerCase();
      if (StringWrapper.equals(key, ' ')) {
        key = 'space';
      } else if (StringWrapper.equals(key, '.')) {
        key = 'dot';
      }
      ListWrapper.forEach(modifierKeys, (function(modifierName) {
        if (modifierName != key) {
          var modifierGetter = StringMapWrapper.get(modifierKeyGetters, modifierName);
          if (modifierGetter(event)) {
            fullKey += modifierName + '.';
          }
        }
      }));
      fullKey += key;
      return fullKey;
    },
    eventCallback: function(element, shouldSupportBubble, fullKey, handler, zone) {
      return (function(event) {
        var correctElement = shouldSupportBubble || event.target === element;
        if (correctElement && $KeyEventsPlugin.getEventFullKey(event) === fullKey) {
          zone.run((function() {
            return handler(event);
          }));
        }
      });
    }
  }, EventManagerPlugin);
  Object.defineProperty(KeyEventsPlugin.prototype.supports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(KeyEventsPlugin.prototype.addEventListener, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [Function], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(KeyEventsPlugin.parseEventName, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/events/hammer_common", ["npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    HammerGesturesPluginCommon: {get: function() {
        return HammerGesturesPluginCommon;
      }},
    __esModule: {value: true}
  });
  var $__event_95_manager__,
      $__angular2_47_src_47_facade_47_collection__;
  var EventManagerPlugin = ($__event_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager"), $__event_95_manager__ && $__event_95_manager__.__esModule && $__event_95_manager__ || {default: $__event_95_manager__}).EventManagerPlugin;
  var StringMapWrapper = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).StringMapWrapper;
  var _eventNames = {
    'pan': true,
    'panstart': true,
    'panmove': true,
    'panend': true,
    'pancancel': true,
    'panleft': true,
    'panright': true,
    'panup': true,
    'pandown': true,
    'pinch': true,
    'pinchstart': true,
    'pinchmove': true,
    'pinchend': true,
    'pinchcancel': true,
    'pinchin': true,
    'pinchout': true,
    'press': true,
    'pressup': true,
    'rotate': true,
    'rotatestart': true,
    'rotatemove': true,
    'rotateend': true,
    'rotatecancel': true,
    'swipe': true,
    'swipeleft': true,
    'swiperight': true,
    'swipeup': true,
    'swipedown': true,
    'tap': true
  };
  var HammerGesturesPluginCommon = function HammerGesturesPluginCommon() {
    $traceurRuntime.superConstructor($HammerGesturesPluginCommon).call(this);
  };
  var $HammerGesturesPluginCommon = HammerGesturesPluginCommon;
  ($traceurRuntime.createClass)(HammerGesturesPluginCommon, {supports: function(eventName) {
      eventName = eventName.toLowerCase();
      return StringMapWrapper.contains(_eventNames, eventName);
    }}, {}, EventManagerPlugin);
  Object.defineProperty(HammerGesturesPluginCommon.prototype.supports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_inliner", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/services/xhr", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/services/url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    StyleInliner: {get: function() {
        return StyleInliner;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_services_47_xhr__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_services_47_url_95_resolver__,
      $__style_95_url_95_resolver__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_async__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var XHR = ($__angular2_47_src_47_services_47_xhr__ = require("npm:angular2@2.0.0-alpha.24/src/services/xhr"), $__angular2_47_src_47_services_47_xhr__ && $__angular2_47_src_47_services_47_xhr__.__esModule && $__angular2_47_src_47_services_47_xhr__ || {default: $__angular2_47_src_47_services_47_xhr__}).XHR;
  var ListWrapper = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).ListWrapper;
  var UrlResolver = ($__angular2_47_src_47_services_47_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/services/url_resolver"), $__angular2_47_src_47_services_47_url_95_resolver__ && $__angular2_47_src_47_services_47_url_95_resolver__.__esModule && $__angular2_47_src_47_services_47_url_95_resolver__ || {default: $__angular2_47_src_47_services_47_url_95_resolver__}).UrlResolver;
  var StyleUrlResolver = ($__style_95_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver"), $__style_95_url_95_resolver__ && $__style_95_url_95_resolver__.__esModule && $__style_95_url_95_resolver__ || {default: $__style_95_url_95_resolver__}).StyleUrlResolver;
  var $__5 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isBlank = $__5.isBlank,
      isPresent = $__5.isPresent,
      RegExp = $__5.RegExp,
      RegExpWrapper = $__5.RegExpWrapper,
      StringWrapper = $__5.StringWrapper,
      normalizeBlank = $__5.normalizeBlank;
  var $__6 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      Promise = $__6.Promise,
      PromiseWrapper = $__6.PromiseWrapper;
  var StyleInliner = function StyleInliner(xhr, styleUrlResolver, urlResolver) {
    this._xhr = xhr;
    this._urlResolver = urlResolver;
    this._styleUrlResolver = styleUrlResolver;
  };
  ($traceurRuntime.createClass)(StyleInliner, {
    inlineImports: function(cssText, baseUrl) {
      return this._inlineImports(cssText, baseUrl, []);
    },
    _inlineImports: function(cssText, baseUrl, inlinedUrls) {
      var $__7 = this;
      var partIndex = 0;
      var parts = StringWrapper.split(cssText, _importRe);
      if (parts.length === 1) {
        return cssText;
      }
      var promises = [];
      while (partIndex < parts.length - 1) {
        var prefix = parts[partIndex];
        var rule = parts[partIndex + 1];
        var url = _extractUrl(rule);
        if (isPresent(url)) {
          url = this._urlResolver.resolve(baseUrl, url);
        }
        var mediaQuery = _extractMediaQuery(rule);
        var promise = void 0;
        if (isBlank(url)) {
          promise = PromiseWrapper.resolve(("/* Invalid import rule: \"@import " + rule + ";\" */"));
        } else if (ListWrapper.contains(inlinedUrls, url)) {
          promise = PromiseWrapper.resolve(prefix);
        } else {
          ListWrapper.push(inlinedUrls, url);
          promise = PromiseWrapper.then(this._xhr.get(url), (function(css) {
            css = $__7._inlineImports(css, url, inlinedUrls);
            if (PromiseWrapper.isPromise(css)) {
              return css.then((function(css) {
                return prefix + $__7._transformImportedCss(css, mediaQuery, url) + '\n';
              }));
            } else {
              return prefix + $__7._transformImportedCss(css, mediaQuery, url) + '\n';
            }
          }), (function(error) {
            return ("/* failed to import " + url + " */\n");
          }));
        }
        ListWrapper.push(promises, promise);
        partIndex += 2;
      }
      return PromiseWrapper.all(promises).then(function(cssParts) {
        var cssText = cssParts.join('');
        if (partIndex < parts.length) {
          cssText += parts[partIndex];
        }
        return cssText;
      });
    },
    _transformImportedCss: function(css, mediaQuery, url) {
      css = this._styleUrlResolver.resolveUrls(css, url);
      return _wrapInMediaRule(css, mediaQuery);
    }
  }, {});
  Object.defineProperty(StyleInliner, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(StyleInliner, "parameters", {get: function() {
      return [[XHR], [StyleUrlResolver], [UrlResolver]];
    }});
  Object.defineProperty(StyleInliner.prototype.inlineImports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(StyleInliner.prototype._inlineImports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.genericType(List, $traceurRuntime.type.string)]];
    }});
  Object.defineProperty(StyleInliner.prototype._transformImportedCss, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  function _extractUrl(importRule) {
    var match = RegExpWrapper.firstMatch(_urlRe, importRule);
    if (isBlank(match))
      return null;
    return isPresent(match[1]) ? match[1] : match[2];
  }
  Object.defineProperty(_extractUrl, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  function _extractMediaQuery(importRule) {
    var match = RegExpWrapper.firstMatch(_mediaQueryRe, importRule);
    if (isBlank(match))
      return null;
    var mediaQuery = match[1].trim();
    return (mediaQuery.length > 0) ? mediaQuery : null;
  }
  Object.defineProperty(_extractMediaQuery, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  function _wrapInMediaRule(css, query) {
    return (isBlank(query)) ? css : ("@media " + query + " {\n" + css + "\n}");
  }
  Object.defineProperty(_wrapInMediaRule, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  var _importRe = RegExpWrapper.create('@import\\s+([^;]+);');
  var _urlRe = RegExpWrapper.create('url\\(\\s*?[\'"]?([^\'")]+)[\'"]?|' + '[\'"]([^\'")]+)[\'"]');
  var _mediaQueryRe = RegExpWrapper.create('[\'"][^\'"]+[\'"]\\s*\\)?\\s*(.*)');
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/dynamic_component_loader", ["npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ComponentRef: {get: function() {
        return ComponentRef;
      }},
    DynamicComponentLoader: {get: function() {
        return DynamicComponentLoader;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_di__,
      $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__compiler__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_manager__,
      $__element_95_ref__;
  var $__0 = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}),
      Key = $__0.Key,
      Injector = $__0.Injector,
      ResolvedBinding = $__0.ResolvedBinding,
      Binding = $__0.Binding,
      bind = $__0.bind;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var Compiler = ($__compiler__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler"), $__compiler__ && $__compiler__.__esModule && $__compiler__ || {default: $__compiler__}).Compiler;
  var $__3 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      Type = $__3.Type,
      BaseException = $__3.BaseException,
      stringify = $__3.stringify,
      isPresent = $__3.isPresent;
  var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
  var $__5 = ($__angular2_47_src_47_core_47_compiler_47_view_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager"), $__angular2_47_src_47_core_47_compiler_47_view_95_manager__ && $__angular2_47_src_47_core_47_compiler_47_view_95_manager__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_manager__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_manager__}),
      AppViewManager = $__5.AppViewManager,
      ComponentCreateResult = $__5.ComponentCreateResult;
  var ElementRef = ($__element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__element_95_ref__ && $__element_95_ref__.__esModule && $__element_95_ref__ || {default: $__element_95_ref__}).ElementRef;
  var ComponentRef = function ComponentRef(location, instance, dispose) {
    this.location = location;
    this.instance = instance;
    this._dispose = dispose;
  };
  ($traceurRuntime.createClass)(ComponentRef, {
    get hostView() {
      return this.location.parentView;
    },
    dispose: function() {
      this._dispose();
    }
  }, {});
  Object.defineProperty(ComponentRef, "parameters", {get: function() {
      return [[ElementRef], [$traceurRuntime.type.any], [Function]];
    }});
  var DynamicComponentLoader = function DynamicComponentLoader(compiler, viewManager) {
    this._compiler = compiler;
    this._viewManager = viewManager;
  };
  ($traceurRuntime.createClass)(DynamicComponentLoader, {
    loadIntoExistingLocation: function(typeOrBinding, location) {
      var injector = arguments[2] !== (void 0) ? arguments[2] : null;
      var $__7 = this;
      var binding = this._getBinding(typeOrBinding);
      return this._compiler.compile(binding.token).then((function(componentProtoViewRef) {
        $__7._viewManager.createDynamicComponentView(location, componentProtoViewRef, binding, injector);
        var component = $__7._viewManager.getComponent(location);
        var dispose = (function() {
          throw new BaseException("Not implemented");
        });
        return new ComponentRef(location, component, dispose);
      }));
    },
    loadAsRoot: function(typeOrBinding) {
      var overrideSelector = arguments[1] !== (void 0) ? arguments[1] : null;
      var injector = arguments[2] !== (void 0) ? arguments[2] : null;
      var $__7 = this;
      return this._compiler.compileInHost(this._getBinding(typeOrBinding)).then((function(hostProtoViewRef) {
        var hostViewRef = $__7._viewManager.createRootHostView(hostProtoViewRef, overrideSelector, injector);
        var newLocation = new ElementRef(hostViewRef, 0);
        var component = $__7._viewManager.getComponent(newLocation);
        var dispose = (function() {
          $__7._viewManager.destroyRootHostView(hostViewRef);
        });
        return new ComponentRef(newLocation, component, dispose);
      }));
    },
    loadIntoNewLocation: function(typeOrBinding, parentComponentLocation) {
      var injector = arguments[2] !== (void 0) ? arguments[2] : null;
      var $__7 = this;
      return this._compiler.compileInHost(this._getBinding(typeOrBinding)).then((function(hostProtoViewRef) {
        var hostViewRef = $__7._viewManager.createFreeHostView(parentComponentLocation, hostProtoViewRef, injector);
        var newLocation = new ElementRef(hostViewRef, 0);
        var component = $__7._viewManager.getComponent(newLocation);
        var dispose = (function() {
          $__7._viewManager.destroyFreeHostView(parentComponentLocation, hostViewRef);
        });
        return new ComponentRef(newLocation, component, dispose);
      }));
    },
    loadNextToExistingLocation: function(typeOrBinding, location) {
      var injector = arguments[2] !== (void 0) ? arguments[2] : null;
      var $__7 = this;
      var binding = this._getBinding(typeOrBinding);
      return this._compiler.compileInHost(binding).then((function(hostProtoViewRef) {
        var viewContainer = $__7._viewManager.getViewContainer(location);
        var hostViewRef = viewContainer.create(hostProtoViewRef, viewContainer.length, null, injector);
        var newLocation = new ElementRef(hostViewRef, 0);
        var component = $__7._viewManager.getComponent(newLocation);
        var dispose = (function() {
          var index = viewContainer.indexOf(hostViewRef);
          viewContainer.remove(index);
        });
        return new ComponentRef(newLocation, component, dispose);
      }));
    },
    _getBinding: function(typeOrBinding) {
      var binding;
      if (typeOrBinding instanceof Binding) {
        binding = typeOrBinding;
      } else {
        binding = bind(typeOrBinding).toClass(typeOrBinding);
      }
      return binding;
    }
  }, {});
  Object.defineProperty(DynamicComponentLoader, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(DynamicComponentLoader, "parameters", {get: function() {
      return [[Compiler], [AppViewManager]];
    }});
  Object.defineProperty(DynamicComponentLoader.prototype.loadIntoExistingLocation, "parameters", {get: function() {
      return [[], [ElementRef], [Injector]];
    }});
  Object.defineProperty(DynamicComponentLoader.prototype.loadAsRoot, "parameters", {get: function() {
      return [[], [], [Injector]];
    }});
  Object.defineProperty(DynamicComponentLoader.prototype.loadIntoNewLocation, "parameters", {get: function() {
      return [[], [ElementRef], [Injector]];
    }});
  Object.defineProperty(DynamicComponentLoader.prototype.loadNextToExistingLocation, "parameters", {get: function() {
      return [[], [ElementRef], [Injector]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/testability/get_testability", ["npm:angular2@2.0.0-alpha.24/src/core/testability/testability", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    GetTestability: {get: function() {
        return GetTestability;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_testability_47_testability__,
      $__angular2_47_src_47_facade_47_lang__;
  var $__0 = ($__angular2_47_src_47_core_47_testability_47_testability__ = require("npm:angular2@2.0.0-alpha.24/src/core/testability/testability"), $__angular2_47_src_47_core_47_testability_47_testability__ && $__angular2_47_src_47_core_47_testability_47_testability__.__esModule && $__angular2_47_src_47_core_47_testability_47_testability__ || {default: $__angular2_47_src_47_core_47_testability_47_testability__}),
      TestabilityRegistry = $__0.TestabilityRegistry,
      Testability = $__0.Testability;
  var global = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).global;
  var PublicTestability = function PublicTestability(testability) {
    this._testability = testability;
  };
  ($traceurRuntime.createClass)(PublicTestability, {
    whenStable: function(callback) {
      this._testability.whenStable(callback);
    },
    findBindings: function(using, binding, exactMatch) {
      return this._testability.findBindings(using, binding, exactMatch);
    }
  }, {});
  Object.defineProperty(PublicTestability, "parameters", {get: function() {
      return [[Testability]];
    }});
  Object.defineProperty(PublicTestability.prototype.whenStable, "parameters", {get: function() {
      return [[Function]];
    }});
  Object.defineProperty(PublicTestability.prototype.findBindings, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [$traceurRuntime.type.boolean]];
    }});
  var GetTestability = function GetTestability() {
    ;
  };
  ($traceurRuntime.createClass)(GetTestability, {}, {addToWindow: function(registry) {
      global.getAngularTestability = function(elem) {
        var testability = registry.findTestabilityInTree(elem);
        if (testability == null) {
          throw new Error('Could not find testability for element.');
        }
        return new PublicTestability(testability);
      };
    }});
  Object.defineProperty(GetTestability.addToWindow, "parameters", {get: function() {
      return [[TestabilityRegistry]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/dom_renderer", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view_container", "npm:angular2@2.0.0-alpha.24/src/render/dom/util", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    DOCUMENT_TOKEN: {get: function() {
        return DOCUMENT_TOKEN;
      }},
    DomRenderer: {get: function() {
        return DomRenderer;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__shadow_95_dom_47_content_95_tag__,
      $__shadow_95_dom_47_shadow_95_dom_95_strategy__,
      $__events_47_event_95_manager__,
      $__view_47_proto_95_view__,
      $__view_47_view__,
      $__view_47_view_95_container__,
      $__util__,
      $___46__46__47_api__;
  var $__0 = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}),
      Inject = $__0.Inject,
      Injectable = $__0.Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      int = $__1.int,
      isPresent = $__1.isPresent,
      isBlank = $__1.isBlank,
      BaseException = $__1.BaseException,
      RegExpWrapper = $__1.RegExpWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__2.ListWrapper,
      MapWrapper = $__2.MapWrapper,
      Map = $__2.Map,
      StringMapWrapper = $__2.StringMapWrapper,
      List = $__2.List;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var Content = ($__shadow_95_dom_47_content_95_tag__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag"), $__shadow_95_dom_47_content_95_tag__ && $__shadow_95_dom_47_content_95_tag__.__esModule && $__shadow_95_dom_47_content_95_tag__ || {default: $__shadow_95_dom_47_content_95_tag__}).Content;
  var ShadowDomStrategy = ($__shadow_95_dom_47_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $__shadow_95_dom_47_shadow_95_dom_95_strategy__ && $__shadow_95_dom_47_shadow_95_dom_95_strategy__.__esModule && $__shadow_95_dom_47_shadow_95_dom_95_strategy__ || {default: $__shadow_95_dom_47_shadow_95_dom_95_strategy__}).ShadowDomStrategy;
  var EventManager = ($__events_47_event_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager"), $__events_47_event_95_manager__ && $__events_47_event_95_manager__.__esModule && $__events_47_event_95_manager__ || {default: $__events_47_event_95_manager__}).EventManager;
  var $__7 = ($__view_47_proto_95_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view"), $__view_47_proto_95_view__ && $__view_47_proto_95_view__.__esModule && $__view_47_proto_95_view__ || {default: $__view_47_proto_95_view__}),
      DomProtoView = $__7.DomProtoView,
      DomProtoViewRef = $__7.DomProtoViewRef,
      resolveInternalDomProtoView = $__7.resolveInternalDomProtoView;
  var $__8 = ($__view_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $__view_47_view__ && $__view_47_view__.__esModule && $__view_47_view__ || {default: $__view_47_view__}),
      DomView = $__8.DomView,
      DomViewRef = $__8.DomViewRef,
      resolveInternalDomView = $__8.resolveInternalDomView;
  var DomViewContainer = ($__view_47_view_95_container__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view_container"), $__view_47_view_95_container__ && $__view_47_view_95_container__.__esModule && $__view_47_view_95_container__ || {default: $__view_47_view_95_container__}).DomViewContainer;
  var $__10 = ($__util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $__util__ && $__util__.__esModule && $__util__ || {default: $__util__}),
      NG_BINDING_CLASS_SELECTOR = $__10.NG_BINDING_CLASS_SELECTOR,
      NG_BINDING_CLASS = $__10.NG_BINDING_CLASS;
  var $__11 = ($___46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47_api__ && $___46__46__47_api__.__esModule && $___46__46__47_api__ || {default: $___46__46__47_api__}),
      Renderer = $__11.Renderer,
      RenderProtoViewRef = $__11.RenderProtoViewRef,
      RenderViewRef = $__11.RenderViewRef;
  var DOCUMENT_TOKEN = 'DocumentToken';
  var DomRenderer = function DomRenderer(eventManager, shadowDomStrategy, document) {
    $traceurRuntime.superConstructor($DomRenderer).call(this);
    this._eventManager = eventManager;
    this._shadowDomStrategy = shadowDomStrategy;
    this._document = document;
  };
  var $DomRenderer = DomRenderer;
  ($traceurRuntime.createClass)(DomRenderer, {
    createRootHostView: function(hostProtoViewRef, hostElementSelector) {
      var hostProtoView = resolveInternalDomProtoView(hostProtoViewRef);
      var element = DOM.querySelector(this._document, hostElementSelector);
      if (isBlank(element)) {
        throw new BaseException(("The selector \"" + hostElementSelector + "\" did not match any elements"));
      }
      return new DomViewRef(this._createView(hostProtoView, element));
    },
    detachFreeHostView: function(parentHostViewRef, hostViewRef) {
      var hostView = resolveInternalDomView(hostViewRef);
      this._removeViewNodes(hostView);
    },
    createView: function(protoViewRef) {
      var protoView = resolveInternalDomProtoView(protoViewRef);
      return new DomViewRef(this._createView(protoView, null));
    },
    destroyView: function(view) {},
    attachComponentView: function(hostViewRef, elementIndex, componentViewRef) {
      var hostView = resolveInternalDomView(hostViewRef);
      var componentView = resolveInternalDomView(componentViewRef);
      var element = hostView.boundElements[elementIndex];
      var lightDom = hostView.lightDoms[elementIndex];
      if (isPresent(lightDom)) {
        lightDom.attachShadowDomView(componentView);
      }
      var shadowRoot = this._shadowDomStrategy.prepareShadowRoot(element);
      this._moveViewNodesIntoParent(shadowRoot, componentView);
      componentView.hostLightDom = lightDom;
      componentView.shadowRoot = shadowRoot;
    },
    setComponentViewRootNodes: function(componentViewRef, rootNodes) {
      var componentView = resolveInternalDomView(componentViewRef);
      this._removeViewNodes(componentView);
      componentView.rootNodes = rootNodes;
      this._moveViewNodesIntoParent(componentView.shadowRoot, componentView);
    },
    getHostElement: function(hostViewRef) {
      var hostView = resolveInternalDomView(hostViewRef);
      return hostView.boundElements[0];
    },
    detachComponentView: function(hostViewRef, boundElementIndex, componentViewRef) {
      var hostView = resolveInternalDomView(hostViewRef);
      var componentView = resolveInternalDomView(componentViewRef);
      this._removeViewNodes(componentView);
      var lightDom = hostView.lightDoms[boundElementIndex];
      if (isPresent(lightDom)) {
        lightDom.detachShadowDomView();
      }
      componentView.hostLightDom = null;
      componentView.shadowRoot = null;
    },
    attachViewInContainer: function(parentViewRef, boundElementIndex, atIndex, viewRef) {
      var parentView = resolveInternalDomView(parentViewRef);
      var view = resolveInternalDomView(viewRef);
      var viewContainer = this._getOrCreateViewContainer(parentView, boundElementIndex);
      ListWrapper.insert(viewContainer.views, atIndex, view);
      view.hostLightDom = parentView.hostLightDom;
      var directParentLightDom = parentView.getDirectParentLightDom(boundElementIndex);
      if (isBlank(directParentLightDom)) {
        var siblingToInsertAfter;
        if (atIndex == 0) {
          siblingToInsertAfter = parentView.boundElements[boundElementIndex];
        } else {
          siblingToInsertAfter = ListWrapper.last(viewContainer.views[atIndex - 1].rootNodes);
        }
        this._moveViewNodesAfterSibling(siblingToInsertAfter, view);
      } else {
        directParentLightDom.redistribute();
      }
      if (isPresent(parentView.hostLightDom)) {
        parentView.hostLightDom.redistribute();
      }
    },
    detachViewInContainer: function(parentViewRef, boundElementIndex, atIndex, viewRef) {
      var parentView = resolveInternalDomView(parentViewRef);
      var view = resolveInternalDomView(viewRef);
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var detachedView = viewContainer.views[atIndex];
      ListWrapper.removeAt(viewContainer.views, atIndex);
      var directParentLightDom = parentView.getDirectParentLightDom(boundElementIndex);
      if (isBlank(directParentLightDom)) {
        this._removeViewNodes(detachedView);
      } else {
        directParentLightDom.redistribute();
      }
      view.hostLightDom = null;
      if (isPresent(parentView.hostLightDom)) {
        parentView.hostLightDom.redistribute();
      }
    },
    hydrateView: function(viewRef) {
      var view = resolveInternalDomView(viewRef);
      if (view.hydrated)
        throw new BaseException('The view is already hydrated.');
      view.hydrated = true;
      for (var i = 0; i < view.lightDoms.length; ++i) {
        var lightDom = view.lightDoms[i];
        if (isPresent(lightDom)) {
          lightDom.redistribute();
        }
      }
      view.eventHandlerRemovers = ListWrapper.create();
      var binders = view.proto.elementBinders;
      for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
        var binder = binders[binderIdx];
        if (isPresent(binder.globalEvents)) {
          for (var i = 0; i < binder.globalEvents.length; i++) {
            var globalEvent = binder.globalEvents[i];
            var remover = this._createGlobalEventListener(view, binderIdx, globalEvent.name, globalEvent.target, globalEvent.fullName);
            ListWrapper.push(view.eventHandlerRemovers, remover);
          }
        }
      }
      if (isPresent(view.hostLightDom)) {
        view.hostLightDom.redistribute();
      }
    },
    dehydrateView: function(viewRef) {
      var view = resolveInternalDomView(viewRef);
      for (var i = 0; i < view.eventHandlerRemovers.length; i++) {
        view.eventHandlerRemovers[i]();
      }
      view.eventHandlerRemovers = null;
      view.hydrated = false;
    },
    setElementProperty: function(viewRef, elementIndex, propertyName, propertyValue) {
      var view = resolveInternalDomView(viewRef);
      view.setElementProperty(elementIndex, propertyName, propertyValue);
    },
    callAction: function(viewRef, elementIndex, actionExpression, actionArgs) {
      var view = resolveInternalDomView(viewRef);
      view.callAction(elementIndex, actionExpression, actionArgs);
    },
    setText: function(viewRef, textNodeIndex, text) {
      var view = resolveInternalDomView(viewRef);
      DOM.setText(view.boundTextNodes[textNodeIndex], text);
    },
    setEventDispatcher: function(viewRef, dispatcher) {
      var view = resolveInternalDomView(viewRef);
      view.eventDispatcher = dispatcher;
    },
    _createView: function(protoView, inplaceElement) {
      var rootElementClone = isPresent(inplaceElement) ? inplaceElement : DOM.importIntoDoc(protoView.element);
      var elementsWithBindingsDynamic;
      if (protoView.isTemplateElement) {
        elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);
      } else {
        elementsWithBindingsDynamic = DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);
      }
      var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);
      for (var binderIdx = 0; binderIdx < elementsWithBindingsDynamic.length; ++binderIdx) {
        elementsWithBindings[binderIdx] = elementsWithBindingsDynamic[binderIdx];
      }
      var viewRootNodes;
      if (protoView.isTemplateElement) {
        var childNode = DOM.firstChild(DOM.content(rootElementClone));
        viewRootNodes = [];
        while (childNode != null) {
          ListWrapper.push(viewRootNodes, childNode);
          childNode = DOM.nextSibling(childNode);
        }
      } else {
        viewRootNodes = [rootElementClone];
      }
      var binders = protoView.elementBinders;
      var boundTextNodes = [];
      var boundElements = ListWrapper.createFixedSize(binders.length);
      var contentTags = ListWrapper.createFixedSize(binders.length);
      for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
        var binder = binders[binderIdx];
        var element = void 0;
        if (binderIdx === 0 && protoView.rootBindingOffset === 1) {
          element = rootElementClone;
        } else {
          element = elementsWithBindings[binderIdx - protoView.rootBindingOffset];
        }
        boundElements[binderIdx] = element;
        var childNodes = DOM.childNodes(DOM.templateAwareRoot(element));
        var textNodeIndices = binder.textNodeIndices;
        for (var i = 0; i < textNodeIndices.length; i++) {
          ListWrapper.push(boundTextNodes, childNodes[textNodeIndices[i]]);
        }
        var contentTag = null;
        if (isPresent(binder.contentTagSelector)) {
          contentTag = new Content(element, binder.contentTagSelector);
        }
        contentTags[binderIdx] = contentTag;
      }
      var view = new DomView(protoView, viewRootNodes, boundTextNodes, boundElements, contentTags);
      for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
        var binder = binders[binderIdx];
        var element = boundElements[binderIdx];
        var lightDom = null;
        if (isPresent(binder.componentId)) {
          lightDom = this._shadowDomStrategy.constructLightDom(view, boundElements[binderIdx]);
        }
        view.lightDoms[binderIdx] = lightDom;
        var contentTag = contentTags[binderIdx];
        if (isPresent(contentTag)) {
          var destLightDom = view.getDirectParentLightDom(binderIdx);
          contentTag.init(destLightDom);
        }
        if (isPresent(binder.eventLocals) && isPresent(binder.localEvents)) {
          for (var i = 0; i < binder.localEvents.length; i++) {
            this._createEventListener(view, element, binderIdx, binder.localEvents[i].name, binder.eventLocals);
          }
        }
      }
      return view;
    },
    _createEventListener: function(view, element, elementIndex, eventName, eventLocals) {
      this._eventManager.addEventListener(element, eventName, (function(event) {
        view.dispatchEvent(elementIndex, eventName, event);
      }));
    },
    _moveViewNodesAfterSibling: function(sibling, view) {
      for (var i = view.rootNodes.length - 1; i >= 0; --i) {
        DOM.insertAfter(sibling, view.rootNodes[i]);
      }
    },
    _moveViewNodesIntoParent: function(parent, view) {
      for (var i = 0; i < view.rootNodes.length; ++i) {
        DOM.appendChild(parent, view.rootNodes[i]);
      }
    },
    _removeViewNodes: function(view) {
      var len = view.rootNodes.length;
      if (len == 0)
        return ;
      var parent = view.rootNodes[0].parentNode;
      for (var i = len - 1; i >= 0; --i) {
        DOM.removeChild(parent, view.rootNodes[i]);
      }
    },
    _getOrCreateViewContainer: function(parentView, boundElementIndex) {
      var vc = parentView.viewContainers[boundElementIndex];
      if (isBlank(vc)) {
        vc = new DomViewContainer();
        parentView.viewContainers[boundElementIndex] = vc;
      }
      return vc;
    },
    _createGlobalEventListener: function(view, elementIndex, eventName, eventTarget, fullName) {
      return this._eventManager.addGlobalEventListener(eventTarget, eventName, (function(event) {
        view.dispatchEvent(elementIndex, fullName, event);
      }));
    }
  }, {}, Renderer);
  Object.defineProperty(DomRenderer, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(DomRenderer, "parameters", {get: function() {
      return [[EventManager], [ShadowDomStrategy], [new Inject(DOCUMENT_TOKEN)]];
    }});
  Object.defineProperty(DomRenderer.prototype.createRootHostView, "parameters", {get: function() {
      return [[RenderProtoViewRef], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(DomRenderer.prototype.detachFreeHostView, "parameters", {get: function() {
      return [[RenderViewRef], [RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.createView, "parameters", {get: function() {
      return [[RenderProtoViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.destroyView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.attachComponentView, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.setComponentViewRootNodes, "parameters", {get: function() {
      return [[RenderViewRef], [List]];
    }});
  Object.defineProperty(DomRenderer.prototype.getHostElement, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.detachComponentView, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.attachViewInContainer, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.detachViewInContainer, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.number], [RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.hydrateView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.dehydrateView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  Object.defineProperty(DomRenderer.prototype.setElementProperty, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(DomRenderer.prototype.callAction, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(DomRenderer.prototype.setText, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.number], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(DomRenderer.prototype.setEventDispatcher, "parameters", {get: function() {
      return [[RenderViewRef], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(DomRenderer.prototype._createView, "parameters", {get: function() {
      return [[DomProtoView], []];
    }});
  Object.defineProperty(DomRenderer.prototype._getOrCreateViewContainer, "parameters", {get: function() {
      return [[DomView], []];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/view/property_setter_factory", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/util", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    setterFactory: {get: function() {
        return setterFactory;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $___46__46__47_util__,
      $__angular2_47_src_47_reflection_47_reflection__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      StringWrapper = $__0.StringWrapper,
      RegExpWrapper = $__0.RegExpWrapper,
      BaseException = $__0.BaseException,
      isPresent = $__0.isPresent,
      isBlank = $__0.isBlank,
      isString = $__0.isString,
      stringify = $__0.stringify;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__1.ListWrapper,
      StringMapWrapper = $__1.StringMapWrapper;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__3 = ($___46__46__47_util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $___46__46__47_util__ && $___46__46__47_util__.__esModule && $___46__46__47_util__ || {default: $___46__46__47_util__}),
      camelCaseToDashCase = $__3.camelCaseToDashCase,
      dashCaseToCamelCase = $__3.dashCaseToCamelCase;
  var reflector = ($__angular2_47_src_47_reflection_47_reflection__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection"), $__angular2_47_src_47_reflection_47_reflection__ && $__angular2_47_src_47_reflection_47_reflection__.__esModule && $__angular2_47_src_47_reflection_47_reflection__ || {default: $__angular2_47_src_47_reflection_47_reflection__}).reflector;
  var STYLE_SEPARATOR = '.';
  var propertySettersCache = StringMapWrapper.create();
  var innerHTMLSetterCache;
  function setterFactory(property) {
    var setterFn,
        styleParts,
        styleSuffix;
    if (StringWrapper.startsWith(property, ATTRIBUTE_PREFIX)) {
      setterFn = attributeSetterFactory(StringWrapper.substring(property, ATTRIBUTE_PREFIX.length));
    } else if (StringWrapper.startsWith(property, CLASS_PREFIX)) {
      setterFn = classSetterFactory(StringWrapper.substring(property, CLASS_PREFIX.length));
    } else if (StringWrapper.startsWith(property, STYLE_PREFIX)) {
      styleParts = property.split(STYLE_SEPARATOR);
      styleSuffix = styleParts.length > 2 ? ListWrapper.get(styleParts, 2) : '';
      setterFn = styleSetterFactory(ListWrapper.get(styleParts, 1), styleSuffix);
    } else if (StringWrapper.equals(property, 'innerHtml')) {
      if (isBlank(innerHTMLSetterCache)) {
        innerHTMLSetterCache = (function(el, value) {
          return DOM.setInnerHTML(el, value);
        });
      }
      setterFn = innerHTMLSetterCache;
    } else {
      property = resolvePropertyName(property);
      setterFn = StringMapWrapper.get(propertySettersCache, property);
      if (isBlank(setterFn)) {
        var propertySetterFn = reflector.setter(property);
        setterFn = function(receiver, value) {
          if (DOM.hasProperty(receiver, property)) {
            return propertySetterFn(receiver, value);
          }
        };
        StringMapWrapper.set(propertySettersCache, property, setterFn);
      }
    }
    return setterFn;
  }
  Object.defineProperty(setterFactory, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var ATTRIBUTE_PREFIX = 'attr.';
  var attributeSettersCache = StringMapWrapper.create();
  function _isValidAttributeValue(attrName, value) {
    if (attrName == "role") {
      return isString(value);
    } else {
      return isPresent(value);
    }
  }
  Object.defineProperty(_isValidAttributeValue, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  function attributeSetterFactory(attrName) {
    var setterFn = StringMapWrapper.get(attributeSettersCache, attrName);
    var dashCasedAttributeName;
    if (isBlank(setterFn)) {
      dashCasedAttributeName = camelCaseToDashCase(attrName);
      setterFn = function(element, value) {
        if (_isValidAttributeValue(dashCasedAttributeName, value)) {
          DOM.setAttribute(element, dashCasedAttributeName, stringify(value));
        } else {
          if (isPresent(value)) {
            throw new BaseException("Invalid " + dashCasedAttributeName + " attribute, only string values are allowed, got '" + stringify(value) + "'");
          }
          DOM.removeAttribute(element, dashCasedAttributeName);
        }
      };
      StringMapWrapper.set(attributeSettersCache, attrName, setterFn);
    }
    return setterFn;
  }
  Object.defineProperty(attributeSetterFactory, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var CLASS_PREFIX = 'class.';
  var classSettersCache = StringMapWrapper.create();
  function classSetterFactory(className) {
    var setterFn = StringMapWrapper.get(classSettersCache, className);
    var dashCasedClassName;
    if (isBlank(setterFn)) {
      dashCasedClassName = camelCaseToDashCase(className);
      setterFn = function(element, value) {
        if (value) {
          DOM.addClass(element, dashCasedClassName);
        } else {
          DOM.removeClass(element, dashCasedClassName);
        }
      };
      StringMapWrapper.set(classSettersCache, className, setterFn);
    }
    return setterFn;
  }
  Object.defineProperty(classSetterFactory, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var STYLE_PREFIX = 'style.';
  var styleSettersCache = StringMapWrapper.create();
  function styleSetterFactory(styleName, styleSuffix) {
    var cacheKey = styleName + styleSuffix;
    var setterFn = StringMapWrapper.get(styleSettersCache, cacheKey);
    var dashCasedStyleName;
    if (isBlank(setterFn)) {
      dashCasedStyleName = camelCaseToDashCase(styleName);
      setterFn = function(element, value) {
        var valAsStr;
        if (isPresent(value)) {
          valAsStr = stringify(value);
          DOM.setStyle(element, dashCasedStyleName, valAsStr + styleSuffix);
        } else {
          DOM.removeStyle(element, dashCasedStyleName);
        }
      };
      StringMapWrapper.set(styleSettersCache, cacheKey, setterFn);
    }
    return setterFn;
  }
  Object.defineProperty(styleSetterFactory, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  function resolvePropertyName(attrName) {
    var mappedPropName = StringMapWrapper.get(DOM.attrToPropMap, attrName);
    return isPresent(mappedPropName) ? mappedPropName : attrName;
  }
  Object.defineProperty(resolvePropertyName, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", ["npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      CompileStep: {get: function() {
          return CompileStep;
        }},
      __esModule: {value: true}
    });
    var $__compile_95_element__,
        $__compile_95_control__;
    var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
    var compileControlModule = ($__compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $__compile_95_control__ && $__compile_95_control__.__esModule && $__compile_95_control__ || {default: $__compile_95_control__});
    var CompileStep = function CompileStep() {
      ;
    };
    ($traceurRuntime.createClass)(CompileStep, {process: function(parent, current, control) {}}, {});
    Object.defineProperty(CompileStep.prototype.process, "parameters", {get: function() {
        return [[CompileElement], [CompileElement], [compileControlModule.CompileControl]];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/property_binding_parser", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "npm:angular2@2.0.0-alpha.24/src/render/dom/util", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      PropertyBindingParser: {get: function() {
          return PropertyBindingParser;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_facade_47_collection__,
        $__angular2_47_change_95_detection__,
        $__compile_95_step__,
        $__compile_95_element__,
        $__compile_95_control__,
        $___46__46__47_util__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isPresent = $__0.isPresent,
        RegExpWrapper = $__0.RegExpWrapper;
    var MapWrapper = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).MapWrapper;
    var Parser = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Parser;
    var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
    var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
    var CompileControl = ($__compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $__compile_95_control__ && $__compile_95_control__.__esModule && $__compile_95_control__ || {default: $__compile_95_control__}).CompileControl;
    var dashCaseToCamelCase = ($___46__46__47_util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $___46__46__47_util__ && $___46__46__47_util__.__esModule && $___46__46__47_util__ || {default: $___46__46__47_util__}).dashCaseToCamelCase;
    var BIND_NAME_REGEXP = RegExpWrapper.create('^(?:(?:(?:(bind-)|(var-|#)|(on-)|(bindon-))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$');
    var PropertyBindingParser = function PropertyBindingParser(parser) {
      $traceurRuntime.superConstructor($PropertyBindingParser).call(this);
      this._parser = parser;
    };
    var $PropertyBindingParser = PropertyBindingParser;
    ($traceurRuntime.createClass)(PropertyBindingParser, {
      process: function(parent, current, control) {
        var $__7 = this;
        var attrs = current.attrs();
        var newAttrs = MapWrapper.create();
        MapWrapper.forEach(attrs, (function(attrValue, attrName) {
          var bindParts = RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);
          if (isPresent(bindParts)) {
            if (isPresent(bindParts[1])) {
              $__7._bindProperty(bindParts[5], attrValue, current, newAttrs);
            } else if (isPresent(bindParts[2])) {
              var identifier = bindParts[5];
              var value = attrValue == '' ? '\$implicit' : attrValue;
              $__7._bindVariable(identifier, value, current, newAttrs);
            } else if (isPresent(bindParts[3])) {
              $__7._bindEvent(bindParts[5], attrValue, current, newAttrs);
            } else if (isPresent(bindParts[4])) {
              $__7._bindProperty(bindParts[5], attrValue, current, newAttrs);
              $__7._bindAssignmentEvent(bindParts[5], attrValue, current, newAttrs);
            } else if (isPresent(bindParts[6])) {
              $__7._bindProperty(bindParts[6], attrValue, current, newAttrs);
              $__7._bindAssignmentEvent(bindParts[6], attrValue, current, newAttrs);
            } else if (isPresent(bindParts[7])) {
              $__7._bindProperty(bindParts[7], attrValue, current, newAttrs);
            } else if (isPresent(bindParts[8])) {
              $__7._bindEvent(bindParts[8], attrValue, current, newAttrs);
            }
          } else {
            var expr = $__7._parser.parseInterpolation(attrValue, current.elementDescription);
            if (isPresent(expr)) {
              $__7._bindPropertyAst(attrName, expr, current, newAttrs);
            }
          }
        }));
        MapWrapper.forEach(newAttrs, (function(attrValue, attrName) {
          MapWrapper.set(attrs, attrName, attrValue);
        }));
      },
      _bindVariable: function(identifier, value, current, newAttrs) {
        current.bindElement().bindVariable(dashCaseToCamelCase(identifier), value);
        MapWrapper.set(newAttrs, identifier, value);
      },
      _bindProperty: function(name, expression, current, newAttrs) {
        this._bindPropertyAst(name, this._parser.parseBinding(expression, current.elementDescription), current, newAttrs);
      },
      _bindPropertyAst: function(name, ast, current, newAttrs) {
        var binder = current.bindElement();
        var camelCaseName = dashCaseToCamelCase(name);
        binder.bindProperty(camelCaseName, ast);
        MapWrapper.set(newAttrs, name, ast.source);
      },
      _bindAssignmentEvent: function(name, expression, current, newAttrs) {
        this._bindEvent(name, (expression + "=$event"), current, newAttrs);
      },
      _bindEvent: function(name, expression, current, newAttrs) {
        current.bindElement().bindEvent(dashCaseToCamelCase(name), this._parser.parseAction(expression, current.elementDescription));
      }
    }, {}, CompileStep);
    Object.defineProperty(PropertyBindingParser, "parameters", {get: function() {
        return [[Parser]];
      }});
    Object.defineProperty(PropertyBindingParser.prototype.process, "parameters", {get: function() {
        return [[CompileElement], [CompileElement], [CompileControl]];
      }});
    Object.defineProperty(PropertyBindingParser.prototype._bindVariable, "parameters", {get: function() {
        return [[], [], [CompileElement], []];
      }});
    Object.defineProperty(PropertyBindingParser.prototype._bindProperty, "parameters", {get: function() {
        return [[], [], [CompileElement], []];
      }});
    Object.defineProperty(PropertyBindingParser.prototype._bindPropertyAst, "parameters", {get: function() {
        return [[], [], [CompileElement], []];
      }});
    Object.defineProperty(PropertyBindingParser.prototype._bindAssignmentEvent, "parameters", {get: function() {
        return [[], [], [CompileElement], []];
      }});
    Object.defineProperty(PropertyBindingParser.prototype._bindEvent, "parameters", {get: function() {
        return [[], [], [CompileElement], []];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/text_interpolation_parser", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      TextInterpolationParser: {get: function() {
          return TextInterpolationParser;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $__angular2_47_change_95_detection__,
        $__compile_95_step__,
        $__compile_95_element__,
        $__compile_95_control__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        RegExpWrapper = $__0.RegExpWrapper,
        StringWrapper = $__0.StringWrapper,
        isPresent = $__0.isPresent;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var Parser = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Parser;
    var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
    var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
    var CompileControl = ($__compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $__compile_95_control__ && $__compile_95_control__.__esModule && $__compile_95_control__ || {default: $__compile_95_control__}).CompileControl;
    var TextInterpolationParser = function TextInterpolationParser(parser) {
      $traceurRuntime.superConstructor($TextInterpolationParser).call(this);
      this._parser = parser;
    };
    var $TextInterpolationParser = TextInterpolationParser;
    ($traceurRuntime.createClass)(TextInterpolationParser, {process: function(parent, current, control) {
        if (!current.compileChildren) {
          return ;
        }
        var element = current.element;
        var childNodes = DOM.childNodes(DOM.templateAwareRoot(element));
        for (var i = 0; i < childNodes.length; i++) {
          var node = childNodes[i];
          if (DOM.isTextNode(node)) {
            var text = DOM.nodeValue(node);
            var expr = this._parser.parseInterpolation(text, current.elementDescription);
            if (isPresent(expr)) {
              DOM.setText(node, ' ');
              current.bindElement().bindText(i, expr);
            }
          }
        }
      }}, {}, CompileStep);
    Object.defineProperty(TextInterpolationParser, "parameters", {get: function() {
        return [[Parser]];
      }});
    Object.defineProperty(TextInterpolationParser.prototype.process, "parameters", {get: function() {
        return [[CompileElement], [CompileElement], [CompileControl]];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/selector", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    CssSelector: {get: function() {
        return CssSelector;
      }},
    SelectorMatcher: {get: function() {
        return SelectorMatcher;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__0.List,
      Map = $__0.Map,
      ListWrapper = $__0.ListWrapper,
      MapWrapper = $__0.MapWrapper;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__1.isPresent,
      isBlank = $__1.isBlank,
      RegExpWrapper = $__1.RegExpWrapper,
      RegExpMatcherWrapper = $__1.RegExpMatcherWrapper,
      StringWrapper = $__1.StringWrapper,
      BaseException = $__1.BaseException;
  var _EMPTY_ATTR_VALUE = '';
  var _SELECTOR_REGEXP = RegExpWrapper.create('(\\:not\\()|' + '([-\\w]+)|' + '(?:\\.([-\\w]+))|' + '(?:\\[([-\\w*]+)(?:=([^\\]]*))?\\])|' + '(?:\\))|' + '(\\s*,\\s*)');
  var CssSelector = function CssSelector() {
    this.element = null;
    this.classNames = ListWrapper.create();
    this.attrs = ListWrapper.create();
    this.notSelector = null;
  };
  var $CssSelector = CssSelector;
  ($traceurRuntime.createClass)(CssSelector, {
    isElementSelector: function() {
      return isPresent(this.element) && ListWrapper.isEmpty(this.classNames) && ListWrapper.isEmpty(this.attrs) && isBlank(this.notSelector);
    },
    setElement: function() {
      var element = arguments[0] !== (void 0) ? arguments[0] : null;
      if (isPresent(element)) {
        element = element.toLowerCase();
      }
      this.element = element;
    },
    addAttribute: function(name) {
      var value = arguments[1] !== (void 0) ? arguments[1] : _EMPTY_ATTR_VALUE;
      ListWrapper.push(this.attrs, name.toLowerCase());
      if (isPresent(value)) {
        value = value.toLowerCase();
      } else {
        value = _EMPTY_ATTR_VALUE;
      }
      ListWrapper.push(this.attrs, value);
    },
    addClassName: function(name) {
      ListWrapper.push(this.classNames, name.toLowerCase());
    },
    toString: function() {
      var res = '';
      if (isPresent(this.element)) {
        res += this.element;
      }
      if (isPresent(this.classNames)) {
        for (var i = 0; i < this.classNames.length; i++) {
          res += '.' + this.classNames[i];
        }
      }
      if (isPresent(this.attrs)) {
        for (var i = 0; i < this.attrs.length; ) {
          var attrName = this.attrs[i++];
          var attrValue = this.attrs[i++];
          res += '[' + attrName;
          if (attrValue.length > 0) {
            res += '=' + attrValue;
          }
          res += ']';
        }
      }
      if (isPresent(this.notSelector)) {
        res += ":not(" + this.notSelector.toString() + ")";
      }
      return res;
    }
  }, {parse: function(selector) {
      var results = ListWrapper.create();
      var _addResult = (function(res, cssSel) {
        if (isPresent(cssSel.notSelector) && isBlank(cssSel.element) && ListWrapper.isEmpty(cssSel.classNames) && ListWrapper.isEmpty(cssSel.attrs)) {
          cssSel.element = "*";
        }
        ListWrapper.push(res, cssSel);
      });
      var cssSelector = new $CssSelector();
      var matcher = RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);
      var match;
      var current = cssSelector;
      while (isPresent(match = RegExpMatcherWrapper.next(matcher))) {
        if (isPresent(match[1])) {
          if (isPresent(cssSelector.notSelector)) {
            throw new BaseException('Nesting :not is not allowed in a selector');
          }
          current.notSelector = new $CssSelector();
          current = current.notSelector;
        }
        if (isPresent(match[2])) {
          current.setElement(match[2]);
        }
        if (isPresent(match[3])) {
          current.addClassName(match[3]);
        }
        if (isPresent(match[4])) {
          current.addAttribute(match[4], match[5]);
        }
        if (isPresent(match[6])) {
          _addResult(results, cssSelector);
          cssSelector = current = new $CssSelector();
        }
      }
      _addResult(results, cssSelector);
      return results;
    }});
  Object.defineProperty(CssSelector.parse, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(CssSelector.prototype.setElement, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(CssSelector.prototype.addAttribute, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(CssSelector.prototype.addClassName, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var SelectorMatcher = function SelectorMatcher() {
    this._elementMap = MapWrapper.create();
    this._elementPartialMap = MapWrapper.create();
    this._classMap = MapWrapper.create();
    this._classPartialMap = MapWrapper.create();
    this._attrValueMap = MapWrapper.create();
    this._attrValuePartialMap = MapWrapper.create();
    this._listContexts = ListWrapper.create();
  };
  var $SelectorMatcher = SelectorMatcher;
  ($traceurRuntime.createClass)(SelectorMatcher, {
    addSelectables: function(cssSelectors, callbackCtxt) {
      var listContext = null;
      if (cssSelectors.length > 1) {
        listContext = new SelectorListContext(cssSelectors);
        ListWrapper.push(this._listContexts, listContext);
      }
      for (var i = 0; i < cssSelectors.length; i++) {
        this.addSelectable(cssSelectors[i], callbackCtxt, listContext);
      }
    },
    addSelectable: function(cssSelector, callbackCtxt, listContext) {
      var matcher = this;
      var element = cssSelector.element;
      var classNames = cssSelector.classNames;
      var attrs = cssSelector.attrs;
      var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);
      if (isPresent(element)) {
        var isTerminal = attrs.length === 0 && classNames.length === 0;
        if (isTerminal) {
          this._addTerminal(matcher._elementMap, element, selectable);
        } else {
          matcher = this._addPartial(matcher._elementPartialMap, element);
        }
      }
      if (isPresent(classNames)) {
        for (var index = 0; index < classNames.length; index++) {
          var isTerminal = attrs.length === 0 && index === classNames.length - 1;
          var className = classNames[index];
          if (isTerminal) {
            this._addTerminal(matcher._classMap, className, selectable);
          } else {
            matcher = this._addPartial(matcher._classPartialMap, className);
          }
        }
      }
      if (isPresent(attrs)) {
        for (var index = 0; index < attrs.length; ) {
          var isTerminal = index === attrs.length - 2;
          var attrName = attrs[index++];
          var attrValue = attrs[index++];
          var map = isTerminal ? matcher._attrValueMap : matcher._attrValuePartialMap;
          var valuesMap = MapWrapper.get(map, attrName);
          if (isBlank(valuesMap)) {
            valuesMap = MapWrapper.create();
            MapWrapper.set(map, attrName, valuesMap);
          }
          if (isTerminal) {
            this._addTerminal(valuesMap, attrValue, selectable);
          } else {
            matcher = this._addPartial(valuesMap, attrValue);
          }
        }
      }
    },
    _addTerminal: function(map, name, selectable) {
      var terminalList = MapWrapper.get(map, name);
      if (isBlank(terminalList)) {
        terminalList = ListWrapper.create();
        MapWrapper.set(map, name, terminalList);
      }
      ListWrapper.push(terminalList, selectable);
    },
    _addPartial: function(map, name) {
      var matcher = MapWrapper.get(map, name);
      if (isBlank(matcher)) {
        matcher = new $SelectorMatcher();
        MapWrapper.set(map, name, matcher);
      }
      return matcher;
    },
    match: function(cssSelector, matchedCallback) {
      var result = false;
      var element = cssSelector.element;
      var classNames = cssSelector.classNames;
      var attrs = cssSelector.attrs;
      for (var i = 0; i < this._listContexts.length; i++) {
        this._listContexts[i].alreadyMatched = false;
      }
      result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;
      result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) || result;
      if (isPresent(classNames)) {
        for (var index = 0; index < classNames.length; index++) {
          var className = classNames[index];
          result = this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;
          result = this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) || result;
        }
      }
      if (isPresent(attrs)) {
        for (var index = 0; index < attrs.length; ) {
          var attrName = attrs[index++];
          var attrValue = attrs[index++];
          var valuesMap = MapWrapper.get(this._attrValueMap, attrName);
          if (!StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {
            result = this._matchTerminal(valuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) || result;
          }
          result = this._matchTerminal(valuesMap, attrValue, cssSelector, matchedCallback) || result;
          valuesMap = MapWrapper.get(this._attrValuePartialMap, attrName);
          result = this._matchPartial(valuesMap, attrValue, cssSelector, matchedCallback) || result;
        }
      }
      return result;
    },
    _matchTerminal: function() {
      var map = arguments[0] !== (void 0) ? arguments[0] : null;
      var name = arguments[1];
      var cssSelector = arguments[2];
      var matchedCallback = arguments[3];
      if (isBlank(map) || isBlank(name)) {
        return false;
      }
      var selectables = MapWrapper.get(map, name);
      var starSelectables = MapWrapper.get(map, "*");
      if (isPresent(starSelectables)) {
        selectables = ListWrapper.concat(selectables, starSelectables);
      }
      if (isBlank(selectables)) {
        return false;
      }
      var selectable;
      var result = false;
      for (var index = 0; index < selectables.length; index++) {
        selectable = selectables[index];
        result = selectable.finalize(cssSelector, matchedCallback) || result;
      }
      return result;
    },
    _matchPartial: function() {
      var map = arguments[0] !== (void 0) ? arguments[0] : null;
      var name = arguments[1];
      var cssSelector = arguments[2];
      var matchedCallback = arguments[3];
      if (isBlank(map) || isBlank(name)) {
        return false;
      }
      var nestedSelector = MapWrapper.get(map, name);
      if (isBlank(nestedSelector)) {
        return false;
      }
      return nestedSelector.match(cssSelector, matchedCallback);
    }
  }, {});
  Object.defineProperty(SelectorMatcher.prototype.addSelectables, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, CssSelector)], []];
    }});
  Object.defineProperty(SelectorMatcher.prototype.addSelectable, "parameters", {get: function() {
      return [[], [], [SelectorListContext]];
    }});
  Object.defineProperty(SelectorMatcher.prototype._addTerminal, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.string)], [$traceurRuntime.type.string], []];
    }});
  Object.defineProperty(SelectorMatcher.prototype._addPartial, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.string)], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(SelectorMatcher.prototype.match, "parameters", {get: function() {
      return [[CssSelector], [Function]];
    }});
  Object.defineProperty(SelectorMatcher.prototype._matchTerminal, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.string)], [], [], []];
    }});
  Object.defineProperty(SelectorMatcher.prototype._matchPartial, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.string)], [], [], []];
    }});
  var SelectorListContext = function SelectorListContext(selectors) {
    this.selectors = selectors;
    this.alreadyMatched = false;
  };
  ($traceurRuntime.createClass)(SelectorListContext, {}, {});
  Object.defineProperty(SelectorListContext, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, CssSelector)]];
    }});
  var SelectorContext = function SelectorContext(selector, cbContext, listContext) {
    this.selector = selector;
    this.notSelector = selector.notSelector;
    this.cbContext = cbContext;
    this.listContext = listContext;
  };
  ($traceurRuntime.createClass)(SelectorContext, {finalize: function(cssSelector, callback) {
      var result = true;
      if (isPresent(this.notSelector) && (isBlank(this.listContext) || !this.listContext.alreadyMatched)) {
        var notMatcher = new SelectorMatcher();
        notMatcher.addSelectable(this.notSelector, null, null);
        result = !notMatcher.match(cssSelector, null);
      }
      if (result && isPresent(callback) && (isBlank(this.listContext) || !this.listContext.alreadyMatched)) {
        if (isPresent(this.listContext)) {
          this.listContext.alreadyMatched = true;
        }
        callback(this.selector, this.cbContext);
      }
      return result;
    }}, {});
  Object.defineProperty(SelectorContext, "parameters", {get: function() {
      return [[CssSelector], [], [SelectorListContext]];
    }});
  Object.defineProperty(SelectorContext.prototype.finalize, "parameters", {get: function() {
      return [[CssSelector], []];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/view_splitter", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "npm:angular2@2.0.0-alpha.24/src/render/dom/util", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      ViewSplitter: {get: function() {
          return ViewSplitter;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $__angular2_47_src_47_facade_47_collection__,
        $__angular2_47_change_95_detection__,
        $__compile_95_step__,
        $__compile_95_element__,
        $__compile_95_control__,
        $___46__46__47_util__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isBlank = $__0.isBlank,
        isPresent = $__0.isPresent,
        BaseException = $__0.BaseException,
        StringWrapper = $__0.StringWrapper;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
        MapWrapper = $__2.MapWrapper,
        ListWrapper = $__2.ListWrapper;
    var Parser = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Parser;
    var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
    var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
    var CompileControl = ($__compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $__compile_95_control__ && $__compile_95_control__.__esModule && $__compile_95_control__ || {default: $__compile_95_control__}).CompileControl;
    var dashCaseToCamelCase = ($___46__46__47_util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $___46__46__47_util__ && $___46__46__47_util__.__esModule && $___46__46__47_util__ || {default: $___46__46__47_util__}).dashCaseToCamelCase;
    var ViewSplitter = function ViewSplitter(parser) {
      $traceurRuntime.superConstructor($ViewSplitter).call(this);
      this._parser = parser;
    };
    var $ViewSplitter = ViewSplitter;
    ($traceurRuntime.createClass)(ViewSplitter, {
      process: function(parent, current, control) {
        var attrs = current.attrs();
        var templateBindings = MapWrapper.get(attrs, 'template');
        var hasTemplateBinding = isPresent(templateBindings);
        MapWrapper.forEach(attrs, (function(attrValue, attrName) {
          if (StringWrapper.startsWith(attrName, '*')) {
            var key = StringWrapper.substring(attrName, 1);
            if (hasTemplateBinding) {
              throw new BaseException("Only one template directive per element is allowed: " + (templateBindings + " and " + key + " cannot be used simultaneously ") + ("in " + current.elementDescription));
            } else {
              templateBindings = (attrValue.length == 0) ? key : key + ' ' + attrValue;
              hasTemplateBinding = true;
            }
          }
        }));
        if (isPresent(parent)) {
          if (DOM.isTemplateElement(current.element)) {
            if (!current.isViewRoot) {
              var viewRoot = new CompileElement(DOM.createTemplate(''));
              viewRoot.inheritedProtoView = current.bindElement().bindNestedProtoView(viewRoot.element);
              viewRoot.elementDescription = current.elementDescription;
              viewRoot.isViewRoot = true;
              this._moveChildNodes(DOM.content(current.element), DOM.content(viewRoot.element));
              control.addChild(viewRoot);
            }
          }
          if (hasTemplateBinding) {
            var newParent = new CompileElement(DOM.createTemplate(''));
            newParent.inheritedProtoView = current.inheritedProtoView;
            newParent.inheritedElementBinder = current.inheritedElementBinder;
            newParent.distanceToInheritedBinder = current.distanceToInheritedBinder;
            newParent.elementDescription = current.elementDescription;
            current.inheritedProtoView = newParent.bindElement().bindNestedProtoView(current.element);
            current.inheritedElementBinder = null;
            current.distanceToInheritedBinder = 0;
            current.isViewRoot = true;
            this._parseTemplateBindings(templateBindings, newParent);
            this._addParentElement(current.element, newParent.element);
            control.addParent(newParent);
            DOM.remove(current.element);
          }
        }
      },
      _moveChildNodes: function(source, target) {
        var next = DOM.firstChild(source);
        while (isPresent(next)) {
          DOM.appendChild(target, next);
          next = DOM.firstChild(source);
        }
      },
      _addParentElement: function(currentElement, newParentElement) {
        DOM.insertBefore(currentElement, newParentElement);
        DOM.appendChild(newParentElement, currentElement);
      },
      _parseTemplateBindings: function(templateBindings, compileElement) {
        var bindings = this._parser.parseTemplateBindings(templateBindings, compileElement.elementDescription);
        for (var i = 0; i < bindings.length; i++) {
          var binding = bindings[i];
          if (binding.keyIsVar) {
            compileElement.bindElement().bindVariable(dashCaseToCamelCase(binding.key), binding.name);
            MapWrapper.set(compileElement.attrs(), binding.key, binding.name);
          } else if (isPresent(binding.expression)) {
            compileElement.bindElement().bindProperty(dashCaseToCamelCase(binding.key), binding.expression);
            MapWrapper.set(compileElement.attrs(), binding.key, binding.expression.source);
          } else {
            DOM.setAttribute(compileElement.element, binding.key, '');
          }
        }
      }
    }, {}, CompileStep);
    Object.defineProperty(ViewSplitter, "parameters", {get: function() {
        return [[Parser]];
      }});
    Object.defineProperty(ViewSplitter.prototype.process, "parameters", {get: function() {
        return [[CompileElement], [CompileElement], [CompileControl]];
      }});
    Object.defineProperty(ViewSplitter.prototype._parseTemplateBindings, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [CompileElement]];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_compile_step", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      ShadowDomCompileStep: {get: function() {
          return ShadowDomCompileStep;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_facade_47_collection__,
        $__angular2_47_src_47_facade_47_async__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $___46__46__47_compiler_47_compile_95_step__,
        $___46__46__47_compiler_47_compile_95_element__,
        $___46__46__47_compiler_47_compile_95_control__,
        $___46__46__47__46__46__47_api__,
        $__shadow_95_dom_95_strategy__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isBlank = $__0.isBlank,
        isPresent = $__0.isPresent,
        assertionsEnabled = $__0.assertionsEnabled;
    var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
        MapWrapper = $__1.MapWrapper,
        List = $__1.List,
        ListWrapper = $__1.ListWrapper;
    var $__2 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
        Promise = $__2.Promise,
        PromiseWrapper = $__2.PromiseWrapper;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var CompileStep = ($___46__46__47_compiler_47_compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $___46__46__47_compiler_47_compile_95_step__ && $___46__46__47_compiler_47_compile_95_step__.__esModule && $___46__46__47_compiler_47_compile_95_step__ || {default: $___46__46__47_compiler_47_compile_95_step__}).CompileStep;
    var CompileElement = ($___46__46__47_compiler_47_compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $___46__46__47_compiler_47_compile_95_element__ && $___46__46__47_compiler_47_compile_95_element__.__esModule && $___46__46__47_compiler_47_compile_95_element__ || {default: $___46__46__47_compiler_47_compile_95_element__}).CompileElement;
    var CompileControl = ($___46__46__47_compiler_47_compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $___46__46__47_compiler_47_compile_95_control__ && $___46__46__47_compiler_47_compile_95_control__.__esModule && $___46__46__47_compiler_47_compile_95_control__ || {default: $___46__46__47_compiler_47_compile_95_control__}).CompileControl;
    var ViewDefinition = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).ViewDefinition;
    var ShadowDomStrategy = ($__shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $__shadow_95_dom_95_strategy__ && $__shadow_95_dom_95_strategy__.__esModule && $__shadow_95_dom_95_strategy__ || {default: $__shadow_95_dom_95_strategy__}).ShadowDomStrategy;
    var ShadowDomCompileStep = function ShadowDomCompileStep(shadowDomStrategy, template, subTaskPromises) {
      $traceurRuntime.superConstructor($ShadowDomCompileStep).call(this);
      this._shadowDomStrategy = shadowDomStrategy;
      this._template = template;
      this._subTaskPromises = subTaskPromises;
    };
    var $ShadowDomCompileStep = ShadowDomCompileStep;
    ($traceurRuntime.createClass)(ShadowDomCompileStep, {
      process: function(parent, current, control) {
        var tagName = DOM.tagName(current.element).toUpperCase();
        if (tagName == 'STYLE') {
          this._processStyleElement(current, control);
        } else if (tagName == 'CONTENT') {
          this._processContentElement(current);
        } else {
          var componentId = current.isBound() ? current.inheritedElementBinder.componentId : null;
          this._shadowDomStrategy.processElement(this._template.componentId, componentId, current.element);
        }
      },
      _processStyleElement: function(current, control) {
        var stylePromise = this._shadowDomStrategy.processStyleElement(this._template.componentId, this._template.absUrl, current.element);
        if (isPresent(stylePromise) && PromiseWrapper.isPromise(stylePromise)) {
          ListWrapper.push(this._subTaskPromises, stylePromise);
        }
        control.ignoreCurrentElement();
      },
      _processContentElement: function(current) {
        if (this._shadowDomStrategy.hasNativeContentElement()) {
          return ;
        }
        var attrs = current.attrs();
        var selector = MapWrapper.get(attrs, 'select');
        selector = isPresent(selector) ? selector : '';
        var contentStart = DOM.createScriptTag('type', 'ng/contentStart');
        if (assertionsEnabled()) {
          DOM.setAttribute(contentStart, 'select', selector);
        }
        var contentEnd = DOM.createScriptTag('type', 'ng/contentEnd');
        DOM.insertBefore(current.element, contentStart);
        DOM.insertBefore(current.element, contentEnd);
        DOM.remove(current.element);
        current.element = contentStart;
        current.bindElement().setContentTagSelector(selector);
      }
    }, {}, CompileStep);
    Object.defineProperty(ShadowDomCompileStep, "parameters", {get: function() {
        return [[ShadowDomStrategy], [ViewDefinition], [$traceurRuntime.genericType(List, Promise)]];
      }});
    Object.defineProperty(ShadowDomCompileStep.prototype.process, "parameters", {get: function() {
        return [[CompileElement], [CompileElement], [CompileControl]];
      }});
    Object.defineProperty(ShadowDomCompileStep.prototype._processStyleElement, "parameters", {get: function() {
        return [[CompileElement], [CompileControl]];
      }});
    Object.defineProperty(ShadowDomCompileStep.prototype._processContentElement, "parameters", {get: function() {
        return [[CompileElement]];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/application_tokens", ["npm:angular2@2.0.0-alpha.24/di"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    appComponentRefToken: {get: function() {
        return appComponentRefToken;
      }},
    appComponentTypeToken: {get: function() {
        return appComponentTypeToken;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_di__;
  var OpaqueToken = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}).OpaqueToken;
  var appComponentRefToken = new OpaqueToken('ComponentRef');
  var appComponentTypeToken = new OpaqueToken('RootComponent');
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations/di", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/di"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    QueryAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_di__.Query;
      }},
    AttributeAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_di__.Attribute;
      }},
    __esModule: {value: true}
  });
  var $___46__46__47_annotations_95_impl_47_di__;
  var $___46__46__47_annotations_95_impl_47_di__ = ($___46__46__47_annotations_95_impl_47_di__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/di"), $___46__46__47_annotations_95_impl_47_di__ && $___46__46__47_annotations_95_impl_47_di__.__esModule && $___46__46__47_annotations_95_impl_47_di__ || {default: $___46__46__47_annotations_95_impl_47_di__});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/native_shadow_dom_strategy", ["npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      NativeShadowDomStrategy: {get: function() {
          return NativeShadowDomStrategy;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_async__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $__style_95_url_95_resolver__,
        $__shadow_95_dom_95_strategy__;
    var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var StyleUrlResolver = ($__style_95_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver"), $__style_95_url_95_resolver__ && $__style_95_url_95_resolver__.__esModule && $__style_95_url_95_resolver__ || {default: $__style_95_url_95_resolver__}).StyleUrlResolver;
    var ShadowDomStrategy = ($__shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $__shadow_95_dom_95_strategy__ && $__shadow_95_dom_95_strategy__.__esModule && $__shadow_95_dom_95_strategy__ || {default: $__shadow_95_dom_95_strategy__}).ShadowDomStrategy;
    var NativeShadowDomStrategy = function NativeShadowDomStrategy(styleUrlResolver) {
      $traceurRuntime.superConstructor($NativeShadowDomStrategy).call(this);
      this.styleUrlResolver = styleUrlResolver;
    };
    var $NativeShadowDomStrategy = NativeShadowDomStrategy;
    ($traceurRuntime.createClass)(NativeShadowDomStrategy, {
      prepareShadowRoot: function(el) {
        return DOM.createShadowRoot(el);
      },
      processStyleElement: function(hostComponentId, templateUrl, styleEl) {
        var cssText = DOM.getText(styleEl);
        cssText = this.styleUrlResolver.resolveUrls(cssText, templateUrl);
        DOM.setText(styleEl, cssText);
        return null;
      }
    }, {}, ShadowDomStrategy);
    Object.defineProperty(NativeShadowDomStrategy, "parameters", {get: function() {
        return [[StyleUrlResolver]];
      }});
    Object.defineProperty(NativeShadowDomStrategy.prototype.processStyleElement, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], []];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_inliner", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/util", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      EmulatedScopedShadowDomStrategy: {get: function() {
          return EmulatedScopedShadowDomStrategy;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_facade_47_async__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__,
        $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__,
        $__emulated_95_unscoped_95_shadow_95_dom_95_strategy__,
        $__util__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isBlank = $__0.isBlank,
        isPresent = $__0.isPresent;
    var $__1 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
        PromiseWrapper = $__1.PromiseWrapper,
        Promise = $__1.Promise;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var StyleInliner = ($__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_inliner"), $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__ && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__.__esModule && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__ || {default: $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__}).StyleInliner;
    var StyleUrlResolver = ($__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver"), $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__ && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__.__esModule && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__ || {default: $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__}).StyleUrlResolver;
    var EmulatedUnscopedShadowDomStrategy = ($__emulated_95_unscoped_95_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy"), $__emulated_95_unscoped_95_shadow_95_dom_95_strategy__ && $__emulated_95_unscoped_95_shadow_95_dom_95_strategy__.__esModule && $__emulated_95_unscoped_95_shadow_95_dom_95_strategy__ || {default: $__emulated_95_unscoped_95_shadow_95_dom_95_strategy__}).EmulatedUnscopedShadowDomStrategy;
    var $__6 = ($__util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/util"), $__util__ && $__util__.__esModule && $__util__ || {default: $__util__}),
        getContentAttribute = $__6.getContentAttribute,
        getHostAttribute = $__6.getHostAttribute,
        getComponentId = $__6.getComponentId,
        shimCssForComponent = $__6.shimCssForComponent,
        insertStyleElement = $__6.insertStyleElement;
    var EmulatedScopedShadowDomStrategy = function EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost) {
      $traceurRuntime.superConstructor($EmulatedScopedShadowDomStrategy).call(this, styleUrlResolver, styleHost);
      this.styleInliner = styleInliner;
    };
    var $EmulatedScopedShadowDomStrategy = EmulatedScopedShadowDomStrategy;
    ($traceurRuntime.createClass)(EmulatedScopedShadowDomStrategy, {
      processStyleElement: function(hostComponentId, templateUrl, styleEl) {
        var cssText = DOM.getText(styleEl);
        cssText = this.styleUrlResolver.resolveUrls(cssText, templateUrl);
        var css = this.styleInliner.inlineImports(cssText, templateUrl);
        if (PromiseWrapper.isPromise(css)) {
          DOM.setText(styleEl, '');
          return css.then((function(css) {
            css = shimCssForComponent(css, hostComponentId);
            DOM.setText(styleEl, css);
          }));
        } else {
          css = shimCssForComponent(css, hostComponentId);
          DOM.setText(styleEl, css);
        }
        DOM.remove(styleEl);
        insertStyleElement(this.styleHost, styleEl);
        return null;
      },
      processElement: function(hostComponentId, elementComponentId, element) {
        if (isPresent(hostComponentId)) {
          var contentAttribute = getContentAttribute(getComponentId(hostComponentId));
          DOM.setAttribute(element, contentAttribute, '');
        }
        if (isPresent(elementComponentId)) {
          var hostAttribute = getHostAttribute(getComponentId(elementComponentId));
          DOM.setAttribute(element, hostAttribute, '');
        }
      }
    }, {}, EmulatedUnscopedShadowDomStrategy);
    Object.defineProperty(EmulatedScopedShadowDomStrategy, "parameters", {get: function() {
        return [[StyleInliner], [StyleUrlResolver], []];
      }});
    Object.defineProperty(EmulatedScopedShadowDomStrategy.prototype.processStyleElement, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], []];
      }});
    Object.defineProperty(EmulatedScopedShadowDomStrategy.prototype.processElement, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], []];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations/annotations", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ComponentAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_annotations__.Component;
      }},
    DirectiveAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_annotations__.Directive;
      }},
    onDestroy: {get: function() {
        return $___46__46__47_annotations_95_impl_47_annotations__.onDestroy;
      }},
    onChange: {get: function() {
        return $___46__46__47_annotations_95_impl_47_annotations__.onChange;
      }},
    onAllChangesDone: {get: function() {
        return $___46__46__47_annotations_95_impl_47_annotations__.onAllChangesDone;
      }},
    __esModule: {value: true}
  });
  var $___46__46__47_annotations_95_impl_47_annotations__;
  var $___46__46__47_annotations_95_impl_47_annotations__ = ($___46__46__47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $___46__46__47_annotations_95_impl_47_annotations__ && $___46__46__47_annotations_95_impl_47_annotations__.__esModule && $___46__46__47_annotations_95_impl_47_annotations__ || {default: $___46__46__47_annotations_95_impl_47_annotations__});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations/decorators", ["npm:angular2@2.0.0-alpha.24/src/core/annotations/annotations", "npm:angular2@2.0.0-alpha.24/src/core/annotations/view", "npm:angular2@2.0.0-alpha.24/src/core/annotations/visibility", "npm:angular2@2.0.0-alpha.24/src/core/annotations/di", "npm:angular2@2.0.0-alpha.24/src/util/decorators"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Component: {get: function() {
        return Component;
      }},
    Directive: {get: function() {
        return Directive;
      }},
    View: {get: function() {
        return View;
      }},
    Ancestor: {get: function() {
        return Ancestor;
      }},
    Parent: {get: function() {
        return Parent;
      }},
    Attribute: {get: function() {
        return Attribute;
      }},
    Query: {get: function() {
        return Query;
      }},
    __esModule: {value: true}
  });
  var $__annotations__,
      $__view__,
      $__visibility__,
      $__di__,
      $___46__46__47__46__46__47_util_47_decorators__;
  var $__0 = ($__annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/annotations"), $__annotations__ && $__annotations__.__esModule && $__annotations__ || {default: $__annotations__}),
      ComponentAnnotation = $__0.ComponentAnnotation,
      DirectiveAnnotation = $__0.DirectiveAnnotation;
  var ViewAnnotation = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__}).ViewAnnotation;
  var $__2 = ($__visibility__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/visibility"), $__visibility__ && $__visibility__.__esModule && $__visibility__ || {default: $__visibility__}),
      AncestorAnnotation = $__2.AncestorAnnotation,
      ParentAnnotation = $__2.ParentAnnotation;
  var $__3 = ($__di__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/di"), $__di__ && $__di__.__esModule && $__di__ || {default: $__di__}),
      AttributeAnnotation = $__3.AttributeAnnotation,
      QueryAnnotation = $__3.QueryAnnotation;
  var $__4 = ($___46__46__47__46__46__47_util_47_decorators__ = require("npm:angular2@2.0.0-alpha.24/src/util/decorators"), $___46__46__47__46__46__47_util_47_decorators__ && $___46__46__47__46__46__47_util_47_decorators__.__esModule && $___46__46__47__46__46__47_util_47_decorators__ || {default: $___46__46__47__46__46__47_util_47_decorators__}),
      makeDecorator = $__4.makeDecorator,
      makeParamDecorator = $__4.makeParamDecorator;
  var Component = makeDecorator(ComponentAnnotation);
  var Directive = makeDecorator(DirectiveAnnotation);
  var View = makeDecorator(ViewAnnotation);
  var Ancestor = makeParamDecorator(AncestorAnnotation);
  var Parent = makeParamDecorator(ParentAnnotation);
  var Attribute = makeParamDecorator(AttributeAnnotation);
  var Query = makeParamDecorator(QueryAnnotation);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/directives/ng_for", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    NgFor: {get: function() {
        return NgFor;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_ref__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var ViewContainerRef = ($__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__}).ViewContainerRef;
  var $__2 = ($__angular2_47_src_47_core_47_compiler_47_view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_ref__}),
      ViewRef = $__2.ViewRef,
      ProtoViewRef = $__2.ProtoViewRef;
  var $__3 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__3.isPresent,
      isBlank = $__3.isBlank;
  var ListWrapper = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).ListWrapper;
  var NgFor = function NgFor(viewContainer, protoViewRef) {
    this.viewContainer = viewContainer;
    this.protoViewRef = protoViewRef;
  };
  var $NgFor = NgFor;
  ($traceurRuntime.createClass)(NgFor, {
    set iterableChanges(changes) {
      if (isBlank(changes)) {
        this.viewContainer.clear();
        return ;
      }
      var recordViewTuples = [];
      changes.forEachRemovedItem((function(removedRecord) {
        return ListWrapper.push(recordViewTuples, new RecordViewTuple(removedRecord, null));
      }));
      changes.forEachMovedItem((function(movedRecord) {
        return ListWrapper.push(recordViewTuples, new RecordViewTuple(movedRecord, null));
      }));
      var insertTuples = $NgFor.bulkRemove(recordViewTuples, this.viewContainer);
      changes.forEachAddedItem((function(addedRecord) {
        return ListWrapper.push(insertTuples, new RecordViewTuple(addedRecord, null));
      }));
      $NgFor.bulkInsert(insertTuples, this.viewContainer, this.protoViewRef);
      for (var i = 0; i < insertTuples.length; i++) {
        this.perViewChange(insertTuples[i].view, insertTuples[i].record);
      }
    },
    perViewChange: function(view, record) {
      view.setLocal('\$implicit', record.item);
      view.setLocal('index', record.currentIndex);
    }
  }, {
    bulkRemove: function(tuples, viewContainer) {
      tuples.sort((function(a, b) {
        return a.record.previousIndex - b.record.previousIndex;
      }));
      var movedTuples = [];
      for (var i = tuples.length - 1; i >= 0; i--) {
        var tuple = tuples[i];
        if (isPresent(tuple.record.currentIndex)) {
          tuple.view = viewContainer.detach(tuple.record.previousIndex);
          ListWrapper.push(movedTuples, tuple);
        } else {
          viewContainer.remove(tuple.record.previousIndex);
        }
      }
      return movedTuples;
    },
    bulkInsert: function(tuples, viewContainer, protoViewRef) {
      tuples.sort((function(a, b) {
        return a.record.currentIndex - b.record.currentIndex;
      }));
      for (var i = 0; i < tuples.length; i++) {
        var tuple = tuples[i];
        if (isPresent(tuple.view)) {
          viewContainer.insert(tuple.view, tuple.record.currentIndex);
        } else {
          tuple.view = viewContainer.create(protoViewRef, tuple.record.currentIndex);
        }
      }
      return tuples;
    }
  });
  Object.defineProperty(NgFor, "annotations", {get: function() {
      return [new Directive({
        selector: '[ng-for][ng-for-of]',
        properties: {'iterableChanges': 'ngForOf | iterableDiff'}
      })];
    }});
  Object.defineProperty(NgFor, "parameters", {get: function() {
      return [[ViewContainerRef], [ProtoViewRef]];
    }});
  var RecordViewTuple = function RecordViewTuple(record, view) {
    this.record = record;
    this.view = view;
  };
  ($traceurRuntime.createClass)(RecordViewTuple, {}, {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/directives/ng_if", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    NgIf: {get: function() {
        return NgIf;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_ref__,
      $__angular2_47_src_47_facade_47_lang__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var ViewContainerRef = ($__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__}).ViewContainerRef;
  var ProtoViewRef = ($__angular2_47_src_47_core_47_compiler_47_view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_ref__}).ProtoViewRef;
  var isBlank = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isBlank;
  var NgIf = function NgIf(viewContainer, protoViewRef) {
    this.viewContainer = viewContainer;
    this.prevCondition = null;
    this.protoViewRef = protoViewRef;
  };
  ($traceurRuntime.createClass)(NgIf, {set ngIf(newCondition) {
      if (newCondition && (isBlank(this.prevCondition) || !this.prevCondition)) {
        this.prevCondition = true;
        this.viewContainer.create(this.protoViewRef);
      } else if (!newCondition && (isBlank(this.prevCondition) || this.prevCondition)) {
        this.prevCondition = false;
        this.viewContainer.clear();
      }
    }}, {});
  Object.defineProperty(NgIf, "annotations", {get: function() {
      return [new Directive({
        selector: '[ng-if]',
        properties: {'ngIf': 'ngIf'}
      })];
    }});
  Object.defineProperty(NgIf, "parameters", {get: function() {
      return [[ViewContainerRef], [ProtoViewRef]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/directives/ng_non_bindable", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    NgNonBindable: {get: function() {
        return NgNonBindable;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var NgNonBindable = function NgNonBindable() {
    ;
  };
  ($traceurRuntime.createClass)(NgNonBindable, {}, {});
  Object.defineProperty(NgNonBindable, "annotations", {get: function() {
      return [new Directive({
        selector: '[ng-non-bindable]',
        compileChildren: false
      })];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/directives/ng_switch", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    NgSwitch: {get: function() {
        return NgSwitch;
      }},
    NgSwitchWhen: {get: function() {
        return NgSwitchWhen;
      }},
    NgSwitchDefault: {get: function() {
        return NgSwitchDefault;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_ref__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var ViewContainerRef = ($__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_container_95_ref__}).ViewContainerRef;
  var ProtoViewRef = ($__angular2_47_src_47_core_47_compiler_47_view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_ref__}).ProtoViewRef;
  var $__3 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__3.isPresent,
      isBlank = $__3.isBlank,
      normalizeBlank = $__3.normalizeBlank;
  var $__4 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__4.ListWrapper,
      List = $__4.List,
      MapWrapper = $__4.MapWrapper,
      Map = $__4.Map;
  var Parent = ($__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility"), $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__}).Parent;
  var SwitchView = function SwitchView(viewContainerRef, protoViewRef) {
    this._protoViewRef = protoViewRef;
    this._viewContainerRef = viewContainerRef;
  };
  ($traceurRuntime.createClass)(SwitchView, {
    create: function() {
      this._viewContainerRef.create(this._protoViewRef);
    },
    destroy: function() {
      this._viewContainerRef.clear();
    }
  }, {});
  Object.defineProperty(SwitchView, "parameters", {get: function() {
      return [[ViewContainerRef], [ProtoViewRef]];
    }});
  var NgSwitch = function NgSwitch() {
    this._valueViews = MapWrapper.create();
    this._activeViews = ListWrapper.create();
    this._useDefault = false;
  };
  ($traceurRuntime.createClass)(NgSwitch, {
    set ngSwitch(value) {
      this._emptyAllActiveViews();
      this._useDefault = false;
      var views = MapWrapper.get(this._valueViews, value);
      if (isBlank(views)) {
        this._useDefault = true;
        views = normalizeBlank(MapWrapper.get(this._valueViews, _whenDefault));
      }
      this._activateViews(views);
      this._switchValue = value;
    },
    _onWhenValueChanged: function(oldWhen, newWhen, view) {
      this._deregisterView(oldWhen, view);
      this._registerView(newWhen, view);
      if (oldWhen === this._switchValue) {
        view.destroy();
        ListWrapper.remove(this._activeViews, view);
      } else if (newWhen === this._switchValue) {
        if (this._useDefault) {
          this._useDefault = false;
          this._emptyAllActiveViews();
        }
        view.create();
        ListWrapper.push(this._activeViews, view);
      }
      if (this._activeViews.length === 0 && !this._useDefault) {
        this._useDefault = true;
        this._activateViews(MapWrapper.get(this._valueViews, _whenDefault));
      }
    },
    _emptyAllActiveViews: function() {
      var activeContainers = this._activeViews;
      for (var i = 0; i < activeContainers.length; i++) {
        activeContainers[i].destroy();
      }
      this._activeViews = ListWrapper.create();
    },
    _activateViews: function(views) {
      if (isPresent(views)) {
        for (var i = 0; i < views.length; i++) {
          views[i].create();
        }
        this._activeViews = views;
      }
    },
    _registerView: function(value, view) {
      var views = MapWrapper.get(this._valueViews, value);
      if (isBlank(views)) {
        views = ListWrapper.create();
        MapWrapper.set(this._valueViews, value, views);
      }
      ListWrapper.push(views, view);
    },
    _deregisterView: function(value, view) {
      if (value == _whenDefault)
        return ;
      var views = MapWrapper.get(this._valueViews, value);
      if (views.length == 1) {
        MapWrapper.delete(this._valueViews, value);
      } else {
        ListWrapper.remove(views, view);
      }
    }
  }, {});
  Object.defineProperty(NgSwitch, "annotations", {get: function() {
      return [new Directive({
        selector: '[ng-switch]',
        properties: {'ngSwitch': 'ngSwitch'}
      })];
    }});
  Object.defineProperty(NgSwitch.prototype._onWhenValueChanged, "parameters", {get: function() {
      return [[], [], [SwitchView]];
    }});
  Object.defineProperty(NgSwitch.prototype._activateViews, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, SwitchView)]];
    }});
  Object.defineProperty(NgSwitch.prototype._registerView, "parameters", {get: function() {
      return [[], [SwitchView]];
    }});
  Object.defineProperty(NgSwitch.prototype._deregisterView, "parameters", {get: function() {
      return [[], [SwitchView]];
    }});
  var NgSwitchWhen = function NgSwitchWhen(viewContainer, protoViewRef, sswitch) {
    this._value = _whenDefault;
    this._switch = sswitch;
    this._view = new SwitchView(viewContainer, protoViewRef);
  };
  ($traceurRuntime.createClass)(NgSwitchWhen, {
    onDestroy: function() {
      this._switch;
    },
    set ngSwitchWhen(value) {
      this._switch._onWhenValueChanged(this._value, value, this._view);
      this._value = value;
    }
  }, {});
  Object.defineProperty(NgSwitchWhen, "annotations", {get: function() {
      return [new Directive({
        selector: '[ng-switch-when]',
        properties: {'ngSwitchWhen': 'ngSwitchWhen'}
      })];
    }});
  Object.defineProperty(NgSwitchWhen, "parameters", {get: function() {
      return [[ViewContainerRef], [ProtoViewRef], [NgSwitch, new Parent()]];
    }});
  var NgSwitchDefault = function NgSwitchDefault(viewContainer, protoViewRef, sswitch) {
    sswitch._registerView(_whenDefault, new SwitchView(viewContainer, protoViewRef));
  };
  ($traceurRuntime.createClass)(NgSwitchDefault, {}, {});
  Object.defineProperty(NgSwitchDefault, "annotations", {get: function() {
      return [new Directive({selector: '[ng-switch-default]'})];
    }});
  Object.defineProperty(NgSwitchDefault, "parameters", {get: function() {
      return [[ViewContainerRef], [ProtoViewRef], [NgSwitch, new Parent()]];
    }});
  var _whenDefault = new Object();
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/directives/class", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    CSSClass: {get: function() {
        return CSSClass;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_core_47_compiler_47_element_95_ref__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var ElementRef = ($__angular2_47_src_47_core_47_compiler_47_element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__angular2_47_src_47_core_47_compiler_47_element_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_element_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_element_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_element_95_ref__}).ElementRef;
  var CSSClass = function CSSClass(ngEl) {
    this._domEl = ngEl.domElement;
  };
  ($traceurRuntime.createClass)(CSSClass, {
    _toggleClass: function(className, enabled) {
      if (enabled) {
        DOM.addClass(this._domEl, className);
      } else {
        DOM.removeClass(this._domEl, className);
      }
    },
    set iterableChanges(changes) {
      var $__4 = this;
      if (isPresent(changes)) {
        changes.forEachAddedItem((function(record) {
          $__4._toggleClass(record.key, record.currentValue);
        }));
        changes.forEachChangedItem((function(record) {
          $__4._toggleClass(record.key, record.currentValue);
        }));
        changes.forEachRemovedItem((function(record) {
          if (record.previousValue) {
            DOM.removeClass($__4._domEl, record.key);
          }
        }));
      }
    }
  }, {});
  Object.defineProperty(CSSClass, "annotations", {get: function() {
      return [new Directive({
        selector: '[class]',
        properties: {'iterableChanges': 'class | keyValDiff'}
      })];
    }});
  Object.defineProperty(CSSClass, "parameters", {get: function() {
      return [[ElementRef]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/forms/validators", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/forms/model"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Validators: {get: function() {
        return Validators;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__model__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isBlank = $__0.isBlank,
      isPresent = $__0.isPresent;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__1.List,
      ListWrapper = $__1.ListWrapper,
      StringMapWrapper = $__1.StringMapWrapper;
  var modelModule = ($__model__ = require("npm:angular2@2.0.0-alpha.24/src/forms/model"), $__model__ && $__model__.__esModule && $__model__ || {default: $__model__});
  var Validators = function Validators() {
    ;
  };
  var $Validators = Validators;
  ($traceurRuntime.createClass)(Validators, {}, {
    required: function(c) {
      return isBlank(c.value) || c.value == "" ? {"required": true} : null;
    },
    nullValidator: function(c) {
      return null;
    },
    compose: function(validators) {
      return function(c) {
        var res = ListWrapper.reduce(validators, (function(res, validator) {
          var errors = validator(c);
          return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;
        }), {});
        return StringMapWrapper.isEmpty(res) ? null : res;
      };
    },
    group: function(c) {
      var res = {};
      StringMapWrapper.forEach(c.controls, (function(control, name) {
        if (c.contains(name) && isPresent(control.errors)) {
          $Validators._mergeErrors(control, res);
        }
      }));
      return StringMapWrapper.isEmpty(res) ? null : res;
    },
    array: function(c) {
      var res = {};
      ListWrapper.forEach(c.controls, (function(control) {
        if (isPresent(control.errors)) {
          $Validators._mergeErrors(control, res);
        }
      }));
      return StringMapWrapper.isEmpty(res) ? null : res;
    },
    _mergeErrors: function(control, res) {
      StringMapWrapper.forEach(control.errors, (function(value, error) {
        if (!StringMapWrapper.contains(res, error)) {
          res[error] = [];
        }
        ListWrapper.push(res[error], control);
      }));
    }
  });
  Object.defineProperty(Validators.required, "parameters", {get: function() {
      return [[modelModule.Control]];
    }});
  Object.defineProperty(Validators.nullValidator, "parameters", {get: function() {
      return [[$traceurRuntime.type.any]];
    }});
  Object.defineProperty(Validators.compose, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, Function)]];
    }});
  Object.defineProperty(Validators.group, "parameters", {get: function() {
      return [[modelModule.ControlGroup]];
    }});
  Object.defineProperty(Validators.array, "parameters", {get: function() {
      return [[modelModule.ControlArray]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/forms/directives", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/forms/model", "npm:angular2@2.0.0-alpha.24/src/forms/validators"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    DefaultValueAccessor: {get: function() {
        return DefaultValueAccessor;
      }},
    CheckboxControlValueAccessor: {get: function() {
        return CheckboxControlValueAccessor;
      }},
    ControlDirective: {get: function() {
        return ControlDirective;
      }},
    ControlGroupDirective: {get: function() {
        return ControlGroupDirective;
      }},
    formDirectives: {get: function() {
        return formDirectives;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__,
      $__angular2_47_src_47_core_47_compiler_47_element_95_ref__,
      $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_render_47_api__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__model__,
      $__validators__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var Ancestor = ($__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility"), $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__}).Ancestor;
  var ElementRef = ($__angular2_47_src_47_core_47_compiler_47_element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__angular2_47_src_47_core_47_compiler_47_element_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_element_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_element_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_element_95_ref__}).ElementRef;
  var Optional = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Optional;
  var Renderer = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}).Renderer;
  var $__5 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__5.isPresent,
      isString = $__5.isString,
      CONST_EXPR = $__5.CONST_EXPR,
      isBlank = $__5.isBlank,
      BaseException = $__5.BaseException;
  var ListWrapper = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).ListWrapper;
  var $__7 = ($__model__ = require("npm:angular2@2.0.0-alpha.24/src/forms/model"), $__model__ && $__model__.__esModule && $__model__ || {default: $__model__}),
      ControlGroup = $__7.ControlGroup,
      Control = $__7.Control,
      isControl = $__7.isControl;
  var Validators = ($__validators__ = require("npm:angular2@2.0.0-alpha.24/src/forms/validators"), $__validators__ && $__validators__.__esModule && $__validators__ || {default: $__validators__}).Validators;
  function _lookupControl(groupDirective, controlOrName) {
    if (isControl(controlOrName)) {
      return controlOrName;
    }
    if (isBlank(groupDirective)) {
      throw new BaseException(("No control group found for \"" + controlOrName + "\""));
    }
    var control = groupDirective.findControl(controlOrName);
    if (isBlank(control)) {
      throw new BaseException(("Cannot find control \"" + controlOrName + "\""));
    }
    return control;
  }
  Object.defineProperty(_lookupControl, "parameters", {get: function() {
      return [[ControlGroupDirective], [$traceurRuntime.type.any]];
    }});
  var DefaultValueAccessor = function DefaultValueAccessor() {
    this.onChange = (function(_) {});
  };
  ($traceurRuntime.createClass)(DefaultValueAccessor, {writeValue: function(value) {
      this.value = value;
    }}, {});
  Object.defineProperty(DefaultValueAccessor, "annotations", {get: function() {
      return [new Directive({
        selector: '[control]',
        hostListeners: {
          'change': 'onChange($event.target.value)',
          'input': 'onChange($event.target.value)'
        },
        hostProperties: {'value': 'value'}
      })];
    }});
  var CheckboxControlValueAccessor = function CheckboxControlValueAccessor(cd, elementRef, renderer) {
    this.onChange = (function(_) {});
    this._elementRef = elementRef;
    this._renderer = renderer;
    cd.valueAccessor = this;
  };
  ($traceurRuntime.createClass)(CheckboxControlValueAccessor, {writeValue: function(value) {
      this._renderer.setElementProperty(this._elementRef.parentView.render, this._elementRef.boundElementIndex, 'checked', value);
    }}, {});
  Object.defineProperty(CheckboxControlValueAccessor, "annotations", {get: function() {
      return [new Directive({
        selector: 'input[type=checkbox][control]',
        hostListeners: {'change': 'onChange($event.target.checked)'},
        hostProperties: {'checked': 'checked'}
      })];
    }});
  Object.defineProperty(CheckboxControlValueAccessor, "parameters", {get: function() {
      return [[ControlDirective], [ElementRef], [Renderer]];
    }});
  var ControlDirective = function ControlDirective(groupDirective, valueAccessor) {
    this._groupDirective = groupDirective;
    this._controlOrName = null;
    this.valueAccessor = valueAccessor;
    this.validator = Validators.nullValidator;
  };
  ($traceurRuntime.createClass)(ControlDirective, {
    set controlOrName(controlOrName) {
      this._controlOrName = controlOrName;
      if (isPresent(this._groupDirective)) {
        this._groupDirective.addDirective(this);
      }
      var c = this._control();
      c.validator = Validators.compose([c.validator, this.validator]);
      this._updateDomValue();
      this._setUpUpdateControlValue();
    },
    _updateDomValue: function() {
      this.valueAccessor.writeValue(this._control().value);
    },
    _setUpUpdateControlValue: function() {
      var $__9 = this;
      this.valueAccessor.onChange = (function(newValue) {
        return $__9._control().updateValue(newValue);
      });
    },
    _control: function() {
      return _lookupControl(this._groupDirective, this._controlOrName);
    }
  }, {});
  Object.defineProperty(ControlDirective, "annotations", {get: function() {
      return [new Directive({
        selector: '[control]',
        properties: {'controlOrName': 'control'}
      })];
    }});
  Object.defineProperty(ControlDirective, "parameters", {get: function() {
      return [[ControlGroupDirective, new Optional(), new Ancestor()], [DefaultValueAccessor]];
    }});
  var ControlGroupDirective = function ControlGroupDirective(groupDirective) {
    this._groupDirective = groupDirective;
    this._directives = ListWrapper.create();
  };
  var $ControlGroupDirective = ControlGroupDirective;
  ($traceurRuntime.createClass)(ControlGroupDirective, {
    set controlOrName(controlOrName) {
      this._controlOrName = controlOrName;
      this._updateDomValue();
    },
    _updateDomValue: function() {
      ListWrapper.forEach(this._directives, (function(cd) {
        return cd._updateDomValue();
      }));
    },
    addDirective: function(c) {
      ListWrapper.push(this._directives, c);
    },
    findControl: function(name) {
      return this._getControlGroup().controls[name];
    },
    _getControlGroup: function() {
      return _lookupControl(this._groupDirective, this._controlOrName);
    }
  }, {});
  Object.defineProperty(ControlGroupDirective, "annotations", {get: function() {
      return [new Directive({
        selector: '[control-group]',
        properties: {'controlOrName': 'control-group'}
      })];
    }});
  Object.defineProperty(ControlGroupDirective, "parameters", {get: function() {
      return [[ControlGroupDirective, new Optional(), new Ancestor()]];
    }});
  Object.defineProperty(ControlGroupDirective.prototype.addDirective, "parameters", {get: function() {
      return [[ControlDirective]];
    }});
  Object.defineProperty(ControlGroupDirective.prototype.findControl, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var formDirectives = CONST_EXPR([ControlGroupDirective, ControlDirective, CheckboxControlValueAccessor, DefaultValueAccessor]);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/forms/validator_directives", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/forms/validators", "npm:angular2@2.0.0-alpha.24/src/forms/directives"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    RequiredValidatorDirective: {get: function() {
        return RequiredValidatorDirective;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__validators__,
      $__directives__;
  var Directive = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}).Directive;
  var Validators = ($__validators__ = require("npm:angular2@2.0.0-alpha.24/src/forms/validators"), $__validators__ && $__validators__.__esModule && $__validators__ || {default: $__validators__}).Validators;
  var ControlDirective = ($__directives__ = require("npm:angular2@2.0.0-alpha.24/src/forms/directives"), $__directives__ && $__directives__.__esModule && $__directives__ || {default: $__directives__}).ControlDirective;
  var RequiredValidatorDirective = function RequiredValidatorDirective(c) {
    c.validator = Validators.compose([c.validator, Validators.required]);
  };
  ($traceurRuntime.createClass)(RequiredValidatorDirective, {}, {});
  Object.defineProperty(RequiredValidatorDirective, "annotations", {get: function() {
      return [new Directive({selector: '[required]'})];
    }});
  Object.defineProperty(RequiredValidatorDirective, "parameters", {get: function() {
      return [[ControlDirective]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/forms/form_builder", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/forms/model"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    FormBuilder: {get: function() {
        return FormBuilder;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__,
      $__model__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      StringMapWrapper = $__0.StringMapWrapper,
      ListWrapper = $__0.ListWrapper,
      List = $__0.List;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var modelModule = ($__model__ = require("npm:angular2@2.0.0-alpha.24/src/forms/model"), $__model__ && $__model__.__esModule && $__model__ || {default: $__model__});
  var FormBuilder = function FormBuilder() {
    ;
  };
  ($traceurRuntime.createClass)(FormBuilder, {
    group: function(controlsConfig) {
      var extra = arguments[1] !== (void 0) ? arguments[1] : null;
      var controls = this._reduceControls(controlsConfig);
      var optionals = isPresent(extra) ? StringMapWrapper.get(extra, "optionals") : null;
      var validator = isPresent(extra) ? StringMapWrapper.get(extra, "validator") : null;
      if (isPresent(validator)) {
        return new modelModule.ControlGroup(controls, optionals, validator);
      } else {
        return new modelModule.ControlGroup(controls, optionals);
      }
    },
    control: function(value) {
      var validator = arguments[1] !== (void 0) ? arguments[1] : null;
      if (isPresent(validator)) {
        return new modelModule.Control(value, validator);
      } else {
        return new modelModule.Control(value);
      }
    },
    array: function(controlsConfig) {
      var validator = arguments[1] !== (void 0) ? arguments[1] : null;
      var $__2 = this;
      var controls = ListWrapper.map(controlsConfig, (function(c) {
        return $__2._createControl(c);
      }));
      if (isPresent(validator)) {
        return new modelModule.ControlArray(controls, validator);
      } else {
        return new modelModule.ControlArray(controls);
      }
    },
    _reduceControls: function(controlsConfig) {
      var $__2 = this;
      var controls = {};
      StringMapWrapper.forEach(controlsConfig, (function(controlConfig, controlName) {
        controls[controlName] = $__2._createControl(controlConfig);
      }));
      return controls;
    },
    _createControl: function(controlConfig) {
      if (controlConfig instanceof modelModule.Control || controlConfig instanceof modelModule.ControlGroup || controlConfig instanceof modelModule.ControlArray) {
        return controlConfig;
      } else if (ListWrapper.isList(controlConfig)) {
        var value = ListWrapper.get(controlConfig, 0);
        var validator = controlConfig.length > 1 ? controlConfig[1] : null;
        return this.control(value, validator);
      } else {
        return this.control(controlConfig);
      }
    }
  }, {});
  Object.defineProperty(FormBuilder.prototype.control, "parameters", {get: function() {
      return [[], [Function]];
    }});
  Object.defineProperty(FormBuilder.prototype.array, "parameters", {get: function() {
      return [[List], [Function]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/facade/collection", ["npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  exports.List = lang_1.global.Array;
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  exports.StringMap = lang_1.global.Object;
  var createMapFromPairs = (function() {
    try {
      if (new exports.Map([1, 2]).size === 2) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  })();
  var MapWrapper = (function() {
    function MapWrapper() {}
    MapWrapper.create = function() {
      return new exports.Map();
    };
    MapWrapper.clone = function(m) {
      return new exports.Map(m);
    };
    MapWrapper.createFromStringMap = function(stringMap) {
      var result = MapWrapper.create();
      for (var prop in stringMap) {
        MapWrapper.set(result, prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.createFromPairs = function(pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.get = function(m, k) {
      return m.get(k);
    };
    MapWrapper.set = function(m, k, v) {
      m.set(k, v);
    };
    MapWrapper.contains = function(m, k) {
      return m.has(k);
    };
    MapWrapper.forEach = function(m, fn) {
      m.forEach(fn);
    };
    MapWrapper.size = function(m) {
      return m.size;
    };
    MapWrapper.delete = function(m, k) {
      m.delete(k);
    };
    MapWrapper.clear = function(m) {
      m.clear();
    };
    MapWrapper.clearValues = function(m) {
      var keyIterator = m.keys();
      var k;
      while (!((k = keyIterator.next()).done)) {
        m.set(k.value, null);
      }
    };
    MapWrapper.iterable = function(m) {
      return m;
    };
    MapWrapper.keys = function(m) {
      return m.keys();
    };
    MapWrapper.values = function(m) {
      return m.values();
    };
    return MapWrapper;
  })();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = (function() {
    function StringMapWrapper() {}
    StringMapWrapper.create = function() {
      return {};
    };
    StringMapWrapper.contains = function(map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function(map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function(map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function(map) {
      return Object.keys(map);
    };
    StringMapWrapper.isEmpty = function(map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function(map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function(map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function(m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function(m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  })();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = (function() {
    function ListWrapper() {}
    ListWrapper.create = function() {
      return new exports.List();
    };
    ListWrapper.createFixedSize = function(size) {
      return new exports.List(size);
    };
    ListWrapper.get = function(m, k) {
      return m[k];
    };
    ListWrapper.set = function(m, k, v) {
      m[k] = v;
    };
    ListWrapper.clone = function(array) {
      return array.slice(0);
    };
    ListWrapper.map = function(array, fn) {
      return array.map(fn);
    };
    ListWrapper.forEach = function(array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i]);
      }
    };
    ListWrapper.push = function(array, el) {
      array.push(el);
    };
    ListWrapper.first = function(array) {
      if (!array)
        return null;
      return array[0];
    };
    ListWrapper.last = function(array) {
      if (!array || array.length == 0)
        return null;
      return array[array.length - 1];
    };
    ListWrapper.find = function(list, pred) {
      for (var i = 0; i < list.length; ++i) {
        if (pred(list[i]))
          return list[i];
      }
      return null;
    };
    ListWrapper.indexOf = function(array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = -1;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.reduce = function(list, fn, init) {
      return list.reduce(fn, init);
    };
    ListWrapper.filter = function(array, pred) {
      return array.filter(pred);
    };
    ListWrapper.any = function(list, pred) {
      for (var i = 0; i < list.length; ++i) {
        if (pred(list[i]))
          return true;
      }
      return false;
    };
    ListWrapper.contains = function(list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function(array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function(a, b) {
      return a.concat(b);
    };
    ListWrapper.isList = function(list) {
      return Array.isArray(list);
    };
    ListWrapper.insert = function(list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function(list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function(list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.removeLast = function(list) {
      return list.pop();
    };
    ListWrapper.remove = function(list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function(list) {
      list.splice(0, list.length);
    };
    ListWrapper.join = function(list, s) {
      return list.join(s);
    };
    ListWrapper.isEmpty = function(list) {
      return list.length == 0;
    };
    ListWrapper.fill = function(list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? undefined : end);
    };
    ListWrapper.equals = function(a, b) {
      if (a.length != b.length)
        return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i])
          return false;
      }
      return true;
    };
    ListWrapper.slice = function(l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function(l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function(l, compareFn) {
      l.sort(compareFn);
    };
    return ListWrapper;
  })();
  exports.ListWrapper = ListWrapper;
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj))
      return false;
    return ListWrapper.isList(obj) || (!(obj instanceof exports.Map) && Symbol.iterator in obj);
  }
  exports.isListLikeIterable = isListLikeIterable;
  function iterateListLike(obj, fn) {
    if (ListWrapper.isList(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[Symbol.iterator]();
      var item;
      while (!((item = iterator.next()).done)) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var SetWrapper = (function() {
    function SetWrapper() {}
    SetWrapper.createFromList = function(lst) {
      return new exports.Set(lst);
    };
    SetWrapper.has = function(s, key) {
      return s.has(key);
    };
    return SetWrapper;
  })();
  exports.SetWrapper = SetWrapper;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/annotations", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var annotations_impl_1 = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl");
  exports.InjectAnnotation = annotations_impl_1.Inject;
  exports.InjectPromiseAnnotation = annotations_impl_1.InjectPromise;
  exports.InjectLazyAnnotation = annotations_impl_1.InjectLazy;
  exports.OptionalAnnotation = annotations_impl_1.Optional;
  exports.InjectableAnnotation = annotations_impl_1.Injectable;
  exports.DependencyAnnotation = annotations_impl_1.DependencyAnnotation;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/reflection/reflector", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/reflection/types"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var types_1 = require("npm:angular2@2.0.0-alpha.24/src/reflection/types");
  exports.SetterFn = types_1.SetterFn;
  exports.GetterFn = types_1.GetterFn;
  exports.MethodFn = types_1.MethodFn;
  exports.__esModule = true;
  var Reflector = (function() {
    function Reflector(reflectionCapabilities) {
      this._typeInfo = collection_1.MapWrapper.create();
      this._getters = collection_1.MapWrapper.create();
      this._setters = collection_1.MapWrapper.create();
      this._methods = collection_1.MapWrapper.create();
      this.reflectionCapabilities = reflectionCapabilities;
    }
    Reflector.prototype.registerType = function(type, typeInfo) {
      collection_1.MapWrapper.set(this._typeInfo, type, typeInfo);
    };
    Reflector.prototype.registerGetters = function(getters) {
      _mergeMaps(this._getters, getters);
    };
    Reflector.prototype.registerSetters = function(setters) {
      _mergeMaps(this._setters, setters);
    };
    Reflector.prototype.registerMethods = function(methods) {
      _mergeMaps(this._methods, methods);
    };
    Reflector.prototype.factory = function(type) {
      if (collection_1.MapWrapper.contains(this._typeInfo, type)) {
        return collection_1.MapWrapper.get(this._typeInfo, type)["factory"];
      } else {
        return this.reflectionCapabilities.factory(type);
      }
    };
    Reflector.prototype.parameters = function(typeOfFunc) {
      if (collection_1.MapWrapper.contains(this._typeInfo, typeOfFunc)) {
        return collection_1.MapWrapper.get(this._typeInfo, typeOfFunc)["parameters"];
      } else {
        return this.reflectionCapabilities.parameters(typeOfFunc);
      }
    };
    Reflector.prototype.annotations = function(typeOfFunc) {
      if (collection_1.MapWrapper.contains(this._typeInfo, typeOfFunc)) {
        return collection_1.MapWrapper.get(this._typeInfo, typeOfFunc)["annotations"];
      } else {
        return this.reflectionCapabilities.annotations(typeOfFunc);
      }
    };
    Reflector.prototype.getter = function(name) {
      if (collection_1.MapWrapper.contains(this._getters, name)) {
        return collection_1.MapWrapper.get(this._getters, name);
      } else {
        return this.reflectionCapabilities.getter(name);
      }
    };
    Reflector.prototype.setter = function(name) {
      if (collection_1.MapWrapper.contains(this._setters, name)) {
        return collection_1.MapWrapper.get(this._setters, name);
      } else {
        return this.reflectionCapabilities.setter(name);
      }
    };
    Reflector.prototype.method = function(name) {
      if (collection_1.MapWrapper.contains(this._methods, name)) {
        return collection_1.MapWrapper.get(this._methods, name);
      } else {
        return this.reflectionCapabilities.method(name);
      }
    };
    return Reflector;
  })();
  exports.Reflector = Reflector;
  function _mergeMaps(target, config) {
    collection_1.StringMapWrapper.forEach(config, function(v, k) {
      return collection_1.MapWrapper.set(target, k, v);
    });
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/constants"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var exceptions_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  var constants_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/constants");
  exports.__esModule = true;
  exports.uninitialized = new Object();
  var SimpleChange = (function() {
    function SimpleChange(previousValue, currentValue) {
      this.previousValue = previousValue;
      this.currentValue = currentValue;
    }
    return SimpleChange;
  })();
  exports.SimpleChange = SimpleChange;
  var _simpleChangesIndex = 0;
  var _simpleChanges = [new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null)];
  function _simpleChange(previousValue, currentValue) {
    var index = _simpleChangesIndex++ % 20;
    var s = _simpleChanges[index];
    s.previousValue = previousValue;
    s.currentValue = currentValue;
    return s;
  }
  var ChangeDetectionUtil = (function() {
    function ChangeDetectionUtil() {}
    ChangeDetectionUtil.uninitialized = function() {
      return exports.uninitialized;
    };
    ChangeDetectionUtil.arrayFn0 = function() {
      return [];
    };
    ChangeDetectionUtil.arrayFn1 = function(a1) {
      return [a1];
    };
    ChangeDetectionUtil.arrayFn2 = function(a1, a2) {
      return [a1, a2];
    };
    ChangeDetectionUtil.arrayFn3 = function(a1, a2, a3) {
      return [a1, a2, a3];
    };
    ChangeDetectionUtil.arrayFn4 = function(a1, a2, a3, a4) {
      return [a1, a2, a3, a4];
    };
    ChangeDetectionUtil.arrayFn5 = function(a1, a2, a3, a4, a5) {
      return [a1, a2, a3, a4, a5];
    };
    ChangeDetectionUtil.arrayFn6 = function(a1, a2, a3, a4, a5, a6) {
      return [a1, a2, a3, a4, a5, a6];
    };
    ChangeDetectionUtil.arrayFn7 = function(a1, a2, a3, a4, a5, a6, a7) {
      return [a1, a2, a3, a4, a5, a6, a7];
    };
    ChangeDetectionUtil.arrayFn8 = function(a1, a2, a3, a4, a5, a6, a7, a8) {
      return [a1, a2, a3, a4, a5, a6, a7, a8];
    };
    ChangeDetectionUtil.arrayFn9 = function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
      return [a1, a2, a3, a4, a5, a6, a7, a8, a9];
    };
    ChangeDetectionUtil.operation_negate = function(value) {
      return !value;
    };
    ChangeDetectionUtil.operation_add = function(left, right) {
      return left + right;
    };
    ChangeDetectionUtil.operation_subtract = function(left, right) {
      return left - right;
    };
    ChangeDetectionUtil.operation_multiply = function(left, right) {
      return left * right;
    };
    ChangeDetectionUtil.operation_divide = function(left, right) {
      return left / right;
    };
    ChangeDetectionUtil.operation_remainder = function(left, right) {
      return left % right;
    };
    ChangeDetectionUtil.operation_equals = function(left, right) {
      return left == right;
    };
    ChangeDetectionUtil.operation_not_equals = function(left, right) {
      return left != right;
    };
    ChangeDetectionUtil.operation_less_then = function(left, right) {
      return left < right;
    };
    ChangeDetectionUtil.operation_greater_then = function(left, right) {
      return left > right;
    };
    ChangeDetectionUtil.operation_less_or_equals_then = function(left, right) {
      return left <= right;
    };
    ChangeDetectionUtil.operation_greater_or_equals_then = function(left, right) {
      return left >= right;
    };
    ChangeDetectionUtil.operation_logical_and = function(left, right) {
      return left && right;
    };
    ChangeDetectionUtil.operation_logical_or = function(left, right) {
      return left || right;
    };
    ChangeDetectionUtil.cond = function(cond, trueVal, falseVal) {
      return cond ? trueVal : falseVal;
    };
    ChangeDetectionUtil.mapFn = function(keys) {
      function buildMap(values) {
        var res = collection_1.StringMapWrapper.create();
        for (var i = 0; i < keys.length; ++i) {
          collection_1.StringMapWrapper.set(res, keys[i], values[i]);
        }
        return res;
      }
      switch (keys.length) {
        case 0:
          return function() {
            return [];
          };
        case 1:
          return function(a1) {
            return buildMap([a1]);
          };
        case 2:
          return function(a1, a2) {
            return buildMap([a1, a2]);
          };
        case 3:
          return function(a1, a2, a3) {
            return buildMap([a1, a2, a3]);
          };
        case 4:
          return function(a1, a2, a3, a4) {
            return buildMap([a1, a2, a3, a4]);
          };
        case 5:
          return function(a1, a2, a3, a4, a5) {
            return buildMap([a1, a2, a3, a4, a5]);
          };
        case 6:
          return function(a1, a2, a3, a4, a5, a6) {
            return buildMap([a1, a2, a3, a4, a5, a6]);
          };
        case 7:
          return function(a1, a2, a3, a4, a5, a6, a7) {
            return buildMap([a1, a2, a3, a4, a5, a6, a7]);
          };
        case 8:
          return function(a1, a2, a3, a4, a5, a6, a7, a8) {
            return buildMap([a1, a2, a3, a4, a5, a6, a7, a8]);
          };
        case 9:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
            return buildMap([a1, a2, a3, a4, a5, a6, a7, a8, a9]);
          };
        default:
          throw new lang_1.BaseException("Does not support literal maps with more than 9 elements");
      }
    };
    ChangeDetectionUtil.keyedAccess = function(obj, args) {
      return obj[args[0]];
    };
    ChangeDetectionUtil.unwrapValue = function(value) {
      if (value instanceof pipe_1.WrappedValue) {
        return value.wrapped;
      } else {
        return value;
      }
    };
    ChangeDetectionUtil.throwOnChange = function(proto, change) {
      throw new exceptions_1.ExpressionChangedAfterItHasBeenChecked(proto, change);
    };
    ChangeDetectionUtil.changeDetectionMode = function(strategy) {
      return strategy == constants_1.ON_PUSH ? constants_1.CHECK_ONCE : constants_1.CHECK_ALWAYS;
    };
    ChangeDetectionUtil.simpleChange = function(previousValue, currentValue) {
      return _simpleChange(previousValue, currentValue);
    };
    ChangeDetectionUtil.addChange = function(changes, propertyName, change) {
      if (lang_1.isBlank(changes)) {
        changes = {};
      }
      changes[propertyName] = change;
      return changes;
    };
    return ChangeDetectionUtil;
  })();
  exports.ChangeDetectionUtil = ChangeDetectionUtil;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/abstract_change_detector", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detector_ref", "npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces", "npm:angular2@2.0.0-alpha.24/src/change_detection/constants"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var change_detector_ref_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detector_ref");
  var interfaces_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces");
  var constants_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/constants");
  exports.__esModule = true;
  var AbstractChangeDetector = (function(_super) {
    __extends(AbstractChangeDetector, _super);
    function AbstractChangeDetector() {
      _super.call(this);
      this.lightDomChildren = [];
      this.shadowDomChildren = [];
      this.ref = new change_detector_ref_1.ChangeDetectorRef(this);
      this.mode = null;
    }
    AbstractChangeDetector.prototype.addChild = function(cd) {
      collection_1.ListWrapper.push(this.lightDomChildren, cd);
      cd.parent = this;
    };
    AbstractChangeDetector.prototype.removeChild = function(cd) {
      collection_1.ListWrapper.remove(this.lightDomChildren, cd);
    };
    AbstractChangeDetector.prototype.addShadowDomChild = function(cd) {
      collection_1.ListWrapper.push(this.shadowDomChildren, cd);
      cd.parent = this;
    };
    AbstractChangeDetector.prototype.removeShadowDomChild = function(cd) {
      collection_1.ListWrapper.remove(this.shadowDomChildren, cd);
    };
    AbstractChangeDetector.prototype.remove = function() {
      this.parent.removeChild(this);
    };
    AbstractChangeDetector.prototype.detectChanges = function() {
      this._detectChanges(false);
    };
    AbstractChangeDetector.prototype.checkNoChanges = function() {
      this._detectChanges(true);
    };
    AbstractChangeDetector.prototype._detectChanges = function(throwOnChange) {
      if (this.mode === constants_1.DETACHED || this.mode === constants_1.CHECKED)
        return ;
      this.detectChangesInRecords(throwOnChange);
      this._detectChangesInLightDomChildren(throwOnChange);
      this.callOnAllChangesDone();
      this._detectChangesInShadowDomChildren(throwOnChange);
      if (this.mode === constants_1.CHECK_ONCE)
        this.mode = constants_1.CHECKED;
    };
    AbstractChangeDetector.prototype.detectChangesInRecords = function(throwOnChange) {};
    AbstractChangeDetector.prototype.callOnAllChangesDone = function() {};
    AbstractChangeDetector.prototype._detectChangesInLightDomChildren = function(throwOnChange) {
      var c = this.lightDomChildren;
      for (var i = 0; i < c.length; ++i) {
        c[i]._detectChanges(throwOnChange);
      }
    };
    AbstractChangeDetector.prototype._detectChangesInShadowDomChildren = function(throwOnChange) {
      var c = this.shadowDomChildren;
      for (var i = 0; i < c.length; ++i) {
        c[i]._detectChanges(throwOnChange);
      }
    };
    AbstractChangeDetector.prototype.markAsCheckOnce = function() {
      this.mode = constants_1.CHECK_ONCE;
    };
    AbstractChangeDetector.prototype.markPathToRootAsCheckOnce = function() {
      var c = this;
      while (lang_1.isPresent(c) && c.mode != constants_1.DETACHED) {
        if (c.mode === constants_1.CHECKED)
          c.mode = constants_1.CHECK_ONCE;
        c = c.parent;
      }
    };
    return AbstractChangeDetector;
  })(interfaces_1.ChangeDetector);
  exports.AbstractChangeDetector = AbstractChangeDetector;
  global.define = __define;
  return module.exports;
});

System.register("npm:process@0.10.1", ["npm:process@0.10.1/browser"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  module.exports = require("npm:process@0.10.1/browser");
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations/visibility", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    AncestorAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_visibility__.Ancestor;
      }},
    ParentAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_visibility__.Parent;
      }},
    __esModule: {value: true}
  });
  var $___46__46__47_annotations_95_impl_47_visibility__;
  var $___46__46__47_annotations_95_impl_47_visibility__ = ($___46__46__47_annotations_95_impl_47_visibility__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility"), $___46__46__47_annotations_95_impl_47_visibility__ && $___46__46__47_annotations_95_impl_47_visibility__.__esModule && $___46__46__47_annotations_95_impl_47_visibility__ || {default: $___46__46__47_annotations_95_impl_47_visibility__});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/annotations/view", ["npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ViewAnnotation: {get: function() {
        return $___46__46__47_annotations_95_impl_47_view__.View;
      }},
    __esModule: {value: true}
  });
  var $___46__46__47_annotations_95_impl_47_view__;
  var $___46__46__47_annotations_95_impl_47_view__ = ($___46__46__47_annotations_95_impl_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view"), $___46__46__47_annotations_95_impl_47_view__ && $___46__46__47_annotations_95_impl_47_view__.__esModule && $___46__46__47_annotations_95_impl_47_view__ || {default: $___46__46__47_annotations_95_impl_47_view__});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/key", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/di/type_literal", "npm:angular2@2.0.0-alpha.24/src/di/type_literal"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var type_literal_1 = require("npm:angular2@2.0.0-alpha.24/src/di/type_literal");
  var type_literal_2 = require("npm:angular2@2.0.0-alpha.24/src/di/type_literal");
  exports.TypeLiteral = type_literal_2.TypeLiteral;
  var Key = (function() {
    function Key(token, id) {
      if (lang_1.isBlank(token)) {
        throw new lang_1.BaseException('Token must be defined!');
      }
      this.token = token;
      this.id = id;
    }
    Object.defineProperty(Key.prototype, "displayName", {
      get: function() {
        return lang_1.stringify(this.token);
      },
      enumerable: true,
      configurable: true
    });
    Key.get = function(token) {
      return _globalKeyRegistry.get(token);
    };
    Object.defineProperty(Key, "numberOfKeys", {
      get: function() {
        return _globalKeyRegistry.numberOfKeys;
      },
      enumerable: true,
      configurable: true
    });
    return Key;
  })();
  exports.Key = Key;
  var KeyRegistry = (function() {
    function KeyRegistry() {
      this._allKeys = collection_1.MapWrapper.create();
    }
    KeyRegistry.prototype.get = function(token) {
      if (token instanceof Key)
        return token;
      var theToken = token;
      if (token instanceof type_literal_1.TypeLiteral) {
        theToken = token.type;
      }
      token = theToken;
      if (collection_1.MapWrapper.contains(this._allKeys, token)) {
        return collection_1.MapWrapper.get(this._allKeys, token);
      }
      var newKey = new Key(token, Key.numberOfKeys);
      collection_1.MapWrapper.set(this._allKeys, token, newKey);
      return newKey;
    };
    Object.defineProperty(KeyRegistry.prototype, "numberOfKeys", {
      get: function() {
        return collection_1.MapWrapper.size(this._allKeys);
      },
      enumerable: true,
      configurable: true
    });
    return KeyRegistry;
  })();
  exports.KeyRegistry = KeyRegistry;
  var _globalKeyRegistry = new KeyRegistry();
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    DirectiveResolver: {get: function() {
        return DirectiveResolver;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_di__,
      $__angular2_47_src_47_facade_47_lang__,
      $___46__46__47_annotations_95_impl_47_annotations__,
      $__angular2_47_src_47_reflection_47_reflection__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var resolveForwardRef = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}).resolveForwardRef;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      Type = $__2.Type,
      isPresent = $__2.isPresent,
      BaseException = $__2.BaseException,
      stringify = $__2.stringify;
  var Directive = ($___46__46__47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $___46__46__47_annotations_95_impl_47_annotations__ && $___46__46__47_annotations_95_impl_47_annotations__.__esModule && $___46__46__47_annotations_95_impl_47_annotations__ || {default: $___46__46__47_annotations_95_impl_47_annotations__}).Directive;
  var reflector = ($__angular2_47_src_47_reflection_47_reflection__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection"), $__angular2_47_src_47_reflection_47_reflection__ && $__angular2_47_src_47_reflection_47_reflection__.__esModule && $__angular2_47_src_47_reflection_47_reflection__ || {default: $__angular2_47_src_47_reflection_47_reflection__}).reflector;
  var DirectiveResolver = function DirectiveResolver() {
    ;
  };
  ($traceurRuntime.createClass)(DirectiveResolver, {resolve: function(type) {
      var annotations = reflector.annotations(resolveForwardRef(type));
      if (isPresent(annotations)) {
        for (var i = 0; i < annotations.length; i++) {
          var annotation = annotations[i];
          if (annotation instanceof Directive) {
            return annotation;
          }
        }
      }
      throw new BaseException(("No Directive annotation found on " + stringify(type)));
    }}, {});
  Object.defineProperty(DirectiveResolver, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(DirectiveResolver.prototype.resolve, "parameters", {get: function() {
      return [[Type]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    internalView: {get: function() {
        return internalView;
      }},
    internalProtoView: {get: function() {
        return internalProtoView;
      }},
    ViewRef: {get: function() {
        return ViewRef;
      }},
    ProtoViewRef: {get: function() {
        return ProtoViewRef;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__view__,
      $__angular2_47_src_47_render_47_api__;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var RenderViewRef = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}).RenderViewRef;
  function internalView(viewRef) {
    return viewRef._view;
  }
  Object.defineProperty(internalView, "parameters", {get: function() {
      return [[ViewRef]];
    }});
  function internalProtoView(protoViewRef) {
    return isPresent(protoViewRef) ? protoViewRef._protoView : null;
  }
  Object.defineProperty(internalProtoView, "parameters", {get: function() {
      return [[ProtoViewRef]];
    }});
  var ViewRef = function ViewRef(view) {
    this._view = view;
  };
  ($traceurRuntime.createClass)(ViewRef, {
    get render() {
      return this._view.render;
    },
    setLocal: function(contextName, value) {
      this._view.setLocal(contextName, value);
    }
  }, {});
  Object.defineProperty(ViewRef, "parameters", {get: function() {
      return [[viewModule.AppView]];
    }});
  Object.defineProperty(ViewRef.prototype.setLocal, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  var ProtoViewRef = function ProtoViewRef(protoView) {
    this._protoView = protoView;
  };
  ($traceurRuntime.createClass)(ProtoViewRef, {}, {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/element_binder", "npm:angular2@2.0.0-alpha.24/src/render/dom/util", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    resolveInternalDomProtoView: {get: function() {
        return resolveInternalDomProtoView;
      }},
    DomProtoViewRef: {get: function() {
        return DomProtoViewRef;
      }},
    DomProtoView: {get: function() {
        return DomProtoView;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_collection__,
      $__element_95_binder__,
      $___46__46__47_util__,
      $___46__46__47__46__46__47_api__;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var List = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).List;
  var ElementBinder = ($__element_95_binder__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/element_binder"), $__element_95_binder__ && $__element_95_binder__.__esModule && $__element_95_binder__ || {default: $__element_95_binder__}).ElementBinder;
  var NG_BINDING_CLASS = ($___46__46__47_util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $___46__46__47_util__ && $___46__46__47_util__.__esModule && $___46__46__47_util__ || {default: $___46__46__47_util__}).NG_BINDING_CLASS;
  var RenderProtoViewRef = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).RenderProtoViewRef;
  function resolveInternalDomProtoView(protoViewRef) {
    var domProtoViewRef = protoViewRef;
    return domProtoViewRef._protoView;
  }
  Object.defineProperty(resolveInternalDomProtoView, "parameters", {get: function() {
      return [[RenderProtoViewRef]];
    }});
  var DomProtoViewRef = function DomProtoViewRef(protoView) {
    $traceurRuntime.superConstructor($DomProtoViewRef).call(this);
    this._protoView = protoView;
  };
  var $DomProtoViewRef = DomProtoViewRef;
  ($traceurRuntime.createClass)(DomProtoViewRef, {}, {}, RenderProtoViewRef);
  Object.defineProperty(DomProtoViewRef, "parameters", {get: function() {
      return [[DomProtoView]];
    }});
  var DomProtoView = function DomProtoView($__7) {
    var $__8 = $__7,
        elementBinders = $__8.elementBinders,
        element = $__8.element;
    this.element = element;
    this.elementBinders = elementBinders;
    this.isTemplateElement = DOM.isTemplateElement(this.element);
    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS)) ? 1 : 0;
  };
  ($traceurRuntime.createClass)(DomProtoView, {}, {});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom", ["npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    DestinationLightDom: {get: function() {
        return DestinationLightDom;
      }},
    LightDom: {get: function() {
        return LightDom;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__,
      $___46__46__47_view_47_view__,
      $__content_95_tag__;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__1.List,
      ListWrapper = $__1.ListWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isBlank = $__2.isBlank,
      isPresent = $__2.isPresent;
  var viewModule = ($___46__46__47_view_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $___46__46__47_view_47_view__ && $___46__46__47_view_47_view__.__esModule && $___46__46__47_view_47_view__ || {default: $___46__46__47_view_47_view__});
  var Content = ($__content_95_tag__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag"), $__content_95_tag__ && $__content_95_tag__.__esModule && $__content_95_tag__ || {default: $__content_95_tag__}).Content;
  var DestinationLightDom = function DestinationLightDom() {
    ;
  };
  ($traceurRuntime.createClass)(DestinationLightDom, {}, {});
  var _Root = function _Root(node, boundElementIndex) {
    this.node = node;
    this.boundElementIndex = boundElementIndex;
  };
  ($traceurRuntime.createClass)(_Root, {}, {});
  var LightDom = function LightDom(lightDomView, element) {
    this.lightDomView = lightDomView;
    this.nodes = DOM.childNodesAsList(element);
    this.roots = null;
    this.shadowDomView = null;
  };
  ($traceurRuntime.createClass)(LightDom, {
    attachShadowDomView: function(shadowDomView) {
      this.shadowDomView = shadowDomView;
    },
    detachShadowDomView: function() {
      this.shadowDomView = null;
    },
    redistribute: function() {
      redistributeNodes(this.contentTags(), this.expandedDomNodes());
    },
    contentTags: function() {
      if (isPresent(this.shadowDomView)) {
        return this._collectAllContentTags(this.shadowDomView, []);
      } else {
        return [];
      }
    },
    _collectAllContentTags: function(view, acc) {
      var $__4 = this;
      var contentTags = view.contentTags;
      var vcs = view.viewContainers;
      for (var i = 0; i < vcs.length; i++) {
        var vc = vcs[i];
        var contentTag = contentTags[i];
        if (isPresent(contentTag)) {
          ListWrapper.push(acc, contentTag);
        }
        if (isPresent(vc)) {
          ListWrapper.forEach(vc.contentTagContainers(), (function(view) {
            $__4._collectAllContentTags(view, acc);
          }));
        }
      }
      return acc;
    },
    expandedDomNodes: function() {
      var res = [];
      var roots = this._roots();
      for (var i = 0; i < roots.length; ++i) {
        var root = roots[i];
        if (isPresent(root.boundElementIndex)) {
          var vc = this.lightDomView.viewContainers[root.boundElementIndex];
          var content = this.lightDomView.contentTags[root.boundElementIndex];
          if (isPresent(vc)) {
            res = ListWrapper.concat(res, vc.nodes());
          } else if (isPresent(content)) {
            res = ListWrapper.concat(res, content.nodes());
          } else {
            ListWrapper.push(res, root.node);
          }
        } else {
          ListWrapper.push(res, root.node);
        }
      }
      return res;
    },
    _roots: function() {
      if (isPresent(this.roots))
        return this.roots;
      var boundElements = this.lightDomView.boundElements;
      this.roots = ListWrapper.map(this.nodes, (function(n) {
        var boundElementIndex = null;
        for (var i = 0; i < boundElements.length; i++) {
          var boundEl = boundElements[i];
          if (isPresent(boundEl) && boundEl === n) {
            boundElementIndex = i;
            break;
          }
        }
        return new _Root(n, boundElementIndex);
      }));
      return this.roots;
    }
  }, {});
  Object.defineProperty(LightDom, "parameters", {get: function() {
      return [[viewModule.DomView], []];
    }});
  Object.defineProperty(LightDom.prototype.attachShadowDomView, "parameters", {get: function() {
      return [[viewModule.DomView]];
    }});
  Object.defineProperty(LightDom.prototype._collectAllContentTags, "parameters", {get: function() {
      return [[viewModule.DomView], [$traceurRuntime.genericType(List, Content)]];
    }});
  function redistributeNodes(contents, nodes) {
    for (var i = 0; i < contents.length; ++i) {
      var content = contents[i];
      var select = content.select;
      if (select.length === 0) {
        content.insert(ListWrapper.clone(nodes));
        ListWrapper.clear(nodes);
      } else {
        var matchSelector = (function(n) {
          return DOM.elementMatches(n, select);
        });
        var matchingNodes = ListWrapper.filter(nodes, matchSelector);
        content.insert(matchingNodes);
        ListWrapper.removeAll(nodes, matchingNodes);
      }
    }
    for (var i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      if (isPresent(node.parentNode)) {
        DOM.remove(nodes[i]);
      }
    }
  }
  Object.defineProperty(redistributeNodes, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, Content)], [List]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/query_list", ["npm:angular2@2.0.0-alpha.24/src/core/compiler/base_query_list"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    QueryList: {get: function() {
        return QueryList;
      }},
    __esModule: {value: true}
  });
  var $__base_95_query_95_list__;
  var BaseQueryList = ($__base_95_query_95_list__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/base_query_list"), $__base_95_query_95_list__ && $__base_95_query_95_list__.__esModule && $__base_95_query_95_list__ || {default: $__base_95_query_95_list__}).BaseQueryList;
  var QueryList = function QueryList() {
    $traceurRuntime.superConstructor($QueryList).apply(this, arguments);
    ;
  };
  var $QueryList = QueryList;
  ($traceurRuntime.createClass)(QueryList, {
    onChange: function(callback) {
      return $traceurRuntime.superGet(this, $QueryList.prototype, "onChange").call(this, callback);
    },
    removeCallback: function(callback) {
      return $traceurRuntime.superGet(this, $QueryList.prototype, "removeCallback").call(this, callback);
    }
  }, {}, BaseQueryList);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/services/xhr", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/services/url_resolver"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    TemplateLoader: {get: function() {
        return TemplateLoader;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_services_47_xhr__,
      $___46__46__47__46__46__47_api__,
      $__angular2_47_src_47_services_47_url_95_resolver__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isBlank = $__1.isBlank,
      isPresent = $__1.isPresent,
      BaseException = $__1.BaseException,
      stringify = $__1.stringify;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      Map = $__2.Map,
      MapWrapper = $__2.MapWrapper,
      StringMapWrapper = $__2.StringMapWrapper,
      StringMap = $__2.StringMap;
  var $__3 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      PromiseWrapper = $__3.PromiseWrapper,
      Promise = $__3.Promise;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var XHR = ($__angular2_47_src_47_services_47_xhr__ = require("npm:angular2@2.0.0-alpha.24/src/services/xhr"), $__angular2_47_src_47_services_47_xhr__ && $__angular2_47_src_47_services_47_xhr__.__esModule && $__angular2_47_src_47_services_47_xhr__ || {default: $__angular2_47_src_47_services_47_xhr__}).XHR;
  var ViewDefinition = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).ViewDefinition;
  var UrlResolver = ($__angular2_47_src_47_services_47_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/services/url_resolver"), $__angular2_47_src_47_services_47_url_95_resolver__ && $__angular2_47_src_47_services_47_url_95_resolver__.__esModule && $__angular2_47_src_47_services_47_url_95_resolver__ || {default: $__angular2_47_src_47_services_47_url_95_resolver__}).UrlResolver;
  var TemplateLoader = function TemplateLoader(xhr, urlResolver) {
    this._xhr = xhr;
    this._htmlCache = StringMapWrapper.create();
  };
  ($traceurRuntime.createClass)(TemplateLoader, {load: function(template) {
      if (isPresent(template.template)) {
        return PromiseWrapper.resolve(DOM.createTemplate(template.template));
      }
      var url = template.absUrl;
      if (isPresent(url)) {
        var promise = StringMapWrapper.get(this._htmlCache, url);
        if (isBlank(promise)) {
          promise = this._xhr.get(url).then(function(html) {
            var template = DOM.createTemplate(html);
            return template;
          });
          StringMapWrapper.set(this._htmlCache, url, promise);
        }
        return promise.then((function(tplElement) {
          return DOM.clone(tplElement);
        }));
      }
      throw new BaseException('View should have either the url or template property set');
    }}, {});
  Object.defineProperty(TemplateLoader, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(TemplateLoader, "parameters", {get: function() {
      return [[XHR], [UrlResolver]];
    }});
  Object.defineProperty(TemplateLoader.prototype.load, "parameters", {get: function() {
      return [[ViewDefinition]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/util", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_css"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    getComponentId: {get: function() {
        return getComponentId;
      }},
    insertSharedStyleText: {get: function() {
        return insertSharedStyleText;
      }},
    insertStyleElement: {get: function() {
        return insertStyleElement;
      }},
    getHostAttribute: {get: function() {
        return getHostAttribute;
      }},
    getContentAttribute: {get: function() {
        return getContentAttribute;
      }},
    shimCssForComponent: {get: function() {
        return shimCssForComponent;
      }},
    resetShadowDomCache: {get: function() {
        return resetShadowDomCache;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__shadow_95_css__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isBlank = $__0.isBlank,
      isPresent = $__0.isPresent,
      int = $__0.int;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      MapWrapper = $__1.MapWrapper,
      Map = $__1.Map;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var ShadowCss = ($__shadow_95_css__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_css"), $__shadow_95_css__ && $__shadow_95_css__.__esModule && $__shadow_95_css__ || {default: $__shadow_95_css__}).ShadowCss;
  var _componentUIDs = MapWrapper.create();
  var _nextComponentUID = 0;
  var _sharedStyleTexts = MapWrapper.create();
  var _lastInsertedStyleEl;
  function getComponentId(componentStringId) {
    var id = MapWrapper.get(_componentUIDs, componentStringId);
    if (isBlank(id)) {
      id = _nextComponentUID++;
      MapWrapper.set(_componentUIDs, componentStringId, id);
    }
    return id;
  }
  Object.defineProperty(getComponentId, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  function insertSharedStyleText(cssText, styleHost, styleEl) {
    if (!MapWrapper.contains(_sharedStyleTexts, cssText)) {
      MapWrapper.set(_sharedStyleTexts, cssText, true);
      insertStyleElement(styleHost, styleEl);
    }
  }
  function insertStyleElement(host, styleEl) {
    if (isBlank(_lastInsertedStyleEl)) {
      var firstChild = DOM.firstChild(host);
      if (isPresent(firstChild)) {
        DOM.insertBefore(firstChild, styleEl);
      } else {
        DOM.appendChild(host, styleEl);
      }
    } else {
      DOM.insertAfter(_lastInsertedStyleEl, styleEl);
    }
    _lastInsertedStyleEl = styleEl;
  }
  function getHostAttribute(id) {
    return ("_nghost-" + id);
  }
  Object.defineProperty(getHostAttribute, "parameters", {get: function() {
      return [[int]];
    }});
  function getContentAttribute(id) {
    return ("_ngcontent-" + id);
  }
  Object.defineProperty(getContentAttribute, "parameters", {get: function() {
      return [[int]];
    }});
  function shimCssForComponent(cssText, componentId) {
    var id = getComponentId(componentId);
    var shadowCss = new ShadowCss();
    return shadowCss.shimCssText(cssText, getContentAttribute(id), getHostAttribute(id));
  }
  Object.defineProperty(shimCssForComponent, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string]];
    }});
  function resetShadowDomCache() {
    MapWrapper.clear(_componentUIDs);
    _nextComponentUID = 0;
    MapWrapper.clear(_sharedStyleTexts);
    _lastInsertedStyleEl = null;
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/events/hammer_gestures", ["npm:angular2@2.0.0-alpha.24/src/render/dom/events/hammer_common", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    HammerGesturesPlugin: {get: function() {
        return HammerGesturesPlugin;
      }},
    __esModule: {value: true}
  });
  var $__hammer_95_common__,
      $__angular2_47_src_47_facade_47_lang__;
  var HammerGesturesPluginCommon = ($__hammer_95_common__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/hammer_common"), $__hammer_95_common__ && $__hammer_95_common__.__esModule && $__hammer_95_common__ || {default: $__hammer_95_common__}).HammerGesturesPluginCommon;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__1.isPresent,
      BaseException = $__1.BaseException;
  var HammerGesturesPlugin = function HammerGesturesPlugin() {
    $traceurRuntime.superConstructor($HammerGesturesPlugin).call(this);
  };
  var $HammerGesturesPlugin = HammerGesturesPlugin;
  ($traceurRuntime.createClass)(HammerGesturesPlugin, {
    supports: function(eventName) {
      if (!$traceurRuntime.superGet(this, $HammerGesturesPlugin.prototype, "supports").call(this, eventName))
        return false;
      if (!isPresent(window.Hammer)) {
        throw new BaseException(("Hammer.js is not loaded, can not bind " + eventName + " event"));
      }
      return true;
    },
    addEventListener: function(element, eventName, handler, shouldSupportBubble) {
      if (shouldSupportBubble)
        throw new BaseException('Hammer.js plugin does not support bubbling gestures.');
      var zone = this.manager.getZone();
      eventName = eventName.toLowerCase();
      zone.runOutsideAngular(function() {
        var mc = new Hammer(element);
        mc.get('pinch').set({enable: true});
        mc.get('rotate').set({enable: true});
        mc.on(eventName, function(eventObj) {
          zone.run(function() {
            handler(eventObj);
          });
        });
      });
    }
  }, {}, HammerGesturesPluginCommon);
  Object.defineProperty(HammerGesturesPlugin.prototype.supports, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(HammerGesturesPlugin.prototype.addEventListener, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [Function], [$traceurRuntime.type.boolean]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/testability/testability", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/testability/get_testability"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    Testability: {get: function() {
        return Testability;
      }},
    TestabilityRegistry: {get: function() {
        return TestabilityRegistry;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_core_47_testability_47_get_95_testability__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      Map = $__2.Map,
      MapWrapper = $__2.MapWrapper,
      List = $__2.List,
      ListWrapper = $__2.ListWrapper;
  var $__3 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      StringWrapper = $__3.StringWrapper,
      isBlank = $__3.isBlank,
      BaseException = $__3.BaseException;
  var getTestabilityModule = ($__angular2_47_src_47_core_47_testability_47_get_95_testability__ = require("npm:angular2@2.0.0-alpha.24/src/core/testability/get_testability"), $__angular2_47_src_47_core_47_testability_47_get_95_testability__ && $__angular2_47_src_47_core_47_testability_47_get_95_testability__.__esModule && $__angular2_47_src_47_core_47_testability_47_get_95_testability__ || {default: $__angular2_47_src_47_core_47_testability_47_get_95_testability__});
  var Testability = function Testability() {
    this._pendingCount = 0;
    this._callbacks = ListWrapper.create();
  };
  ($traceurRuntime.createClass)(Testability, {
    increaseCount: function() {
      var delta = arguments[0] !== (void 0) ? arguments[0] : 1;
      this._pendingCount += delta;
      if (this._pendingCount < 0) {
        throw new BaseException('pending async requests below zero');
      } else if (this._pendingCount == 0) {
        this._runCallbacks();
      }
      return this._pendingCount;
    },
    _runCallbacks: function() {
      while (this._callbacks.length !== 0) {
        ListWrapper.removeLast(this._callbacks)();
      }
    },
    whenStable: function(callback) {
      ListWrapper.push(this._callbacks, callback);
      if (this._pendingCount === 0) {
        this._runCallbacks();
      }
    },
    getPendingCount: function() {
      return this._pendingCount;
    },
    findBindings: function(using, binding, exactMatch) {
      return [];
    }
  }, {});
  Object.defineProperty(Testability, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(Testability.prototype.increaseCount, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  Object.defineProperty(Testability.prototype.whenStable, "parameters", {get: function() {
      return [[Function]];
    }});
  Object.defineProperty(Testability.prototype.findBindings, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.string], [$traceurRuntime.type.boolean]];
    }});
  var TestabilityRegistry = function TestabilityRegistry() {
    this._applications = MapWrapper.create();
    getTestabilityModule.GetTestability.addToWindow(this);
  };
  ($traceurRuntime.createClass)(TestabilityRegistry, {
    registerApplication: function(token, testability) {
      MapWrapper.set(this._applications, token, testability);
    },
    findTestabilityInTree: function(elem) {
      if (elem == null) {
        return null;
      }
      if (MapWrapper.contains(this._applications, elem)) {
        return MapWrapper.get(this._applications, elem);
      }
      if (DOM.isShadowRoot(elem)) {
        return this.findTestabilityInTree(DOM.getHost(elem));
      }
      return this.findTestabilityInTree(DOM.parentElement(elem));
    }
  }, {});
  Object.defineProperty(TestabilityRegistry, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(TestabilityRegistry.prototype.registerApplication, "parameters", {get: function() {
      return [[], [Testability]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view_builder", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/element_binder", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/property_setter_factory", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/util"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ProtoViewBuilder: {get: function() {
        return ProtoViewBuilder;
      }},
    ElementBinderBuilder: {get: function() {
        return ElementBinderBuilder;
      }},
    DirectiveBuilder: {get: function() {
        return DirectiveBuilder;
      }},
    EventBuilder: {get: function() {
        return EventBuilder;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_change_95_detection__,
      $__proto_95_view__,
      $__element_95_binder__,
      $__property_95_setter_95_factory__,
      $___46__46__47__46__46__47_api__,
      $___46__46__47_util__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__0.isPresent,
      isBlank = $__0.isBlank,
      BaseException = $__0.BaseException;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__1.ListWrapper,
      MapWrapper = $__1.MapWrapper,
      Set = $__1.Set,
      SetWrapper = $__1.SetWrapper,
      List = $__1.List;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__3 = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}),
      ASTWithSource = $__3.ASTWithSource,
      AST = $__3.AST,
      AstTransformer = $__3.AstTransformer,
      AccessMember = $__3.AccessMember,
      LiteralArray = $__3.LiteralArray,
      ImplicitReceiver = $__3.ImplicitReceiver;
  var $__4 = ($__proto_95_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view"), $__proto_95_view__ && $__proto_95_view__.__esModule && $__proto_95_view__ || {default: $__proto_95_view__}),
      DomProtoView = $__4.DomProtoView,
      DomProtoViewRef = $__4.DomProtoViewRef,
      resolveInternalDomProtoView = $__4.resolveInternalDomProtoView;
  var $__5 = ($__element_95_binder__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/element_binder"), $__element_95_binder__ && $__element_95_binder__.__esModule && $__element_95_binder__ || {default: $__element_95_binder__}),
      ElementBinder = $__5.ElementBinder,
      Event = $__5.Event,
      HostAction = $__5.HostAction;
  var setterFactory = ($__property_95_setter_95_factory__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/property_setter_factory"), $__property_95_setter_95_factory__ && $__property_95_setter_95_factory__.__esModule && $__property_95_setter_95_factory__ || {default: $__property_95_setter_95_factory__}).setterFactory;
  var api = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__});
  var $__7 = ($___46__46__47_util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $___46__46__47_util__ && $___46__46__47_util__.__esModule && $___46__46__47_util__ || {default: $___46__46__47_util__}),
      NG_BINDING_CLASS = $__7.NG_BINDING_CLASS,
      EVENT_TARGET_SEPARATOR = $__7.EVENT_TARGET_SEPARATOR;
  var ProtoViewBuilder = function ProtoViewBuilder(rootElement, type) {
    this.rootElement = rootElement;
    this.elements = [];
    this.variableBindings = MapWrapper.create();
    this.type = type;
  };
  ($traceurRuntime.createClass)(ProtoViewBuilder, {
    bindElement: function(element) {
      var description = arguments[1] !== (void 0) ? arguments[1] : null;
      var builder = new ElementBinderBuilder(this.elements.length, element, description);
      ListWrapper.push(this.elements, builder);
      DOM.addClass(element, NG_BINDING_CLASS);
      return builder;
    },
    bindVariable: function(name, value) {
      MapWrapper.set(this.variableBindings, value, name);
    },
    build: function() {
      var renderElementBinders = [];
      var apiElementBinders = [];
      ListWrapper.forEach(this.elements, (function(ebb) {
        var propertySetters = MapWrapper.create();
        var hostActions = MapWrapper.create();
        var apiDirectiveBinders = ListWrapper.map(ebb.directives, (function(dbb) {
          ebb.eventBuilder.merge(dbb.eventBuilder);
          MapWrapper.forEach(dbb.hostPropertyBindings, (function(_, hostPropertyName) {
            MapWrapper.set(propertySetters, hostPropertyName, setterFactory(hostPropertyName));
          }));
          ListWrapper.forEach(dbb.hostActions, (function(hostAction) {
            MapWrapper.set(hostActions, hostAction.actionExpression, hostAction.expression);
          }));
          return new api.DirectiveBinder({
            directiveIndex: dbb.directiveIndex,
            propertyBindings: dbb.propertyBindings,
            eventBindings: dbb.eventBindings,
            hostPropertyBindings: dbb.hostPropertyBindings
          });
        }));
        MapWrapper.forEach(ebb.propertyBindings, (function(_, propertyName) {
          MapWrapper.set(propertySetters, propertyName, setterFactory(propertyName));
        }));
        var nestedProtoView = isPresent(ebb.nestedProtoView) ? ebb.nestedProtoView.build() : null;
        var parentIndex = isPresent(ebb.parent) ? ebb.parent.index : -1;
        ListWrapper.push(apiElementBinders, new api.ElementBinder({
          index: ebb.index,
          parentIndex: parentIndex,
          distanceToParent: ebb.distanceToParent,
          directives: apiDirectiveBinders,
          nestedProtoView: nestedProtoView,
          propertyBindings: ebb.propertyBindings,
          variableBindings: ebb.variableBindings,
          eventBindings: ebb.eventBindings,
          textBindings: ebb.textBindings,
          readAttributes: ebb.readAttributes
        }));
        ListWrapper.push(renderElementBinders, new ElementBinder({
          textNodeIndices: ebb.textBindingIndices,
          contentTagSelector: ebb.contentTagSelector,
          parentIndex: parentIndex,
          distanceToParent: ebb.distanceToParent,
          nestedProtoView: isPresent(nestedProtoView) ? resolveInternalDomProtoView(nestedProtoView.render) : null,
          componentId: ebb.componentId,
          eventLocals: new LiteralArray(ebb.eventBuilder.buildEventLocals()),
          localEvents: ebb.eventBuilder.buildLocalEvents(),
          globalEvents: ebb.eventBuilder.buildGlobalEvents(),
          hostActions: hostActions,
          propertySetters: propertySetters
        }));
      }));
      return new api.ProtoViewDto({
        render: new DomProtoViewRef(new DomProtoView({
          element: this.rootElement,
          elementBinders: renderElementBinders
        })),
        type: this.type,
        elementBinders: apiElementBinders,
        variableBindings: this.variableBindings
      });
    }
  }, {});
  Object.defineProperty(ProtoViewBuilder, "parameters", {get: function() {
      return [[], [$traceurRuntime.type.number]];
    }});
  var ElementBinderBuilder = function ElementBinderBuilder(index, element, description) {
    this.element = element;
    this.index = index;
    this.parent = null;
    this.distanceToParent = 0;
    this.directives = [];
    this.nestedProtoView = null;
    this.propertyBindings = MapWrapper.create();
    this.variableBindings = MapWrapper.create();
    this.eventBindings = ListWrapper.create();
    this.eventBuilder = new EventBuilder();
    this.textBindings = [];
    this.textBindingIndices = [];
    this.contentTagSelector = null;
    this.componentId = null;
    this.readAttributes = MapWrapper.create();
  };
  var $ElementBinderBuilder = ElementBinderBuilder;
  ($traceurRuntime.createClass)(ElementBinderBuilder, {
    setParent: function(parent, distanceToParent) {
      this.parent = parent;
      if (isPresent(parent)) {
        this.distanceToParent = distanceToParent;
      }
      return this;
    },
    readAttribute: function(attrName) {
      if (isBlank(MapWrapper.get(this.readAttributes, attrName))) {
        MapWrapper.set(this.readAttributes, attrName, DOM.getAttribute(this.element, attrName));
      }
    },
    bindDirective: function(directiveIndex) {
      var directive = new DirectiveBuilder(directiveIndex);
      ListWrapper.push(this.directives, directive);
      return directive;
    },
    bindNestedProtoView: function(rootElement) {
      if (isPresent(this.nestedProtoView)) {
        throw new BaseException('Only one nested view per element is allowed');
      }
      this.nestedProtoView = new ProtoViewBuilder(rootElement, api.ProtoViewDto.EMBEDDED_VIEW_TYPE);
      return this.nestedProtoView;
    },
    bindProperty: function(name, expression) {
      MapWrapper.set(this.propertyBindings, name, expression);
      setterFactory(name);
    },
    bindVariable: function(name, value) {
      if (isPresent(this.nestedProtoView)) {
        this.nestedProtoView.bindVariable(name, value);
      } else {
        MapWrapper.set(this.variableBindings, value, name);
      }
    },
    bindEvent: function(name, expression) {
      var target = arguments[2] !== (void 0) ? arguments[2] : null;
      ListWrapper.push(this.eventBindings, this.eventBuilder.add(name, expression, target));
    },
    bindText: function(index, expression) {
      ListWrapper.push(this.textBindingIndices, index);
      ListWrapper.push(this.textBindings, expression);
    },
    setContentTagSelector: function(value) {
      this.contentTagSelector = value;
    },
    setComponentId: function(componentId) {
      this.componentId = componentId;
    }
  }, {});
  Object.defineProperty(ElementBinderBuilder.prototype.setParent, "parameters", {get: function() {
      return [[ElementBinderBuilder], []];
    }});
  Object.defineProperty(ElementBinderBuilder.prototype.readAttribute, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ElementBinderBuilder.prototype.bindDirective, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ElementBinderBuilder.prototype.setContentTagSelector, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ElementBinderBuilder.prototype.setComponentId, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var DirectiveBuilder = function DirectiveBuilder(directiveIndex) {
    this.directiveIndex = directiveIndex;
    this.propertyBindings = MapWrapper.create();
    this.hostPropertyBindings = MapWrapper.create();
    this.hostActions = ListWrapper.create();
    this.eventBindings = ListWrapper.create();
    this.eventBuilder = new EventBuilder();
  };
  ($traceurRuntime.createClass)(DirectiveBuilder, {
    bindProperty: function(name, expression) {
      MapWrapper.set(this.propertyBindings, name, expression);
    },
    bindHostProperty: function(name, expression) {
      MapWrapper.set(this.hostPropertyBindings, name, expression);
    },
    bindHostAction: function(actionName, actionExpression, expression) {
      ListWrapper.push(this.hostActions, new HostAction(actionName, actionExpression, expression));
    },
    bindEvent: function(name, expression) {
      var target = arguments[2] !== (void 0) ? arguments[2] : null;
      ListWrapper.push(this.eventBindings, this.eventBuilder.add(name, expression, target));
    }
  }, {});
  Object.defineProperty(DirectiveBuilder.prototype.bindHostAction, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], [ASTWithSource]];
    }});
  var EventBuilder = function EventBuilder() {
    $traceurRuntime.superConstructor($EventBuilder).call(this);
    this.locals = [];
    this.localEvents = [];
    this.globalEvents = [];
    this._implicitReceiver = new ImplicitReceiver();
  };
  var $EventBuilder = EventBuilder;
  ($traceurRuntime.createClass)(EventBuilder, {
    add: function(name, source, target) {
      var adjustedAst = source.ast;
      var fullName = isPresent(target) ? target + EVENT_TARGET_SEPARATOR + name : name;
      var result = new api.EventBinding(fullName, new ASTWithSource(adjustedAst, source.source, source.location));
      var event = new Event(name, target, fullName);
      if (isBlank(target)) {
        ListWrapper.push(this.localEvents, event);
      } else {
        ListWrapper.push(this.globalEvents, event);
      }
      return result;
    },
    visitAccessMember: function(ast) {
      var isEventAccess = false;
      var current = ast;
      while (!isEventAccess && (current instanceof AccessMember)) {
        if (current.name == '$event') {
          isEventAccess = true;
        }
        current = current.receiver;
      }
      if (isEventAccess) {
        ListWrapper.push(this.locals, ast);
        var index = this.locals.length - 1;
        return new AccessMember(this._implicitReceiver, ("" + index), (function(arr) {
          return arr[index];
        }), null);
      } else {
        return ast;
      }
    },
    buildEventLocals: function() {
      return this.locals;
    },
    buildLocalEvents: function() {
      return this.localEvents;
    },
    buildGlobalEvents: function() {
      return this.globalEvents;
    },
    merge: function(eventBuilder) {
      this._merge(this.localEvents, eventBuilder.localEvents);
      this._merge(this.globalEvents, eventBuilder.globalEvents);
      ListWrapper.concat(this.locals, eventBuilder.locals);
    },
    _merge: function(host, tobeAdded) {
      var names = ListWrapper.create();
      for (var i = 0; i < host.length; i++) {
        ListWrapper.push(names, host[i].fullName);
      }
      for (var j = 0; j < tobeAdded.length; j++) {
        if (!ListWrapper.contains(names, tobeAdded[j].fullName)) {
          ListWrapper.push(host, tobeAdded[j]);
        }
      }
    }
  }, {}, AstTransformer);
  Object.defineProperty(EventBuilder.prototype.add, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [ASTWithSource], [$traceurRuntime.type.string]];
    }});
  Object.defineProperty(EventBuilder.prototype.visitAccessMember, "parameters", {get: function() {
      return [[AccessMember]];
    }});
  Object.defineProperty(EventBuilder.prototype.merge, "parameters", {get: function() {
      return [[EventBuilder]];
    }});
  Object.defineProperty(EventBuilder.prototype._merge, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, Event)], [$traceurRuntime.genericType(List, Event)]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    CompileControl: {get: function() {
        return CompileControl;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_collection__,
      $__compile_95_element__,
      $__compile_95_step__;
  var isBlank = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isBlank;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__1.List,
      ListWrapper = $__1.ListWrapper;
  var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
  var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
  var CompileControl = function CompileControl(steps) {
    this._steps = steps;
    this._currentStepIndex = 0;
    this._parent = null;
    this._results = null;
    this._additionalChildren = null;
  };
  ($traceurRuntime.createClass)(CompileControl, {
    internalProcess: function(results, startStepIndex, parent, current) {
      this._results = results;
      var previousStepIndex = this._currentStepIndex;
      var previousParent = this._parent;
      this._ignoreCurrentElement = false;
      for (var i = startStepIndex; i < this._steps.length && !this._ignoreCurrentElement; i++) {
        var step = this._steps[i];
        this._parent = parent;
        this._currentStepIndex = i;
        step.process(parent, current, this);
        parent = this._parent;
      }
      if (!this._ignoreCurrentElement) {
        ListWrapper.push(results, current);
      }
      this._currentStepIndex = previousStepIndex;
      this._parent = previousParent;
      var localAdditionalChildren = this._additionalChildren;
      this._additionalChildren = null;
      return localAdditionalChildren;
    },
    addParent: function(newElement) {
      this.internalProcess(this._results, this._currentStepIndex + 1, this._parent, newElement);
      this._parent = newElement;
    },
    addChild: function(element) {
      if (isBlank(this._additionalChildren)) {
        this._additionalChildren = ListWrapper.create();
      }
      ListWrapper.push(this._additionalChildren, element);
    },
    ignoreCurrentElement: function() {
      this._ignoreCurrentElement = true;
    }
  }, {});
  Object.defineProperty(CompileControl.prototype.internalProcess, "parameters", {get: function() {
      return [[], [], [CompileElement], [CompileElement]];
    }});
  Object.defineProperty(CompileControl.prototype.addParent, "parameters", {get: function() {
      return [[CompileElement]];
    }});
  Object.defineProperty(CompileControl.prototype.addChild, "parameters", {get: function() {
      return [[CompileElement]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/directive_parser", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/selector", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/util", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      DirectiveParser: {get: function() {
          return DirectiveParser;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_facade_47_collection__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $__angular2_47_change_95_detection__,
        $__angular2_47_src_47_render_47_dom_47_compiler_47_selector__,
        $__compile_95_step__,
        $__compile_95_element__,
        $__compile_95_control__,
        $___46__46__47__46__46__47_api__,
        $___46__46__47_util__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isPresent = $__0.isPresent,
        isBlank = $__0.isBlank,
        BaseException = $__0.BaseException,
        assertionsEnabled = $__0.assertionsEnabled,
        RegExpWrapper = $__0.RegExpWrapper,
        StringWrapper = $__0.StringWrapper;
    var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
        List = $__1.List,
        MapWrapper = $__1.MapWrapper,
        ListWrapper = $__1.ListWrapper;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var Parser = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Parser;
    var $__4 = ($__angular2_47_src_47_render_47_dom_47_compiler_47_selector__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/selector"), $__angular2_47_src_47_render_47_dom_47_compiler_47_selector__ && $__angular2_47_src_47_render_47_dom_47_compiler_47_selector__.__esModule && $__angular2_47_src_47_render_47_dom_47_compiler_47_selector__ || {default: $__angular2_47_src_47_render_47_dom_47_compiler_47_selector__}),
        SelectorMatcher = $__4.SelectorMatcher,
        CssSelector = $__4.CssSelector;
    var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
    var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
    var CompileControl = ($__compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $__compile_95_control__ && $__compile_95_control__.__esModule && $__compile_95_control__ || {default: $__compile_95_control__}).CompileControl;
    var DirectiveMetadata = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).DirectiveMetadata;
    var $__9 = ($___46__46__47_util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/util"), $___46__46__47_util__ && $___46__46__47_util__.__esModule && $___46__46__47_util__ || {default: $___46__46__47_util__}),
        dashCaseToCamelCase = $__9.dashCaseToCamelCase,
        camelCaseToDashCase = $__9.camelCaseToDashCase,
        EVENT_TARGET_SEPARATOR = $__9.EVENT_TARGET_SEPARATOR;
    var DirectiveParser = function DirectiveParser(parser, directives) {
      $traceurRuntime.superConstructor($DirectiveParser).call(this);
      this._parser = parser;
      this._selectorMatcher = new SelectorMatcher();
      this._directives = directives;
      for (var i = 0; i < directives.length; i++) {
        var directive = directives[i];
        var selector = CssSelector.parse(directive.selector);
        this._ensureComponentOnlyHasElementSelector(selector, directive);
        this._selectorMatcher.addSelectables(selector, i);
      }
    };
    var $DirectiveParser = DirectiveParser;
    ($traceurRuntime.createClass)(DirectiveParser, {
      _ensureComponentOnlyHasElementSelector: function(selector, directive) {
        var isElementSelector = selector.length === 1 && selector[0].isElementSelector();
        if (!isElementSelector && directive.type === DirectiveMetadata.COMPONENT_TYPE) {
          throw new BaseException(("Component '" + directive.id + "' can only have an element selector, but had '" + directive.selector + "'"));
        }
      },
      process: function(parent, current, control) {
        var $__10 = this;
        var attrs = current.attrs();
        var classList = current.classList();
        var cssSelector = new CssSelector();
        var nodeName = DOM.nodeName(current.element);
        cssSelector.setElement(nodeName);
        for (var i = 0; i < classList.length; i++) {
          cssSelector.addClassName(classList[i]);
        }
        MapWrapper.forEach(attrs, (function(attrValue, attrName) {
          cssSelector.addAttribute(attrName, attrValue);
        }));
        var componentDirective;
        var foundDirectiveIndices = [];
        var elementBinder = null;
        this._selectorMatcher.match(cssSelector, (function(selector, directiveIndex) {
          elementBinder = current.bindElement();
          var directive = $__10._directives[directiveIndex];
          if (directive.type === DirectiveMetadata.COMPONENT_TYPE) {
            ListWrapper.insert(foundDirectiveIndices, 0, directiveIndex);
            if (isPresent(componentDirective)) {
              throw new BaseException(("Only one component directive is allowed per element - check " + current.elementDescription));
            }
            componentDirective = directive;
            elementBinder.setComponentId(directive.id);
          } else {
            ListWrapper.push(foundDirectiveIndices, directiveIndex);
          }
        }));
        ListWrapper.forEach(foundDirectiveIndices, (function(directiveIndex) {
          var directive = $__10._directives[directiveIndex];
          var directiveBinderBuilder = elementBinder.bindDirective(directiveIndex);
          current.compileChildren = current.compileChildren && directive.compileChildren;
          if (isPresent(directive.properties)) {
            MapWrapper.forEach(directive.properties, (function(bindConfig, dirProperty) {
              $__10._bindDirectiveProperty(dirProperty, bindConfig, current, directiveBinderBuilder);
            }));
          }
          if (isPresent(directive.hostListeners)) {
            MapWrapper.forEach(directive.hostListeners, (function(action, eventName) {
              $__10._bindDirectiveEvent(eventName, action, current, directiveBinderBuilder);
            }));
          }
          if (isPresent(directive.hostActions)) {
            MapWrapper.forEach(directive.hostActions, (function(action, actionName) {
              $__10._bindHostAction(actionName, action, current, directiveBinderBuilder);
            }));
          }
          if (isPresent(directive.hostProperties)) {
            MapWrapper.forEach(directive.hostProperties, (function(hostPropertyName, directivePropertyName) {
              $__10._bindHostProperty(hostPropertyName, directivePropertyName, current, directiveBinderBuilder);
            }));
          }
          if (isPresent(directive.hostAttributes)) {
            MapWrapper.forEach(directive.hostAttributes, (function(hostAttrValue, hostAttrName) {
              $__10._addHostAttribute(hostAttrName, hostAttrValue, current);
            }));
          }
          if (isPresent(directive.readAttributes)) {
            ListWrapper.forEach(directive.readAttributes, (function(attrName) {
              elementBinder.readAttribute(attrName);
            }));
          }
        }));
      },
      _bindDirectiveProperty: function(dirProperty, bindConfig, compileElement, directiveBinderBuilder) {
        var pipes = this._splitBindConfig(bindConfig);
        var elProp = ListWrapper.removeAt(pipes, 0);
        var bindingAst = MapWrapper.get(compileElement.bindElement().propertyBindings, dashCaseToCamelCase(elProp));
        if (isBlank(bindingAst)) {
          var attributeValue = MapWrapper.get(compileElement.attrs(), camelCaseToDashCase(elProp));
          if (isPresent(attributeValue)) {
            bindingAst = this._parser.wrapLiteralPrimitive(attributeValue, compileElement.elementDescription);
          }
        }
        if (isPresent(bindingAst)) {
          var fullExpAstWithBindPipes = this._parser.addPipes(bindingAst, pipes);
          directiveBinderBuilder.bindProperty(dirProperty, fullExpAstWithBindPipes);
        }
      },
      _bindDirectiveEvent: function(eventName, action, compileElement, directiveBinderBuilder) {
        var ast = this._parser.parseAction(action, compileElement.elementDescription);
        if (StringWrapper.contains(eventName, EVENT_TARGET_SEPARATOR)) {
          var parts = eventName.split(EVENT_TARGET_SEPARATOR);
          directiveBinderBuilder.bindEvent(parts[1], ast, parts[0]);
        } else {
          directiveBinderBuilder.bindEvent(eventName, ast);
        }
      },
      _bindHostAction: function(actionName, actionExpression, compileElement, directiveBinderBuilder) {
        var ast = this._parser.parseAction(actionExpression, compileElement.elementDescription);
        directiveBinderBuilder.bindHostAction(actionName, actionExpression, ast);
      },
      _bindHostProperty: function(hostPropertyName, directivePropertyName, compileElement, directiveBinderBuilder) {
        var ast = this._parser.parseBinding(directivePropertyName, ("hostProperties of " + compileElement.elementDescription));
        directiveBinderBuilder.bindHostProperty(hostPropertyName, ast);
      },
      _addHostAttribute: function(attrName, attrValue, compileElement) {
        if (StringWrapper.equals(attrName, 'class')) {
          ListWrapper.forEach(attrValue.split(' '), (function(className) {
            DOM.addClass(compileElement.element, className);
          }));
        } else if (!DOM.hasAttribute(compileElement.element, attrName)) {
          DOM.setAttribute(compileElement.element, attrName, attrValue);
        }
      },
      _splitBindConfig: function(bindConfig) {
        return ListWrapper.map(bindConfig.split('|'), (function(s) {
          return s.trim();
        }));
      }
    }, {}, CompileStep);
    Object.defineProperty(DirectiveParser, "parameters", {get: function() {
        return [[Parser], [$traceurRuntime.genericType(List, DirectiveMetadata)]];
      }});
    Object.defineProperty(DirectiveParser.prototype.process, "parameters", {get: function() {
        return [[CompileElement], [CompileElement], [CompileControl]];
      }});
    Object.defineProperty(DirectiveParser.prototype._splitBindConfig, "parameters", {get: function() {
        return [[$traceurRuntime.type.string]];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/annotations", ["npm:angular2@2.0.0-alpha.24/src/core/annotations/annotations", "npm:angular2@2.0.0-alpha.24/src/core/annotations/decorators"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  var $__src_47_core_47_annotations_47_annotations__,
      $__src_47_core_47_annotations_47_decorators__;
  var $__src_47_core_47_annotations_47_annotations__ = ($__src_47_core_47_annotations_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/annotations"), $__src_47_core_47_annotations_47_annotations__ && $__src_47_core_47_annotations_47_annotations__.__esModule && $__src_47_core_47_annotations_47_annotations__ || {default: $__src_47_core_47_annotations_47_annotations__});
  var $__src_47_core_47_annotations_47_decorators__ = ($__src_47_core_47_annotations_47_decorators__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/decorators"), $__src_47_core_47_annotations_47_decorators__ && $__src_47_core_47_annotations_47_decorators__.__esModule && $__src_47_core_47_annotations_47_decorators__ || {default: $__src_47_core_47_annotations_47_decorators__});
  module.exports = $traceurRuntime.exportStar({__esModule: true}, $__src_47_core_47_annotations_47_annotations__, $__src_47_core_47_annotations_47_decorators__);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/directives", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/directives/ng_for", "npm:angular2@2.0.0-alpha.24/src/directives/ng_if", "npm:angular2@2.0.0-alpha.24/src/directives/ng_non_bindable", "npm:angular2@2.0.0-alpha.24/src/directives/ng_switch", "npm:angular2@2.0.0-alpha.24/src/directives/class", "npm:angular2@2.0.0-alpha.24/src/directives/ng_for", "npm:angular2@2.0.0-alpha.24/src/directives/ng_if", "npm:angular2@2.0.0-alpha.24/src/directives/ng_non_bindable", "npm:angular2@2.0.0-alpha.24/src/directives/ng_switch"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  var $__src_47_facade_47_lang__,
      $__src_47_directives_47_ng_95_for__,
      $__src_47_directives_47_ng_95_if__,
      $__src_47_directives_47_ng_95_non_95_bindable__,
      $__src_47_directives_47_ng_95_switch__,
      $__src_47_directives_47_class__,
      $__src_47_directives_47_ng_95_for__,
      $__src_47_directives_47_ng_95_if__,
      $__src_47_directives_47_ng_95_non_95_bindable__,
      $__src_47_directives_47_ng_95_switch__;
  var CONST_EXPR = ($__src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__src_47_facade_47_lang__ && $__src_47_facade_47_lang__.__esModule && $__src_47_facade_47_lang__ || {default: $__src_47_facade_47_lang__}).CONST_EXPR;
  var NgFor = ($__src_47_directives_47_ng_95_for__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_for"), $__src_47_directives_47_ng_95_for__ && $__src_47_directives_47_ng_95_for__.__esModule && $__src_47_directives_47_ng_95_for__ || {default: $__src_47_directives_47_ng_95_for__}).NgFor;
  var NgIf = ($__src_47_directives_47_ng_95_if__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_if"), $__src_47_directives_47_ng_95_if__ && $__src_47_directives_47_ng_95_if__.__esModule && $__src_47_directives_47_ng_95_if__ || {default: $__src_47_directives_47_ng_95_if__}).NgIf;
  var NgNonBindable = ($__src_47_directives_47_ng_95_non_95_bindable__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_non_bindable"), $__src_47_directives_47_ng_95_non_95_bindable__ && $__src_47_directives_47_ng_95_non_95_bindable__.__esModule && $__src_47_directives_47_ng_95_non_95_bindable__ || {default: $__src_47_directives_47_ng_95_non_95_bindable__}).NgNonBindable;
  var $__4 = ($__src_47_directives_47_ng_95_switch__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_switch"), $__src_47_directives_47_ng_95_switch__ && $__src_47_directives_47_ng_95_switch__.__esModule && $__src_47_directives_47_ng_95_switch__ || {default: $__src_47_directives_47_ng_95_switch__}),
      NgSwitch = $__4.NgSwitch,
      NgSwitchWhen = $__4.NgSwitchWhen,
      NgSwitchDefault = $__4.NgSwitchDefault;
  var $__src_47_directives_47_class__ = ($__src_47_directives_47_class__ = require("npm:angular2@2.0.0-alpha.24/src/directives/class"), $__src_47_directives_47_class__ && $__src_47_directives_47_class__.__esModule && $__src_47_directives_47_class__ || {default: $__src_47_directives_47_class__});
  var $__src_47_directives_47_ng_95_for__ = ($__src_47_directives_47_ng_95_for__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_for"), $__src_47_directives_47_ng_95_for__ && $__src_47_directives_47_ng_95_for__.__esModule && $__src_47_directives_47_ng_95_for__ || {default: $__src_47_directives_47_ng_95_for__});
  var $__src_47_directives_47_ng_95_if__ = ($__src_47_directives_47_ng_95_if__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_if"), $__src_47_directives_47_ng_95_if__ && $__src_47_directives_47_ng_95_if__.__esModule && $__src_47_directives_47_ng_95_if__ || {default: $__src_47_directives_47_ng_95_if__});
  var $__src_47_directives_47_ng_95_non_95_bindable__ = ($__src_47_directives_47_ng_95_non_95_bindable__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_non_bindable"), $__src_47_directives_47_ng_95_non_95_bindable__ && $__src_47_directives_47_ng_95_non_95_bindable__.__esModule && $__src_47_directives_47_ng_95_non_95_bindable__ || {default: $__src_47_directives_47_ng_95_non_95_bindable__});
  var $__src_47_directives_47_ng_95_switch__ = ($__src_47_directives_47_ng_95_switch__ = require("npm:angular2@2.0.0-alpha.24/src/directives/ng_switch"), $__src_47_directives_47_ng_95_switch__ && $__src_47_directives_47_ng_95_switch__.__esModule && $__src_47_directives_47_ng_95_switch__ || {default: $__src_47_directives_47_ng_95_switch__});
  var coreDirectives = CONST_EXPR([NgFor, NgIf, NgNonBindable, NgSwitch, NgSwitchWhen, NgSwitchDefault]);
  module.exports = $traceurRuntime.exportStar({
    get coreDirectives() {
      return coreDirectives;
    },
    __esModule: true
  }, $__src_47_directives_47_class__, $__src_47_directives_47_ng_95_for__, $__src_47_directives_47_ng_95_if__, $__src_47_directives_47_ng_95_non_95_bindable__, $__src_47_directives_47_ng_95_switch__);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/forms/model", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/forms/validators"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    VALID: {get: function() {
        return VALID;
      }},
    INVALID: {get: function() {
        return INVALID;
      }},
    isControl: {get: function() {
        return isControl;
      }},
    Control: {get: function() {
        return Control;
      }},
    ControlGroup: {get: function() {
        return ControlGroup;
      }},
    ControlArray: {get: function() {
        return ControlArray;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_facade_47_collection__,
      $__validators__;
  var isPresent = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).isPresent;
  var $__1 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      Observable = $__1.Observable,
      EventEmitter = $__1.EventEmitter,
      ObservableWrapper = $__1.ObservableWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      StringMap = $__2.StringMap,
      StringMapWrapper = $__2.StringMapWrapper,
      ListWrapper = $__2.ListWrapper,
      List = $__2.List;
  var Validators = ($__validators__ = require("npm:angular2@2.0.0-alpha.24/src/forms/validators"), $__validators__ && $__validators__.__esModule && $__validators__ || {default: $__validators__}).Validators;
  var VALID = "VALID";
  var INVALID = "INVALID";
  function isControl(c) {
    return c instanceof AbstractControl;
  }
  Object.defineProperty(isControl, "parameters", {get: function() {
      return [[Object]];
    }});
  var AbstractControl = function AbstractControl(validator) {
    this.validator = validator;
    this._pristine = true;
  };
  ($traceurRuntime.createClass)(AbstractControl, {
    get value() {
      return this._value;
    },
    get status() {
      return this._status;
    },
    get valid() {
      return this._status === VALID;
    },
    get errors() {
      return this._errors;
    },
    get pristine() {
      return this._pristine;
    },
    get dirty() {
      return !this.pristine;
    },
    get valueChanges() {
      return this._valueChanges;
    },
    setParent: function(parent) {
      this._parent = parent;
    },
    _updateParent: function() {
      if (isPresent(this._parent)) {
        this._parent._updateValue();
      }
    }
  }, {});
  Object.defineProperty(AbstractControl, "parameters", {get: function() {
      return [[Function]];
    }});
  var Control = function Control(value) {
    var validator = arguments[1] !== (void 0) ? arguments[1] : Validators.nullValidator;
    $traceurRuntime.superConstructor($Control).call(this, validator);
    this._setValueErrorsStatus(value);
    this._valueChanges = new EventEmitter();
  };
  var $Control = Control;
  ($traceurRuntime.createClass)(Control, {
    updateValue: function(value) {
      this._setValueErrorsStatus(value);
      this._pristine = false;
      ObservableWrapper.callNext(this._valueChanges, this._value);
      this._updateParent();
    },
    _setValueErrorsStatus: function(value) {
      this._value = value;
      this._errors = this.validator(this);
      this._status = isPresent(this._errors) ? INVALID : VALID;
    }
  }, {}, AbstractControl);
  Object.defineProperty(Control, "parameters", {get: function() {
      return [[$traceurRuntime.type.any], [Function]];
    }});
  Object.defineProperty(Control.prototype.updateValue, "parameters", {get: function() {
      return [[$traceurRuntime.type.any]];
    }});
  var ControlGroup = function ControlGroup(controls) {
    var optionals = arguments[1] !== (void 0) ? arguments[1] : null;
    var validator = arguments[2] !== (void 0) ? arguments[2] : Validators.group;
    $traceurRuntime.superConstructor($ControlGroup).call(this, validator);
    this.controls = controls;
    this._optionals = isPresent(optionals) ? optionals : {};
    this._valueChanges = new EventEmitter();
    this._setParentForControls();
    this._setValueErrorsStatus();
  };
  var $ControlGroup = ControlGroup;
  ($traceurRuntime.createClass)(ControlGroup, {
    include: function(controlName) {
      StringMapWrapper.set(this._optionals, controlName, true);
      this._updateValue();
    },
    exclude: function(controlName) {
      StringMapWrapper.set(this._optionals, controlName, false);
      this._updateValue();
    },
    contains: function(controlName) {
      var c = StringMapWrapper.contains(this.controls, controlName);
      return c && this._included(controlName);
    },
    _setParentForControls: function() {
      var $__4 = this;
      StringMapWrapper.forEach(this.controls, (function(control, name) {
        control.setParent($__4);
      }));
    },
    _updateValue: function() {
      this._setValueErrorsStatus();
      this._pristine = false;
      ObservableWrapper.callNext(this._valueChanges, this._value);
      this._updateParent();
    },
    _setValueErrorsStatus: function() {
      this._value = this._reduceValue();
      this._errors = this.validator(this);
      this._status = isPresent(this._errors) ? INVALID : VALID;
    },
    _reduceValue: function() {
      return this._reduceChildren({}, (function(acc, control, name) {
        acc[name] = control.value;
        return acc;
      }));
    },
    _reduceChildren: function(initValue, fn) {
      var $__4 = this;
      var res = initValue;
      StringMapWrapper.forEach(this.controls, (function(control, name) {
        if ($__4._included(name)) {
          res = fn(res, control, name);
        }
      }));
      return res;
    },
    _included: function(controlName) {
      var isOptional = StringMapWrapper.contains(this._optionals, controlName);
      return !isOptional || StringMapWrapper.get(this._optionals, controlName);
    }
  }, {}, AbstractControl);
  Object.defineProperty(ControlGroup, "parameters", {get: function() {
      return [[StringMap], [StringMap], [Function]];
    }});
  Object.defineProperty(ControlGroup.prototype.include, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ControlGroup.prototype.exclude, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ControlGroup.prototype.contains, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  Object.defineProperty(ControlGroup.prototype._reduceChildren, "parameters", {get: function() {
      return [[$traceurRuntime.type.any], [Function]];
    }});
  Object.defineProperty(ControlGroup.prototype._included, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  var ControlArray = function ControlArray(controls) {
    var validator = arguments[1] !== (void 0) ? arguments[1] : Validators.array;
    $traceurRuntime.superConstructor($ControlArray).call(this, validator);
    this.controls = controls;
    this._valueChanges = new EventEmitter();
    this._setParentForControls();
    this._setValueErrorsStatus();
  };
  var $ControlArray = ControlArray;
  ($traceurRuntime.createClass)(ControlArray, {
    at: function(index) {
      return this.controls[index];
    },
    push: function(control) {
      ListWrapper.push(this.controls, control);
      control.setParent(this);
      this._updateValue();
    },
    insert: function(index, control) {
      ListWrapper.insert(this.controls, index, control);
      control.setParent(this);
      this._updateValue();
    },
    removeAt: function(index) {
      ListWrapper.removeAt(this.controls, index);
      this._updateValue();
    },
    get length() {
      return this.controls.length;
    },
    _updateValue: function() {
      this._setValueErrorsStatus();
      this._pristine = false;
      ObservableWrapper.callNext(this._valueChanges, this._value);
      this._updateParent();
    },
    _setParentForControls: function() {
      var $__4 = this;
      ListWrapper.forEach(this.controls, (function(control) {
        control.setParent($__4);
      }));
    },
    _setValueErrorsStatus: function() {
      this._value = ListWrapper.map(this.controls, (function(c) {
        return c.value;
      }));
      this._errors = this.validator(this);
      this._status = isPresent(this._errors) ? INVALID : VALID;
    }
  }, {}, AbstractControl);
  Object.defineProperty(ControlArray, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, AbstractControl)], [Function]];
    }});
  Object.defineProperty(ControlArray.prototype.at, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ControlArray.prototype.push, "parameters", {get: function() {
      return [[AbstractControl]];
    }});
  Object.defineProperty(ControlArray.prototype.insert, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [AbstractControl]];
    }});
  Object.defineProperty(ControlArray.prototype.removeAt, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/dom/browser_adapter", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/dom/generic_browser_adapter"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var dom_adapter_1 = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter");
  var generic_browser_adapter_1 = require("npm:angular2@2.0.0-alpha.24/src/dom/generic_browser_adapter");
  exports.__esModule = true;
  var _attrToPropMap = {
    'innerHtml': 'innerHTML',
    'readonly': 'readOnly',
    'tabindex': 'tabIndex'
  };
  var DOM_KEY_LOCATION_NUMPAD = 3;
  var _keyMap = {
    '\b': 'Backspace',
    '\t': 'Tab',
    '\x7F': 'Delete',
    '\x1B': 'Escape',
    'Del': 'Delete',
    'Esc': 'Escape',
    'Left': 'ArrowLeft',
    'Right': 'ArrowRight',
    'Up': 'ArrowUp',
    'Down': 'ArrowDown',
    'Menu': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'Win': 'OS'
  };
  var _chromeNumKeyPadMap = {
    'A': '1',
    'B': '2',
    'C': '3',
    'D': '4',
    'E': '5',
    'F': '6',
    'G': '7',
    'H': '8',
    'I': '9',
    'J': '*',
    'K': '+',
    'M': '-',
    'N': '.',
    'O': '/',
    '\x60': '0',
    '\x90': 'NumLock'
  };
  var BrowserDomAdapter = (function(_super) {
    __extends(BrowserDomAdapter, _super);
    function BrowserDomAdapter() {
      _super.apply(this, arguments);
    }
    BrowserDomAdapter.makeCurrent = function() {
      dom_adapter_1.setRootDomAdapter(new BrowserDomAdapter());
    };
    BrowserDomAdapter.prototype.logError = function(error) {
      window.console.error(error);
    };
    Object.defineProperty(BrowserDomAdapter.prototype, "attrToPropMap", {
      get: function() {
        return _attrToPropMap;
      },
      enumerable: true,
      configurable: true
    });
    BrowserDomAdapter.prototype.query = function(selector) {
      return document.querySelector(selector);
    };
    BrowserDomAdapter.prototype.querySelector = function(el, selector) {
      return el.querySelector(selector);
    };
    BrowserDomAdapter.prototype.querySelectorAll = function(el, selector) {
      return el.querySelectorAll(selector);
    };
    BrowserDomAdapter.prototype.on = function(el, evt, listener) {
      el.addEventListener(evt, listener, false);
    };
    BrowserDomAdapter.prototype.onAndCancel = function(el, evt, listener) {
      el.addEventListener(evt, listener, false);
      return function() {
        el.removeEventListener(evt, listener, false);
      };
    };
    BrowserDomAdapter.prototype.dispatchEvent = function(el, evt) {
      el.dispatchEvent(evt);
    };
    BrowserDomAdapter.prototype.createMouseEvent = function(eventType) {
      var evt = new MouseEvent(eventType);
      evt.initEvent(eventType, true, true);
      return evt;
    };
    BrowserDomAdapter.prototype.createEvent = function(eventType) {
      return new Event(eventType, true);
    };
    BrowserDomAdapter.prototype.getInnerHTML = function(el) {
      return el.innerHTML;
    };
    BrowserDomAdapter.prototype.getOuterHTML = function(el) {
      return el.outerHTML;
    };
    BrowserDomAdapter.prototype.nodeName = function(node) {
      return node.nodeName;
    };
    BrowserDomAdapter.prototype.nodeValue = function(node) {
      return node.nodeValue;
    };
    BrowserDomAdapter.prototype.type = function(node) {
      return node.type;
    };
    BrowserDomAdapter.prototype.content = function(node) {
      if (this.hasProperty(node, "content")) {
        return node.content;
      } else {
        return node;
      }
    };
    BrowserDomAdapter.prototype.firstChild = function(el) {
      return el.firstChild;
    };
    BrowserDomAdapter.prototype.nextSibling = function(el) {
      return el.nextSibling;
    };
    BrowserDomAdapter.prototype.parentElement = function(el) {
      return el.parentElement;
    };
    BrowserDomAdapter.prototype.childNodes = function(el) {
      return el.childNodes;
    };
    BrowserDomAdapter.prototype.childNodesAsList = function(el) {
      var childNodes = el.childNodes;
      var res = collection_1.ListWrapper.createFixedSize(childNodes.length);
      for (var i = 0; i < childNodes.length; i++) {
        res[i] = childNodes[i];
      }
      return res;
    };
    BrowserDomAdapter.prototype.clearNodes = function(el) {
      for (var i = 0; i < el.childNodes.length; i++) {
        this.remove(el.childNodes[i]);
      }
    };
    BrowserDomAdapter.prototype.appendChild = function(el, node) {
      el.appendChild(node);
    };
    BrowserDomAdapter.prototype.removeChild = function(el, node) {
      el.removeChild(node);
    };
    BrowserDomAdapter.prototype.replaceChild = function(el, newChild, oldChild) {
      el.replaceChild(newChild, oldChild);
    };
    BrowserDomAdapter.prototype.remove = function(el) {
      var parent = el.parentNode;
      parent.removeChild(el);
      return el;
    };
    BrowserDomAdapter.prototype.insertBefore = function(el, node) {
      el.parentNode.insertBefore(node, el);
    };
    BrowserDomAdapter.prototype.insertAllBefore = function(el, nodes) {
      collection_1.ListWrapper.forEach(nodes, function(n) {
        el.parentNode.insertBefore(n, el);
      });
    };
    BrowserDomAdapter.prototype.insertAfter = function(el, node) {
      el.parentNode.insertBefore(node, el.nextSibling);
    };
    BrowserDomAdapter.prototype.setInnerHTML = function(el, value) {
      el.innerHTML = value;
    };
    BrowserDomAdapter.prototype.getText = function(el) {
      return el.textContent;
    };
    BrowserDomAdapter.prototype.setText = function(el, value) {
      el.textContent = value;
    };
    BrowserDomAdapter.prototype.getValue = function(el) {
      return el.value;
    };
    BrowserDomAdapter.prototype.setValue = function(el, value) {
      el.value = value;
    };
    BrowserDomAdapter.prototype.getChecked = function(el) {
      return el.checked;
    };
    BrowserDomAdapter.prototype.setChecked = function(el, value) {
      el.checked = value;
    };
    BrowserDomAdapter.prototype.createTemplate = function(html) {
      var t = document.createElement('template');
      t.innerHTML = html;
      return t;
    };
    BrowserDomAdapter.prototype.createElement = function(tagName, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createElement(tagName);
    };
    BrowserDomAdapter.prototype.createTextNode = function(text, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createTextNode(text);
    };
    BrowserDomAdapter.prototype.createScriptTag = function(attrName, attrValue, doc) {
      if (doc === void 0) {
        doc = document;
      }
      var el = doc.createElement('SCRIPT');
      el.setAttribute(attrName, attrValue);
      return el;
    };
    BrowserDomAdapter.prototype.createStyleElement = function(css, doc) {
      if (doc === void 0) {
        doc = document;
      }
      var style = doc.createElement('STYLE');
      style.innerText = css;
      return style;
    };
    BrowserDomAdapter.prototype.createShadowRoot = function(el) {
      return el.createShadowRoot();
    };
    BrowserDomAdapter.prototype.getShadowRoot = function(el) {
      return el.shadowRoot;
    };
    BrowserDomAdapter.prototype.getHost = function(el) {
      return el.host;
    };
    BrowserDomAdapter.prototype.clone = function(node) {
      return node.cloneNode(true);
    };
    BrowserDomAdapter.prototype.hasProperty = function(element, name) {
      return name in element;
    };
    BrowserDomAdapter.prototype.getElementsByClassName = function(element, name) {
      return element.getElementsByClassName(name);
    };
    BrowserDomAdapter.prototype.getElementsByTagName = function(element, name) {
      return element.getElementsByTagName(name);
    };
    BrowserDomAdapter.prototype.classList = function(element) {
      return Array.prototype.slice.call(element.classList, 0);
    };
    BrowserDomAdapter.prototype.addClass = function(element, classname) {
      element.classList.add(classname);
    };
    BrowserDomAdapter.prototype.removeClass = function(element, classname) {
      element.classList.remove(classname);
    };
    BrowserDomAdapter.prototype.hasClass = function(element, classname) {
      return element.classList.contains(classname);
    };
    BrowserDomAdapter.prototype.setStyle = function(element, stylename, stylevalue) {
      element.style[stylename] = stylevalue;
    };
    BrowserDomAdapter.prototype.removeStyle = function(element, stylename) {
      element.style[stylename] = null;
    };
    BrowserDomAdapter.prototype.getStyle = function(element, stylename) {
      return element.style[stylename];
    };
    BrowserDomAdapter.prototype.tagName = function(element) {
      return element.tagName;
    };
    BrowserDomAdapter.prototype.attributeMap = function(element) {
      var res = collection_1.MapWrapper.create();
      var elAttrs = element.attributes;
      for (var i = 0; i < elAttrs.length; i++) {
        var attrib = elAttrs[i];
        collection_1.MapWrapper.set(res, attrib.name, attrib.value);
      }
      return res;
    };
    BrowserDomAdapter.prototype.hasAttribute = function(element, attribute) {
      return element.hasAttribute(attribute);
    };
    BrowserDomAdapter.prototype.getAttribute = function(element, attribute) {
      return element.getAttribute(attribute);
    };
    BrowserDomAdapter.prototype.setAttribute = function(element, name, value) {
      element.setAttribute(name, value);
    };
    BrowserDomAdapter.prototype.removeAttribute = function(element, attribute) {
      return element.removeAttribute(attribute);
    };
    BrowserDomAdapter.prototype.templateAwareRoot = function(el) {
      return this.isTemplateElement(el) ? this.content(el) : el;
    };
    BrowserDomAdapter.prototype.createHtmlDocument = function() {
      return document.implementation.createHTMLDocument('fakeTitle');
    };
    BrowserDomAdapter.prototype.defaultDoc = function() {
      return document;
    };
    BrowserDomAdapter.prototype.getBoundingClientRect = function(el) {
      return el.getBoundingClientRect();
    };
    BrowserDomAdapter.prototype.getTitle = function() {
      return document.title;
    };
    BrowserDomAdapter.prototype.setTitle = function(newTitle) {
      document.title = newTitle;
    };
    BrowserDomAdapter.prototype.elementMatches = function(n, selector) {
      return n instanceof HTMLElement && n.matches(selector);
    };
    BrowserDomAdapter.prototype.isTemplateElement = function(el) {
      return el instanceof HTMLElement && el.nodeName == "TEMPLATE";
    };
    BrowserDomAdapter.prototype.isTextNode = function(node) {
      return node.nodeType === Node.TEXT_NODE;
    };
    BrowserDomAdapter.prototype.isCommentNode = function(node) {
      return node.nodeType === Node.COMMENT_NODE;
    };
    BrowserDomAdapter.prototype.isElementNode = function(node) {
      return node.nodeType === Node.ELEMENT_NODE;
    };
    BrowserDomAdapter.prototype.hasShadowRoot = function(node) {
      return node instanceof HTMLElement && lang_1.isPresent(node.shadowRoot);
    };
    BrowserDomAdapter.prototype.isShadowRoot = function(node) {
      return node instanceof DocumentFragment;
    };
    BrowserDomAdapter.prototype.importIntoDoc = function(node) {
      var result = document.importNode(node, true);
      if (this.isTemplateElement(result) && !this.content(result).childNodes.length && this.content(node).childNodes.length) {
        var childNodes = this.content(node).childNodes;
        for (var i = 0; i < childNodes.length; ++i) {
          this.content(result).appendChild(this.importIntoDoc(childNodes[i]));
        }
      }
      return result;
    };
    BrowserDomAdapter.prototype.isPageRule = function(rule) {
      return rule.type === CSSRule.PAGE_RULE;
    };
    BrowserDomAdapter.prototype.isStyleRule = function(rule) {
      return rule.type === CSSRule.STYLE_RULE;
    };
    BrowserDomAdapter.prototype.isMediaRule = function(rule) {
      return rule.type === CSSRule.MEDIA_RULE;
    };
    BrowserDomAdapter.prototype.isKeyframesRule = function(rule) {
      return rule.type === CSSRule.KEYFRAMES_RULE;
    };
    BrowserDomAdapter.prototype.getHref = function(el) {
      return el.href;
    };
    BrowserDomAdapter.prototype.getEventKey = function(event) {
      var key = event.key;
      if (lang_1.isBlank(key)) {
        key = event.keyIdentifier;
        if (lang_1.isBlank(key)) {
          return 'Unidentified';
        }
        if (key.startsWith('U+')) {
          key = String.fromCharCode(parseInt(key.substring(2), 16));
          if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {
            key = _chromeNumKeyPadMap[key];
          }
        }
      }
      if (_keyMap.hasOwnProperty(key)) {
        key = _keyMap[key];
      }
      return key;
    };
    BrowserDomAdapter.prototype.getGlobalEventTarget = function(target) {
      if (target == "window") {
        return window;
      } else if (target == "document") {
        return document;
      } else if (target == "body") {
        return document.body;
      }
    };
    BrowserDomAdapter.prototype.getHistory = function() {
      return window.history;
    };
    BrowserDomAdapter.prototype.getLocation = function() {
      return window.location;
    };
    BrowserDomAdapter.prototype.getBaseHref = function() {
      return relativePath(document.baseURI);
    };
    return BrowserDomAdapter;
  })(generic_browser_adapter_1.GenericBrowserDomAdapter);
  exports.BrowserDomAdapter = BrowserDomAdapter;
  var urlParsingNode = null;
  function relativePath(url) {
    if (lang_1.isBlank(urlParsingNode)) {
      urlParsingNode = document.createElement("a");
    }
    urlParsingNode.setAttribute('href', url);
    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/decorators", ["npm:angular2@2.0.0-alpha.24/src/di/annotations", "npm:angular2@2.0.0-alpha.24/src/util/decorators"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var annotations_1 = require("npm:angular2@2.0.0-alpha.24/src/di/annotations");
  var decorators_1 = require("npm:angular2@2.0.0-alpha.24/src/util/decorators");
  exports.Inject = decorators_1.makeParamDecorator(annotations_1.InjectAnnotation);
  exports.InjectPromise = decorators_1.makeParamDecorator(annotations_1.InjectPromiseAnnotation);
  exports.InjectLazy = decorators_1.makeParamDecorator(annotations_1.InjectLazyAnnotation);
  exports.Optional = decorators_1.makeParamDecorator(annotations_1.OptionalAnnotation);
  exports.Injectable = decorators_1.makeDecorator(annotations_1.InjectableAnnotation);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/reflection/reflection", ["npm:angular2@2.0.0-alpha.24/src/reflection/reflector", "npm:angular2@2.0.0-alpha.24/src/reflection/reflector", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection_capabilities"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var reflector_1 = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflector");
  var reflector_2 = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflector");
  exports.Reflector = reflector_2.Reflector;
  var reflection_capabilities_1 = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection_capabilities");
  exports.__esModule = true;
  exports.reflector = new reflector_1.Reflector(new reflection_capabilities_1.ReflectionCapabilities());
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/dynamic_change_detector", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/change_detection/abstract_change_detector", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record", "npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var abstract_change_detector_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/abstract_change_detector");
  var change_detection_util_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util");
  var proto_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record");
  var exceptions_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions");
  exports.__esModule = true;
  var DynamicChangeDetector = (function(_super) {
    __extends(DynamicChangeDetector, _super);
    function DynamicChangeDetector(changeControlStrategy, dispatcher, pipeRegistry, protos, directiveRecords) {
      _super.call(this);
      this.changeControlStrategy = changeControlStrategy;
      this.dispatcher = dispatcher;
      this.pipeRegistry = pipeRegistry;
      this.protos = protos;
      this.directiveRecords = directiveRecords;
      this.values = collection_1.ListWrapper.createFixedSize(protos.length + 1);
      this.pipes = collection_1.ListWrapper.createFixedSize(protos.length + 1);
      this.prevContexts = collection_1.ListWrapper.createFixedSize(protos.length + 1);
      this.changes = collection_1.ListWrapper.createFixedSize(protos.length + 1);
      collection_1.ListWrapper.fill(this.values, change_detection_util_1.uninitialized);
      collection_1.ListWrapper.fill(this.pipes, null);
      collection_1.ListWrapper.fill(this.prevContexts, change_detection_util_1.uninitialized);
      collection_1.ListWrapper.fill(this.changes, false);
      this.locals = null;
      this.directives = null;
    }
    DynamicChangeDetector.prototype.hydrate = function(context, locals, directives) {
      this.mode = change_detection_util_1.ChangeDetectionUtil.changeDetectionMode(this.changeControlStrategy);
      this.values[0] = context;
      this.locals = locals;
      this.directives = directives;
    };
    DynamicChangeDetector.prototype.dehydrate = function() {
      this._destroyPipes();
      collection_1.ListWrapper.fill(this.values, change_detection_util_1.uninitialized);
      collection_1.ListWrapper.fill(this.changes, false);
      collection_1.ListWrapper.fill(this.pipes, null);
      collection_1.ListWrapper.fill(this.prevContexts, change_detection_util_1.uninitialized);
      this.locals = null;
    };
    DynamicChangeDetector.prototype._destroyPipes = function() {
      for (var i = 0; i < this.pipes.length; ++i) {
        if (lang_1.isPresent(this.pipes[i])) {
          this.pipes[i].onDestroy();
        }
      }
    };
    DynamicChangeDetector.prototype.hydrated = function() {
      return this.values[0] !== change_detection_util_1.uninitialized;
    };
    DynamicChangeDetector.prototype.detectChangesInRecords = function(throwOnChange) {
      var protos = this.protos;
      var changes = null;
      var isChanged = false;
      for (var i = 0; i < protos.length; ++i) {
        var proto = protos[i];
        var bindingRecord = proto.bindingRecord;
        var directiveRecord = bindingRecord.directiveRecord;
        var change = this._check(proto, throwOnChange);
        if (lang_1.isPresent(change)) {
          this._updateDirectiveOrElement(change, bindingRecord);
          isChanged = true;
          changes = this._addChange(bindingRecord, change, changes);
        }
        if (proto.lastInDirective) {
          if (lang_1.isPresent(changes)) {
            this._getDirectiveFor(directiveRecord.directiveIndex).onChange(changes);
            changes = null;
          }
          if (isChanged && bindingRecord.isOnPushChangeDetection()) {
            this._getDetectorFor(directiveRecord.directiveIndex).markAsCheckOnce();
          }
          isChanged = false;
        }
      }
    };
    DynamicChangeDetector.prototype.callOnAllChangesDone = function() {
      var dirs = this.directiveRecords;
      for (var i = dirs.length - 1; i >= 0; --i) {
        var dir = dirs[i];
        if (dir.callOnAllChangesDone) {
          this._getDirectiveFor(dir.directiveIndex).onAllChangesDone();
        }
      }
    };
    DynamicChangeDetector.prototype._updateDirectiveOrElement = function(change, bindingRecord) {
      if (lang_1.isBlank(bindingRecord.directiveRecord)) {
        this.dispatcher.notifyOnBinding(bindingRecord, change.currentValue);
      } else {
        var directiveIndex = bindingRecord.directiveRecord.directiveIndex;
        bindingRecord.setter(this._getDirectiveFor(directiveIndex), change.currentValue);
      }
    };
    DynamicChangeDetector.prototype._addChange = function(bindingRecord, change, changes) {
      if (bindingRecord.callOnChange()) {
        return change_detection_util_1.ChangeDetectionUtil.addChange(changes, bindingRecord.propertyName, change);
      } else {
        return changes;
      }
    };
    DynamicChangeDetector.prototype._getDirectiveFor = function(directiveIndex) {
      return this.directives.getDirectiveFor(directiveIndex);
    };
    DynamicChangeDetector.prototype._getDetectorFor = function(directiveIndex) {
      return this.directives.getDetectorFor(directiveIndex);
    };
    DynamicChangeDetector.prototype._check = function(proto, throwOnChange) {
      try {
        if (proto.mode === proto_record_1.RECORD_TYPE_PIPE || proto.mode === proto_record_1.RECORD_TYPE_BINDING_PIPE) {
          return this._pipeCheck(proto, throwOnChange);
        } else {
          return this._referenceCheck(proto, throwOnChange);
        }
      } catch (e) {
        throw new exceptions_1.ChangeDetectionError(proto, e);
      }
    };
    DynamicChangeDetector.prototype._referenceCheck = function(proto, throwOnChange) {
      if (this._pureFuncAndArgsDidNotChange(proto)) {
        this._setChanged(proto, false);
        return null;
      }
      var prevValue = this._readSelf(proto);
      var currValue = this._calculateCurrValue(proto);
      if (!isSame(prevValue, currValue)) {
        if (proto.lastInBinding) {
          var change = change_detection_util_1.ChangeDetectionUtil.simpleChange(prevValue, currValue);
          if (throwOnChange)
            change_detection_util_1.ChangeDetectionUtil.throwOnChange(proto, change);
          this._writeSelf(proto, currValue);
          this._setChanged(proto, true);
          return change;
        } else {
          this._writeSelf(proto, currValue);
          this._setChanged(proto, true);
          return null;
        }
      } else {
        this._setChanged(proto, false);
        return null;
      }
    };
    DynamicChangeDetector.prototype._calculateCurrValue = function(proto) {
      switch (proto.mode) {
        case proto_record_1.RECORD_TYPE_SELF:
          return this._readContext(proto);
        case proto_record_1.RECORD_TYPE_CONST:
          return proto.funcOrValue;
        case proto_record_1.RECORD_TYPE_PROPERTY:
          var context = this._readContext(proto);
          return proto.funcOrValue(context);
        case proto_record_1.RECORD_TYPE_LOCAL:
          return this.locals.get(proto.name);
        case proto_record_1.RECORD_TYPE_INVOKE_METHOD:
          var context = this._readContext(proto);
          var args = this._readArgs(proto);
          return proto.funcOrValue(context, args);
        case proto_record_1.RECORD_TYPE_KEYED_ACCESS:
          var arg = this._readArgs(proto)[0];
          return this._readContext(proto)[arg];
        case proto_record_1.RECORD_TYPE_INVOKE_CLOSURE:
          return lang_1.FunctionWrapper.apply(this._readContext(proto), this._readArgs(proto));
        case proto_record_1.RECORD_TYPE_INTERPOLATE:
        case proto_record_1.RECORD_TYPE_PRIMITIVE_OP:
          return lang_1.FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto));
        default:
          throw new lang_1.BaseException("Unknown operation " + proto.mode);
      }
    };
    DynamicChangeDetector.prototype._pipeCheck = function(proto, throwOnChange) {
      var context = this._readContext(proto);
      var pipe = this._pipeFor(proto, context);
      var prevValue = this._readSelf(proto);
      var currValue = pipe.transform(context);
      if (!isSame(prevValue, currValue)) {
        currValue = change_detection_util_1.ChangeDetectionUtil.unwrapValue(currValue);
        if (proto.lastInBinding) {
          var change = change_detection_util_1.ChangeDetectionUtil.simpleChange(prevValue, currValue);
          if (throwOnChange)
            change_detection_util_1.ChangeDetectionUtil.throwOnChange(proto, change);
          this._writeSelf(proto, currValue);
          this._setChanged(proto, true);
          return change;
        } else {
          this._writeSelf(proto, currValue);
          this._setChanged(proto, true);
          return null;
        }
      } else {
        this._setChanged(proto, false);
        return null;
      }
    };
    DynamicChangeDetector.prototype._pipeFor = function(proto, context) {
      var storedPipe = this._readPipe(proto);
      if (lang_1.isPresent(storedPipe) && storedPipe.supports(context)) {
        return storedPipe;
      }
      if (lang_1.isPresent(storedPipe)) {
        storedPipe.onDestroy();
      }
      var cdr = proto.mode === proto_record_1.RECORD_TYPE_BINDING_PIPE ? this.ref : null;
      var pipe = this.pipeRegistry.get(proto.name, context, cdr);
      this._writePipe(proto, pipe);
      return pipe;
    };
    DynamicChangeDetector.prototype._readContext = function(proto) {
      if (proto.contextIndex == -1) {
        return this._getDirectiveFor(proto.directiveIndex);
      } else {
        return this.values[proto.contextIndex];
      }
      return this.values[proto.contextIndex];
    };
    DynamicChangeDetector.prototype._readSelf = function(proto) {
      return this.values[proto.selfIndex];
    };
    DynamicChangeDetector.prototype._writeSelf = function(proto, value) {
      this.values[proto.selfIndex] = value;
    };
    DynamicChangeDetector.prototype._readPipe = function(proto) {
      return this.pipes[proto.selfIndex];
    };
    DynamicChangeDetector.prototype._writePipe = function(proto, value) {
      this.pipes[proto.selfIndex] = value;
    };
    DynamicChangeDetector.prototype._setChanged = function(proto, value) {
      this.changes[proto.selfIndex] = value;
    };
    DynamicChangeDetector.prototype._pureFuncAndArgsDidNotChange = function(proto) {
      return proto.isPureFunction() && !this._argsChanged(proto);
    };
    DynamicChangeDetector.prototype._argsChanged = function(proto) {
      var args = proto.args;
      for (var i = 0; i < args.length; ++i) {
        if (this.changes[args[i]]) {
          return true;
        }
      }
      return false;
    };
    DynamicChangeDetector.prototype._readArgs = function(proto) {
      var res = collection_1.ListWrapper.createFixedSize(proto.args.length);
      var args = proto.args;
      for (var i = 0; i < args.length; ++i) {
        res[i] = this.values[args[i]];
      }
      return res;
    };
    return DynamicChangeDetector;
  })(abstract_change_detector_1.AbstractChangeDetector);
  exports.DynamicChangeDetector = DynamicChangeDetector;
  function isSame(a, b) {
    if (a === b)
      return true;
    if (a instanceof String && b instanceof String && a == b)
      return true;
    if ((a !== a) && (b !== b))
      return true;
    return false;
  }
  global.define = __define;
  return module.exports;
});

System.register("github:jspm/nodelibs-process@0.1.1/index", ["npm:process@0.10.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  module.exports = System._nodeRequire ? process : require("npm:process@0.10.1");
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/binding", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection", "npm:angular2@2.0.0-alpha.24/src/di/key", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/di/exceptions", "npm:angular2@2.0.0-alpha.24/src/di/forward_ref"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var reflection_1 = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection");
  var key_1 = require("npm:angular2@2.0.0-alpha.24/src/di/key");
  var annotations_impl_1 = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl");
  var exceptions_1 = require("npm:angular2@2.0.0-alpha.24/src/di/exceptions");
  var forward_ref_1 = require("npm:angular2@2.0.0-alpha.24/src/di/forward_ref");
  var Dependency = (function() {
    function Dependency(key, asPromise, lazy, optional, properties) {
      this.key = key;
      this.asPromise = asPromise;
      this.lazy = lazy;
      this.optional = optional;
      this.properties = properties;
    }
    Dependency.fromKey = function(key) {
      return new Dependency(key, false, false, false, []);
    };
    return Dependency;
  })();
  exports.Dependency = Dependency;
  var _EMPTY_LIST = [];
  var Binding = (function() {
    function Binding(token, _a) {
      var toClass = _a.toClass,
          toValue = _a.toValue,
          toAlias = _a.toAlias,
          toFactory = _a.toFactory,
          toAsyncFactory = _a.toAsyncFactory,
          deps = _a.deps;
      this.token = token;
      this.toClass = toClass;
      this.toValue = toValue;
      this.toAlias = toAlias;
      this.toFactory = toFactory;
      this.toAsyncFactory = toAsyncFactory;
      this.dependencies = deps;
    }
    Binding.prototype.resolve = function() {
      var _this = this;
      var factoryFn;
      var resolvedDeps;
      var isAsync = false;
      if (lang_1.isPresent(this.toClass)) {
        var toClass = forward_ref_1.resolveForwardRef(this.toClass);
        factoryFn = reflection_1.reflector.factory(toClass);
        resolvedDeps = _dependenciesFor(toClass);
      } else if (lang_1.isPresent(this.toAlias)) {
        factoryFn = function(aliasInstance) {
          return aliasInstance;
        };
        resolvedDeps = [Dependency.fromKey(key_1.Key.get(this.toAlias))];
      } else if (lang_1.isPresent(this.toFactory)) {
        factoryFn = this.toFactory;
        resolvedDeps = _constructDependencies(this.toFactory, this.dependencies);
      } else if (lang_1.isPresent(this.toAsyncFactory)) {
        factoryFn = this.toAsyncFactory;
        resolvedDeps = _constructDependencies(this.toAsyncFactory, this.dependencies);
        isAsync = true;
      } else {
        factoryFn = function() {
          return _this.toValue;
        };
        resolvedDeps = _EMPTY_LIST;
      }
      return new ResolvedBinding(key_1.Key.get(forward_ref_1.resolveForwardRef(this.token)), factoryFn, resolvedDeps, isAsync);
    };
    Binding = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object, Object])], Binding);
    return Binding;
  })();
  exports.Binding = Binding;
  var ResolvedBinding = (function() {
    function ResolvedBinding(key, factory, dependencies, providedAsPromise) {
      this.key = key;
      this.factory = factory;
      this.dependencies = dependencies;
      this.providedAsPromise = providedAsPromise;
    }
    return ResolvedBinding;
  })();
  exports.ResolvedBinding = ResolvedBinding;
  function bind(token) {
    return new BindingBuilder(token);
  }
  exports.bind = bind;
  var BindingBuilder = (function() {
    function BindingBuilder(token) {
      this.token = token;
    }
    BindingBuilder.prototype.toClass = function(type) {
      return new Binding(this.token, {toClass: type});
    };
    BindingBuilder.prototype.toValue = function(value) {
      return new Binding(this.token, {toValue: value});
    };
    BindingBuilder.prototype.toAlias = function(aliasToken) {
      return new Binding(this.token, {toAlias: aliasToken});
    };
    BindingBuilder.prototype.toFactory = function(factoryFunction, dependencies) {
      return new Binding(this.token, {
        toFactory: factoryFunction,
        deps: dependencies
      });
    };
    BindingBuilder.prototype.toAsyncFactory = function(factoryFunction, dependencies) {
      return new Binding(this.token, {
        toAsyncFactory: factoryFunction,
        deps: dependencies
      });
    };
    return BindingBuilder;
  })();
  exports.BindingBuilder = BindingBuilder;
  function _constructDependencies(factoryFunction, dependencies) {
    return lang_1.isBlank(dependencies) ? _dependenciesFor(factoryFunction) : collection_1.ListWrapper.map(dependencies, function(t) {
      return Dependency.fromKey(key_1.Key.get(forward_ref_1.resolveForwardRef(t)));
    });
  }
  function _dependenciesFor(typeOrFunc) {
    var params = reflection_1.reflector.parameters(typeOrFunc);
    if (lang_1.isBlank(params))
      return [];
    if (collection_1.ListWrapper.any(params, function(p) {
      return lang_1.isBlank(p);
    })) {
      throw new exceptions_1.NoAnnotationError(typeOrFunc);
    }
    return collection_1.ListWrapper.map(params, function(p) {
      return _extractToken(typeOrFunc, p);
    });
  }
  function _extractToken(typeOrFunc, annotations) {
    var depProps = [];
    var token = null;
    var optional = false;
    var lazy = false;
    var asPromise = false;
    for (var i = 0; i < annotations.length; ++i) {
      var paramAnnotation = annotations[i];
      if (paramAnnotation instanceof lang_1.Type) {
        token = paramAnnotation;
      } else if (paramAnnotation instanceof annotations_impl_1.Inject) {
        token = paramAnnotation.token;
      } else if (paramAnnotation instanceof annotations_impl_1.InjectPromise) {
        token = paramAnnotation.token;
        asPromise = true;
      } else if (paramAnnotation instanceof annotations_impl_1.InjectLazy) {
        token = paramAnnotation.token;
        lazy = true;
      } else if (paramAnnotation instanceof annotations_impl_1.Optional) {
        optional = true;
      } else if (paramAnnotation instanceof annotations_impl_1.DependencyAnnotation) {
        if (lang_1.isPresent(paramAnnotation.token)) {
          token = paramAnnotation.token;
        }
        collection_1.ListWrapper.push(depProps, paramAnnotation);
      }
    }
    token = forward_ref_1.resolveForwardRef(token);
    if (lang_1.isPresent(token)) {
      return _createDependency(token, asPromise, lazy, optional, depProps);
    } else {
      throw new exceptions_1.NoAnnotationError(typeOrFunc);
    }
  }
  function _createDependency(token, asPromise, lazy, optional, depProps) {
    return new Dependency(key_1.Key.get(token), asPromise, lazy, optional, depProps);
  }
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view", ["npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view_container", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    resolveInternalDomView: {get: function() {
        return resolveInternalDomView;
      }},
    DomViewRef: {get: function() {
        return DomViewRef;
      }},
    DomView: {get: function() {
        return DomView;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_change_95_detection__,
      $__angular2_47_src_47_facade_47_lang__,
      $__view_95_container__,
      $__proto_95_view__,
      $___46__46__47_shadow_95_dom_47_light_95_dom__,
      $___46__46__47_shadow_95_dom_47_content_95_tag__,
      $___46__46__47__46__46__47_api__;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__1.ListWrapper,
      MapWrapper = $__1.MapWrapper,
      Map = $__1.Map,
      StringMapWrapper = $__1.StringMapWrapper,
      List = $__1.List;
  var Locals = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Locals;
  var $__3 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      int = $__3.int,
      isPresent = $__3.isPresent,
      isBlank = $__3.isBlank,
      BaseException = $__3.BaseException;
  var DomViewContainer = ($__view_95_container__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view_container"), $__view_95_container__ && $__view_95_container__.__esModule && $__view_95_container__ || {default: $__view_95_container__}).DomViewContainer;
  var DomProtoView = ($__proto_95_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view"), $__proto_95_view__ && $__proto_95_view__.__esModule && $__proto_95_view__ || {default: $__proto_95_view__}).DomProtoView;
  var LightDom = ($___46__46__47_shadow_95_dom_47_light_95_dom__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom"), $___46__46__47_shadow_95_dom_47_light_95_dom__ && $___46__46__47_shadow_95_dom_47_light_95_dom__.__esModule && $___46__46__47_shadow_95_dom_47_light_95_dom__ || {default: $___46__46__47_shadow_95_dom_47_light_95_dom__}).LightDom;
  var Content = ($___46__46__47_shadow_95_dom_47_content_95_tag__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/content_tag"), $___46__46__47_shadow_95_dom_47_content_95_tag__ && $___46__46__47_shadow_95_dom_47_content_95_tag__.__esModule && $___46__46__47_shadow_95_dom_47_content_95_tag__ || {default: $___46__46__47_shadow_95_dom_47_content_95_tag__}).Content;
  var RenderViewRef = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).RenderViewRef;
  function resolveInternalDomView(viewRef) {
    var domViewRef = viewRef;
    return domViewRef._view;
  }
  Object.defineProperty(resolveInternalDomView, "parameters", {get: function() {
      return [[RenderViewRef]];
    }});
  var DomViewRef = function DomViewRef(view) {
    $traceurRuntime.superConstructor($DomViewRef).call(this);
    this._view = view;
  };
  var $DomViewRef = DomViewRef;
  ($traceurRuntime.createClass)(DomViewRef, {}, {}, RenderViewRef);
  Object.defineProperty(DomViewRef, "parameters", {get: function() {
      return [[DomView]];
    }});
  var NG_BINDING_CLASS = 'ng-binding';
  var DomView = function DomView(proto, rootNodes, boundTextNodes, boundElements, contentTags) {
    this.proto = proto;
    this.rootNodes = rootNodes;
    this.boundTextNodes = boundTextNodes;
    this.boundElements = boundElements;
    this.viewContainers = ListWrapper.createFixedSize(boundElements.length);
    this.contentTags = contentTags;
    this.lightDoms = ListWrapper.createFixedSize(boundElements.length);
    this.hostLightDom = null;
    this.hydrated = false;
    this.eventHandlerRemovers = [];
    this.eventDispatcher = null;
    this.shadowRoot = null;
  };
  ($traceurRuntime.createClass)(DomView, {
    getDirectParentLightDom: function(boundElementIndex) {
      var binder = this.proto.elementBinders[boundElementIndex];
      var destLightDom = null;
      if (binder.parentIndex !== -1 && binder.distanceToParent === 1) {
        destLightDom = this.lightDoms[binder.parentIndex];
      }
      return destLightDom;
    },
    setElementProperty: function(elementIndex, propertyName, value) {
      var setter = MapWrapper.get(this.proto.elementBinders[elementIndex].propertySetters, propertyName);
      setter(this.boundElements[elementIndex], value);
    },
    callAction: function(elementIndex, actionExpression, actionArgs) {
      var binder = this.proto.elementBinders[elementIndex];
      var hostAction = MapWrapper.get(binder.hostActions, actionExpression);
      hostAction.eval(this.boundElements[elementIndex], this._localsWithAction(actionArgs));
    },
    _localsWithAction: function(action) {
      var map = MapWrapper.create();
      MapWrapper.set(map, '$action', action);
      return new Locals(null, map);
    },
    setText: function(textIndex, value) {
      DOM.setText(this.boundTextNodes[textIndex], value);
    },
    dispatchEvent: function(elementIndex, eventName, event) {
      var allowDefaultBehavior = true;
      if (isPresent(this.eventDispatcher)) {
        var evalLocals = MapWrapper.create();
        MapWrapper.set(evalLocals, '$event', event);
        allowDefaultBehavior = this.eventDispatcher.dispatchEvent(elementIndex, eventName, evalLocals);
        if (!allowDefaultBehavior) {
          event.preventDefault();
        }
      }
      return allowDefaultBehavior;
    }
  }, {});
  Object.defineProperty(DomView, "parameters", {get: function() {
      return [[DomProtoView], [List], [List], [List], [List]];
    }});
  Object.defineProperty(DomView.prototype.getDirectParentLightDom, "parameters", {get: function() {
      return [[$traceurRuntime.type.number]];
    }});
  Object.defineProperty(DomView.prototype.setElementProperty, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(DomView.prototype.callAction, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(DomView.prototype._localsWithAction, "parameters", {get: function() {
      return [[Object]];
    }});
  Object.defineProperty(DomView.prototype.setText, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy", ["npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/util", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      EmulatedUnscopedShadowDomStrategy: {get: function() {
          return EmulatedUnscopedShadowDomStrategy;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_async__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $___46__46__47_view_47_view__,
        $__light_95_dom__,
        $__shadow_95_dom_95_strategy__,
        $__style_95_url_95_resolver__,
        $__util__;
    var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var viewModule = ($___46__46__47_view_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $___46__46__47_view_47_view__ && $___46__46__47_view_47_view__.__esModule && $___46__46__47_view_47_view__ || {default: $___46__46__47_view_47_view__});
    var LightDom = ($__light_95_dom__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/light_dom"), $__light_95_dom__ && $__light_95_dom__.__esModule && $__light_95_dom__ || {default: $__light_95_dom__}).LightDom;
    var ShadowDomStrategy = ($__shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $__shadow_95_dom_95_strategy__ && $__shadow_95_dom_95_strategy__.__esModule && $__shadow_95_dom_95_strategy__ || {default: $__shadow_95_dom_95_strategy__}).ShadowDomStrategy;
    var StyleUrlResolver = ($__style_95_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver"), $__style_95_url_95_resolver__ && $__style_95_url_95_resolver__.__esModule && $__style_95_url_95_resolver__ || {default: $__style_95_url_95_resolver__}).StyleUrlResolver;
    var insertSharedStyleText = ($__util__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/util"), $__util__ && $__util__.__esModule && $__util__ || {default: $__util__}).insertSharedStyleText;
    var EmulatedUnscopedShadowDomStrategy = function EmulatedUnscopedShadowDomStrategy(styleUrlResolver, styleHost) {
      $traceurRuntime.superConstructor($EmulatedUnscopedShadowDomStrategy).call(this);
      this.styleUrlResolver = styleUrlResolver;
      this.styleHost = styleHost;
    };
    var $EmulatedUnscopedShadowDomStrategy = EmulatedUnscopedShadowDomStrategy;
    ($traceurRuntime.createClass)(EmulatedUnscopedShadowDomStrategy, {
      hasNativeContentElement: function() {
        return false;
      },
      prepareShadowRoot: function(el) {
        return el;
      },
      constructLightDom: function(lightDomView, el) {
        return new LightDom(lightDomView, el);
      },
      processStyleElement: function(hostComponentId, templateUrl, styleEl) {
        var cssText = DOM.getText(styleEl);
        cssText = this.styleUrlResolver.resolveUrls(cssText, templateUrl);
        DOM.setText(styleEl, cssText);
        DOM.remove(styleEl);
        insertSharedStyleText(cssText, this.styleHost, styleEl);
        return null;
      }
    }, {}, ShadowDomStrategy);
    Object.defineProperty(EmulatedUnscopedShadowDomStrategy, "parameters", {get: function() {
        return [[StyleUrlResolver], []];
      }});
    Object.defineProperty(EmulatedUnscopedShadowDomStrategy.prototype.constructLightDom, "parameters", {get: function() {
        return [[viewModule.DomView], []];
      }});
    Object.defineProperty(EmulatedUnscopedShadowDomStrategy.prototype.processStyleElement, "parameters", {get: function() {
        return [[$traceurRuntime.type.string], [$traceurRuntime.type.string], []];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view_builder"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    CompileElement: {get: function() {
        return CompileElement;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_lang__,
      $___46__46__47_view_47_proto_95_view_95_builder__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__0.List,
      Map = $__0.Map,
      ListWrapper = $__0.ListWrapper,
      MapWrapper = $__0.MapWrapper;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      int = $__2.int,
      isBlank = $__2.isBlank,
      isPresent = $__2.isPresent,
      Type = $__2.Type,
      StringJoiner = $__2.StringJoiner,
      assertionsEnabled = $__2.assertionsEnabled;
  var $__3 = ($___46__46__47_view_47_proto_95_view_95_builder__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view_builder"), $___46__46__47_view_47_proto_95_view_95_builder__ && $___46__46__47_view_47_proto_95_view_95_builder__.__esModule && $___46__46__47_view_47_proto_95_view_95_builder__ || {default: $___46__46__47_view_47_proto_95_view_95_builder__}),
      ProtoViewBuilder = $__3.ProtoViewBuilder,
      ElementBinderBuilder = $__3.ElementBinderBuilder;
  var CompileElement = function CompileElement(element) {
    var compilationUnit = arguments[1] !== (void 0) ? arguments[1] : '';
    this.element = element;
    this._attrs = null;
    this._classList = null;
    this.isViewRoot = false;
    this.inheritedProtoView = null;
    this.inheritedElementBinder = null;
    this.distanceToInheritedBinder = 0;
    this.compileChildren = true;
    var tplDesc = assertionsEnabled() ? getElementDescription(element) : null;
    if (compilationUnit !== '') {
      this.elementDescription = compilationUnit;
      if (isPresent(tplDesc))
        this.elementDescription += ": " + tplDesc;
    } else {
      this.elementDescription = tplDesc;
    }
  };
  ($traceurRuntime.createClass)(CompileElement, {
    isBound: function() {
      return isPresent(this.inheritedElementBinder) && this.distanceToInheritedBinder === 0;
    },
    bindElement: function() {
      if (!this.isBound()) {
        var parentBinder = this.inheritedElementBinder;
        this.inheritedElementBinder = this.inheritedProtoView.bindElement(this.element, this.elementDescription);
        if (isPresent(parentBinder)) {
          this.inheritedElementBinder.setParent(parentBinder, this.distanceToInheritedBinder);
        }
        this.distanceToInheritedBinder = 0;
      }
      return this.inheritedElementBinder;
    },
    refreshAttrs: function() {
      this._attrs = null;
    },
    attrs: function() {
      if (isBlank(this._attrs)) {
        this._attrs = DOM.attributeMap(this.element);
      }
      return this._attrs;
    },
    refreshClassList: function() {
      this._classList = null;
    },
    classList: function() {
      if (isBlank(this._classList)) {
        this._classList = ListWrapper.create();
        var elClassList = DOM.classList(this.element);
        for (var i = 0; i < elClassList.length; i++) {
          ListWrapper.push(this._classList, elClassList[i]);
        }
      }
      return this._classList;
    }
  }, {});
  function getElementDescription(domElement) {
    var buf = new StringJoiner();
    var atts = DOM.attributeMap(domElement);
    buf.add("<");
    buf.add(DOM.tagName(domElement).toLowerCase());
    addDescriptionAttribute(buf, "id", MapWrapper.get(atts, "id"));
    addDescriptionAttribute(buf, "class", MapWrapper.get(atts, "class"));
    MapWrapper.forEach(atts, (function(attValue, attName) {
      if (attName !== "id" && attName !== "class") {
        addDescriptionAttribute(buf, attName, attValue);
      }
    }));
    buf.add(">");
    return buf.toString();
  }
  function addDescriptionAttribute(buffer, attName, attValue) {
    if (isPresent(attValue)) {
      if (attValue.length === 0) {
        buffer.add(' ' + attName);
      } else {
        buffer.add(' ' + attName + '="' + attValue + '"');
      }
    }
  }
  Object.defineProperty(addDescriptionAttribute, "parameters", {get: function() {
      return [[StringJoiner], [$traceurRuntime.type.string], []];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step_factory", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/property_binding_parser", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/text_interpolation_parser", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/directive_parser", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/view_splitter", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    CompileStepFactory: {get: function() {
        return CompileStepFactory;
      }},
    DefaultStepFactory: {get: function() {
        return DefaultStepFactory;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_change_95_detection__,
      $___46__46__47__46__46__47_api__,
      $__compile_95_step__,
      $__property_95_binding_95_parser__,
      $__text_95_interpolation_95_parser__,
      $__directive_95_parser__,
      $__view_95_splitter__,
      $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_compile_95_step__,
      $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__;
  var List = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}).List;
  var Promise = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}).Promise;
  var Parser = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Parser;
  var ViewDefinition = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).ViewDefinition;
  var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
  var PropertyBindingParser = ($__property_95_binding_95_parser__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/property_binding_parser"), $__property_95_binding_95_parser__ && $__property_95_binding_95_parser__.__esModule && $__property_95_binding_95_parser__ || {default: $__property_95_binding_95_parser__}).PropertyBindingParser;
  var TextInterpolationParser = ($__text_95_interpolation_95_parser__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/text_interpolation_parser"), $__text_95_interpolation_95_parser__ && $__text_95_interpolation_95_parser__.__esModule && $__text_95_interpolation_95_parser__ || {default: $__text_95_interpolation_95_parser__}).TextInterpolationParser;
  var DirectiveParser = ($__directive_95_parser__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/directive_parser"), $__directive_95_parser__ && $__directive_95_parser__.__esModule && $__directive_95_parser__ || {default: $__directive_95_parser__}).DirectiveParser;
  var ViewSplitter = ($__view_95_splitter__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/view_splitter"), $__view_95_splitter__ && $__view_95_splitter__.__esModule && $__view_95_splitter__ || {default: $__view_95_splitter__}).ViewSplitter;
  var ShadowDomCompileStep = ($___46__46__47_shadow_95_dom_47_shadow_95_dom_95_compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_compile_step"), $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_compile_95_step__ && $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_compile_95_step__.__esModule && $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_compile_95_step__ || {default: $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_compile_95_step__}).ShadowDomCompileStep;
  var ShadowDomStrategy = ($___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__ && $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__.__esModule && $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__ || {default: $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__}).ShadowDomStrategy;
  var CompileStepFactory = function CompileStepFactory() {
    ;
  };
  ($traceurRuntime.createClass)(CompileStepFactory, {createSteps: function(template, subTaskPromises) {
      return null;
    }}, {});
  Object.defineProperty(CompileStepFactory.prototype.createSteps, "parameters", {get: function() {
      return [[ViewDefinition], [$traceurRuntime.genericType(List, Promise)]];
    }});
  var DefaultStepFactory = function DefaultStepFactory(parser, shadowDomStrategy) {
    $traceurRuntime.superConstructor($DefaultStepFactory).call(this);
    this._parser = parser;
    this._shadowDomStrategy = shadowDomStrategy;
  };
  var $DefaultStepFactory = DefaultStepFactory;
  ($traceurRuntime.createClass)(DefaultStepFactory, {createSteps: function(template, subTaskPromises) {
      return [new ViewSplitter(this._parser), new PropertyBindingParser(this._parser), new DirectiveParser(this._parser, template.directives), new TextInterpolationParser(this._parser), new ShadowDomCompileStep(this._shadowDomStrategy, template, subTaskPromises)];
    }}, {}, CompileStepFactory);
  Object.defineProperty(DefaultStepFactory, "parameters", {get: function() {
      return [[Parser], []];
    }});
  Object.defineProperty(DefaultStepFactory.prototype.createSteps, "parameters", {get: function() {
      return [[ViewDefinition], [$traceurRuntime.genericType(List, Promise)]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/forms", ["npm:angular2@2.0.0-alpha.24/src/forms/model", "npm:angular2@2.0.0-alpha.24/src/forms/directives", "npm:angular2@2.0.0-alpha.24/src/forms/validators", "npm:angular2@2.0.0-alpha.24/src/forms/validator_directives", "npm:angular2@2.0.0-alpha.24/src/forms/form_builder"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  var $__src_47_forms_47_model__,
      $__src_47_forms_47_directives__,
      $__src_47_forms_47_validators__,
      $__src_47_forms_47_validator_95_directives__,
      $__src_47_forms_47_form_95_builder__;
  var $__src_47_forms_47_model__ = ($__src_47_forms_47_model__ = require("npm:angular2@2.0.0-alpha.24/src/forms/model"), $__src_47_forms_47_model__ && $__src_47_forms_47_model__.__esModule && $__src_47_forms_47_model__ || {default: $__src_47_forms_47_model__});
  var $__src_47_forms_47_directives__ = ($__src_47_forms_47_directives__ = require("npm:angular2@2.0.0-alpha.24/src/forms/directives"), $__src_47_forms_47_directives__ && $__src_47_forms_47_directives__.__esModule && $__src_47_forms_47_directives__ || {default: $__src_47_forms_47_directives__});
  var $__src_47_forms_47_validators__ = ($__src_47_forms_47_validators__ = require("npm:angular2@2.0.0-alpha.24/src/forms/validators"), $__src_47_forms_47_validators__ && $__src_47_forms_47_validators__.__esModule && $__src_47_forms_47_validators__ || {default: $__src_47_forms_47_validators__});
  var $__src_47_forms_47_validator_95_directives__ = ($__src_47_forms_47_validator_95_directives__ = require("npm:angular2@2.0.0-alpha.24/src/forms/validator_directives"), $__src_47_forms_47_validator_95_directives__ && $__src_47_forms_47_validator_95_directives__.__esModule && $__src_47_forms_47_validator_95_directives__ || {default: $__src_47_forms_47_validator_95_directives__});
  var $__src_47_forms_47_form_95_builder__ = ($__src_47_forms_47_form_95_builder__ = require("npm:angular2@2.0.0-alpha.24/src/forms/form_builder"), $__src_47_forms_47_form_95_builder__ && $__src_47_forms_47_form_95_builder__.__esModule && $__src_47_forms_47_form_95_builder__ || {default: $__src_47_forms_47_form_95_builder__});
  module.exports = $traceurRuntime.exportStar({__esModule: true}, $__src_47_forms_47_model__, $__src_47_forms_47_directives__, $__src_47_forms_47_validators__, $__src_47_forms_47_validator_95_directives__, $__src_47_forms_47_form_95_builder__);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/lexer", ["npm:angular2@2.0.0-alpha.24/src/di/decorators", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var decorators_1 = require("npm:angular2@2.0.0-alpha.24/src/di/decorators");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  exports.TOKEN_TYPE_CHARACTER = 1;
  exports.TOKEN_TYPE_IDENTIFIER = 2;
  exports.TOKEN_TYPE_KEYWORD = 3;
  exports.TOKEN_TYPE_STRING = 4;
  exports.TOKEN_TYPE_OPERATOR = 5;
  exports.TOKEN_TYPE_NUMBER = 6;
  var Lexer = (function() {
    function Lexer() {}
    Lexer.prototype.tokenize = function(text) {
      var scanner = new _Scanner(text);
      var tokens = [];
      var token = scanner.scanToken();
      while (token != null) {
        collection_1.ListWrapper.push(tokens, token);
        token = scanner.scanToken();
      }
      return tokens;
    };
    Lexer = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [])], Lexer);
    return Lexer;
  })();
  exports.Lexer = Lexer;
  var Token = (function() {
    function Token(index, type, numValue, strValue) {
      this.index = index;
      this.type = type;
      this.numValue = numValue;
      this.strValue = strValue;
    }
    Token.prototype.isCharacter = function(code) {
      return (this.type == exports.TOKEN_TYPE_CHARACTER && this.numValue == code);
    };
    Token.prototype.isNumber = function() {
      return (this.type == exports.TOKEN_TYPE_NUMBER);
    };
    Token.prototype.isString = function() {
      return (this.type == exports.TOKEN_TYPE_STRING);
    };
    Token.prototype.isOperator = function(operater) {
      return (this.type == exports.TOKEN_TYPE_OPERATOR && this.strValue == operater);
    };
    Token.prototype.isIdentifier = function() {
      return (this.type == exports.TOKEN_TYPE_IDENTIFIER);
    };
    Token.prototype.isKeyword = function() {
      return (this.type == exports.TOKEN_TYPE_KEYWORD);
    };
    Token.prototype.isKeywordVar = function() {
      return (this.type == exports.TOKEN_TYPE_KEYWORD && this.strValue == "var");
    };
    Token.prototype.isKeywordNull = function() {
      return (this.type == exports.TOKEN_TYPE_KEYWORD && this.strValue == "null");
    };
    Token.prototype.isKeywordUndefined = function() {
      return (this.type == exports.TOKEN_TYPE_KEYWORD && this.strValue == "undefined");
    };
    Token.prototype.isKeywordTrue = function() {
      return (this.type == exports.TOKEN_TYPE_KEYWORD && this.strValue == "true");
    };
    Token.prototype.isKeywordFalse = function() {
      return (this.type == exports.TOKEN_TYPE_KEYWORD && this.strValue == "false");
    };
    Token.prototype.toNumber = function() {
      return (this.type == exports.TOKEN_TYPE_NUMBER) ? this.numValue : -1;
    };
    Token.prototype.toString = function() {
      var t = this.type;
      if (t >= exports.TOKEN_TYPE_CHARACTER && t <= exports.TOKEN_TYPE_STRING) {
        return this.strValue;
      } else if (t == exports.TOKEN_TYPE_NUMBER) {
        return this.numValue.toString();
      } else {
        return null;
      }
    };
    return Token;
  })();
  exports.Token = Token;
  function newCharacterToken(index, code) {
    return new Token(index, exports.TOKEN_TYPE_CHARACTER, code, lang_1.StringWrapper.fromCharCode(code));
  }
  function newIdentifierToken(index, text) {
    return new Token(index, exports.TOKEN_TYPE_IDENTIFIER, 0, text);
  }
  function newKeywordToken(index, text) {
    return new Token(index, exports.TOKEN_TYPE_KEYWORD, 0, text);
  }
  function newOperatorToken(index, text) {
    return new Token(index, exports.TOKEN_TYPE_OPERATOR, 0, text);
  }
  function newStringToken(index, text) {
    return new Token(index, exports.TOKEN_TYPE_STRING, 0, text);
  }
  function newNumberToken(index, n) {
    return new Token(index, exports.TOKEN_TYPE_NUMBER, n, "");
  }
  exports.EOF = new Token(-1, 0, 0, "");
  exports.$EOF = 0;
  exports.$TAB = 9;
  exports.$LF = 10;
  exports.$VTAB = 11;
  exports.$FF = 12;
  exports.$CR = 13;
  exports.$SPACE = 32;
  exports.$BANG = 33;
  exports.$DQ = 34;
  exports.$HASH = 35;
  exports.$$ = 36;
  exports.$PERCENT = 37;
  exports.$AMPERSAND = 38;
  exports.$SQ = 39;
  exports.$LPAREN = 40;
  exports.$RPAREN = 41;
  exports.$STAR = 42;
  exports.$PLUS = 43;
  exports.$COMMA = 44;
  exports.$MINUS = 45;
  exports.$PERIOD = 46;
  exports.$SLASH = 47;
  exports.$COLON = 58;
  exports.$SEMICOLON = 59;
  exports.$LT = 60;
  exports.$EQ = 61;
  exports.$GT = 62;
  exports.$QUESTION = 63;
  var $0 = 48;
  var $9 = 57;
  var $A = 65,
      $E = 69,
      $Z = 90;
  exports.$LBRACKET = 91;
  exports.$BACKSLASH = 92;
  exports.$RBRACKET = 93;
  var $CARET = 94;
  var $_ = 95;
  var $a = 97,
      $e = 101,
      $f = 102,
      $n = 110,
      $r = 114,
      $t = 116,
      $u = 117,
      $v = 118,
      $z = 122;
  exports.$LBRACE = 123;
  exports.$BAR = 124;
  exports.$RBRACE = 125;
  var $NBSP = 160;
  var ScannerError = (function(_super) {
    __extends(ScannerError, _super);
    function ScannerError(message) {
      _super.call(this);
      this.message = message;
    }
    ScannerError.prototype.toString = function() {
      return this.message;
    };
    return ScannerError;
  })(lang_1.BaseException);
  exports.ScannerError = ScannerError;
  var _Scanner = (function() {
    function _Scanner(input) {
      this.input = input;
      this.length = input.length;
      this.peek = 0;
      this.index = -1;
      this.advance();
    }
    _Scanner.prototype.advance = function() {
      this.peek = ++this.index >= this.length ? exports.$EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index);
    };
    _Scanner.prototype.scanToken = function() {
      var input = this.input,
          length = this.length,
          peek = this.peek,
          index = this.index;
      while (peek <= exports.$SPACE) {
        if (++index >= length) {
          peek = exports.$EOF;
          break;
        } else {
          peek = lang_1.StringWrapper.charCodeAt(input, index);
        }
      }
      this.peek = peek;
      this.index = index;
      if (index >= length) {
        return null;
      }
      if (isIdentifierStart(peek))
        return this.scanIdentifier();
      if (isDigit(peek))
        return this.scanNumber(index);
      var start = index;
      switch (peek) {
        case exports.$PERIOD:
          this.advance();
          return isDigit(this.peek) ? this.scanNumber(start) : newCharacterToken(start, exports.$PERIOD);
        case exports.$LPAREN:
        case exports.$RPAREN:
        case exports.$LBRACE:
        case exports.$RBRACE:
        case exports.$LBRACKET:
        case exports.$RBRACKET:
        case exports.$COMMA:
        case exports.$COLON:
        case exports.$SEMICOLON:
          return this.scanCharacter(start, peek);
        case exports.$SQ:
        case exports.$DQ:
          return this.scanString();
        case exports.$HASH:
          return this.scanOperator(start, lang_1.StringWrapper.fromCharCode(peek));
        case exports.$PLUS:
        case exports.$MINUS:
        case exports.$STAR:
        case exports.$SLASH:
        case exports.$PERCENT:
        case $CARET:
        case exports.$QUESTION:
          return this.scanOperator(start, lang_1.StringWrapper.fromCharCode(peek));
        case exports.$LT:
        case exports.$GT:
        case exports.$BANG:
        case exports.$EQ:
          return this.scanComplexOperator(start, exports.$EQ, lang_1.StringWrapper.fromCharCode(peek), '=');
        case exports.$AMPERSAND:
          return this.scanComplexOperator(start, exports.$AMPERSAND, '&', '&');
        case exports.$BAR:
          return this.scanComplexOperator(start, exports.$BAR, '|', '|');
        case $NBSP:
          while (isWhitespace(this.peek))
            this.advance();
          return this.scanToken();
      }
      this.error("Unexpected character [" + lang_1.StringWrapper.fromCharCode(peek) + "]", 0);
      return null;
    };
    _Scanner.prototype.scanCharacter = function(start, code) {
      assert(this.peek == code);
      this.advance();
      return newCharacterToken(start, code);
    };
    _Scanner.prototype.scanOperator = function(start, str) {
      assert(this.peek == lang_1.StringWrapper.charCodeAt(str, 0));
      assert(collection_1.SetWrapper.has(OPERATORS, str));
      this.advance();
      return newOperatorToken(start, str);
    };
    _Scanner.prototype.scanComplexOperator = function(start, code, one, two) {
      assert(this.peek == lang_1.StringWrapper.charCodeAt(one, 0));
      this.advance();
      var str = one;
      while (this.peek == code) {
        this.advance();
        str += two;
      }
      assert(collection_1.SetWrapper.has(OPERATORS, str));
      return newOperatorToken(start, str);
    };
    _Scanner.prototype.scanIdentifier = function() {
      assert(isIdentifierStart(this.peek));
      var start = this.index;
      this.advance();
      while (isIdentifierPart(this.peek))
        this.advance();
      var str = this.input.substring(start, this.index);
      if (collection_1.SetWrapper.has(KEYWORDS, str)) {
        return newKeywordToken(start, str);
      } else {
        return newIdentifierToken(start, str);
      }
    };
    _Scanner.prototype.scanNumber = function(start) {
      assert(isDigit(this.peek));
      var simple = (this.index === start);
      this.advance();
      while (true) {
        if (isDigit(this.peek)) {} else if (this.peek == exports.$PERIOD) {
          simple = false;
        } else if (isExponentStart(this.peek)) {
          this.advance();
          if (isExponentSign(this.peek))
            this.advance();
          if (!isDigit(this.peek))
            this.error('Invalid exponent', -1);
          simple = false;
        } else {
          break;
        }
        this.advance();
      }
      var str = this.input.substring(start, this.index);
      var value = simple ? lang_1.NumberWrapper.parseIntAutoRadix(str) : lang_1.NumberWrapper.parseFloat(str);
      return newNumberToken(start, value);
    };
    _Scanner.prototype.scanString = function() {
      assert(this.peek == exports.$SQ || this.peek == exports.$DQ);
      var start = this.index;
      var quote = this.peek;
      this.advance();
      var buffer;
      var marker = this.index;
      var input = this.input;
      while (this.peek != quote) {
        if (this.peek == exports.$BACKSLASH) {
          if (buffer == null)
            buffer = new lang_1.StringJoiner();
          buffer.add(input.substring(marker, this.index));
          this.advance();
          var unescapedCode;
          if (this.peek == $u) {
            var hex = input.substring(this.index + 1, this.index + 5);
            try {
              unescapedCode = lang_1.NumberWrapper.parseInt(hex, 16);
            } catch (e) {
              this.error("Invalid unicode escape [\\u" + hex + "]", 0);
            }
            for (var i = 0; i < 5; i++) {
              this.advance();
            }
          } else {
            unescapedCode = unescape(this.peek);
            this.advance();
          }
          buffer.add(lang_1.StringWrapper.fromCharCode(unescapedCode));
          marker = this.index;
        } else if (this.peek == exports.$EOF) {
          this.error('Unterminated quote', 0);
        } else {
          this.advance();
        }
      }
      var last = input.substring(marker, this.index);
      this.advance();
      var unescaped = last;
      if (buffer != null) {
        buffer.add(last);
        unescaped = buffer.toString();
      }
      return newStringToken(start, unescaped);
    };
    _Scanner.prototype.error = function(message, offset) {
      var position = this.index + offset;
      throw new ScannerError("Lexer Error: " + message + " at column " + position + " in expression [" + this.input + "]");
    };
    return _Scanner;
  })();
  function isWhitespace(code) {
    return (code >= exports.$TAB && code <= exports.$SPACE) || (code == $NBSP);
  }
  function isIdentifierStart(code) {
    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) || (code == $_) || (code == exports.$$);
  }
  function isIdentifierPart(code) {
    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) || ($0 <= code && code <= $9) || (code == $_) || (code == exports.$$);
  }
  function isDigit(code) {
    return $0 <= code && code <= $9;
  }
  function isExponentStart(code) {
    return code == $e || code == $E;
  }
  function isExponentSign(code) {
    return code == exports.$MINUS || code == exports.$PLUS;
  }
  function unescape(code) {
    switch (code) {
      case $n:
        return exports.$LF;
      case $f:
        return exports.$FF;
      case $r:
        return exports.$CR;
      case $t:
        return exports.$TAB;
      case $v:
        return exports.$VTAB;
      default:
        return code;
    }
  }
  var OPERATORS = collection_1.SetWrapper.createFromList(['+', '-', '*', '/', '%', '^', '=', '==', '!=', '===', '!==', '<', '>', '<=', '>=', '&&', '||', '&', '|', '!', '?', '#']);
  var KEYWORDS = collection_1.SetWrapper.createFromList(['var', 'null', 'undefined', 'true', 'false']);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/parser", ["npm:angular2@2.0.0-alpha.24/src/di/decorators", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/change_detection/parser/lexer", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection", "npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var decorators_1 = require("npm:angular2@2.0.0-alpha.24/src/di/decorators");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lexer_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/lexer");
  var reflection_1 = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection");
  var ast_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast");
  exports.__esModule = true;
  var _implicitReceiver = new ast_1.ImplicitReceiver();
  var INTERPOLATION_REGEXP = lang_1.RegExpWrapper.create('\\{\\{(.*?)\\}\\}');
  var Parser = (function() {
    function Parser(lexer, providedReflector) {
      if (providedReflector === void 0) {
        providedReflector = null;
      }
      this._lexer = lexer;
      this._reflector = lang_1.isPresent(providedReflector) ? providedReflector : reflection_1.reflector;
    }
    Parser.prototype.parseAction = function(input, location) {
      var tokens = this._lexer.tokenize(input);
      var ast = new _ParseAST(input, location, tokens, this._reflector, true).parseChain();
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.parseBinding = function(input, location) {
      var tokens = this._lexer.tokenize(input);
      var ast = new _ParseAST(input, location, tokens, this._reflector, false).parseChain();
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.addPipes = function(bindingAst, pipes) {
      if (collection_1.ListWrapper.isEmpty(pipes))
        return bindingAst;
      var res = collection_1.ListWrapper.reduce(pipes, function(result, currentPipeName) {
        return new ast_1.Pipe(result, currentPipeName, [], false);
      }, bindingAst.ast);
      return new ast_1.ASTWithSource(res, bindingAst.source, bindingAst.location);
    };
    Parser.prototype.parseTemplateBindings = function(input, location) {
      var tokens = this._lexer.tokenize(input);
      return new _ParseAST(input, location, tokens, this._reflector, false).parseTemplateBindings();
    };
    Parser.prototype.parseInterpolation = function(input, location) {
      var parts = lang_1.StringWrapper.split(input, INTERPOLATION_REGEXP);
      if (parts.length <= 1) {
        return null;
      }
      var strings = [];
      var expressions = [];
      for (var i = 0; i < parts.length; i++) {
        var part = parts[i];
        if (i % 2 === 0) {
          collection_1.ListWrapper.push(strings, part);
        } else {
          var tokens = this._lexer.tokenize(part);
          var ast = new _ParseAST(input, location, tokens, this._reflector, false).parseChain();
          collection_1.ListWrapper.push(expressions, ast);
        }
      }
      return new ast_1.ASTWithSource(new ast_1.Interpolation(strings, expressions), input, location);
    };
    Parser.prototype.wrapLiteralPrimitive = function(input, location) {
      return new ast_1.ASTWithSource(new ast_1.LiteralPrimitive(input), input, location);
    };
    Parser = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [lexer_1.Lexer, reflection_1.Reflector])], Parser);
    return Parser;
  })();
  exports.Parser = Parser;
  var _ParseAST = (function() {
    function _ParseAST(input, location, tokens, reflector, parseAction) {
      this.input = input;
      this.location = location;
      this.tokens = tokens;
      this.reflector = reflector;
      this.parseAction = parseAction;
      this.index = 0;
    }
    _ParseAST.prototype.peek = function(offset) {
      var i = this.index + offset;
      return i < this.tokens.length ? this.tokens[i] : lexer_1.EOF;
    };
    Object.defineProperty(_ParseAST.prototype, "next", {
      get: function() {
        return this.peek(0);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(_ParseAST.prototype, "inputIndex", {
      get: function() {
        return (this.index < this.tokens.length) ? this.next.index : this.input.length;
      },
      enumerable: true,
      configurable: true
    });
    _ParseAST.prototype.advance = function() {
      this.index++;
    };
    _ParseAST.prototype.optionalCharacter = function(code) {
      if (this.next.isCharacter(code)) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.optionalKeywordVar = function() {
      if (this.peekKeywordVar()) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.peekKeywordVar = function() {
      return this.next.isKeywordVar() || this.next.isOperator('#');
    };
    _ParseAST.prototype.expectCharacter = function(code) {
      if (this.optionalCharacter(code))
        return ;
      this.error("Missing expected " + lang_1.StringWrapper.fromCharCode(code));
    };
    _ParseAST.prototype.optionalOperator = function(op) {
      if (this.next.isOperator(op)) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.expectOperator = function(operator) {
      if (this.optionalOperator(operator))
        return ;
      this.error("Missing expected operator " + operator);
    };
    _ParseAST.prototype.expectIdentifierOrKeyword = function() {
      var n = this.next;
      if (!n.isIdentifier() && !n.isKeyword()) {
        this.error("Unexpected token " + n + ", expected identifier or keyword");
      }
      this.advance();
      return n.toString();
    };
    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function() {
      var n = this.next;
      if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {
        this.error("Unexpected token " + n + ", expected identifier, keyword, or string");
      }
      this.advance();
      return n.toString();
    };
    _ParseAST.prototype.parseChain = function() {
      var exprs = [];
      while (this.index < this.tokens.length) {
        var expr = this.parsePipe();
        collection_1.ListWrapper.push(exprs, expr);
        if (this.optionalCharacter(lexer_1.$SEMICOLON)) {
          if (!this.parseAction) {
            this.error("Binding expression cannot contain chained expression");
          }
          while (this.optionalCharacter(lexer_1.$SEMICOLON)) {}
        } else if (this.index < this.tokens.length) {
          this.error("Unexpected token '" + this.next + "'");
        }
      }
      if (exprs.length == 0)
        return new ast_1.EmptyExpr();
      if (exprs.length == 1)
        return exprs[0];
      return new ast_1.Chain(exprs);
    };
    _ParseAST.prototype.parsePipe = function() {
      var result = this.parseExpression();
      if (this.optionalOperator("|")) {
        return this.parseInlinedPipe(result);
      } else {
        return result;
      }
    };
    _ParseAST.prototype.parseExpression = function() {
      var start = this.inputIndex;
      var result = this.parseConditional();
      while (this.next.isOperator('=')) {
        if (!result.isAssignable) {
          var end = this.inputIndex;
          var expression = this.input.substring(start, end);
          this.error("Expression " + expression + " is not assignable");
        }
        if (!this.parseAction) {
          this.error("Binding expression cannot contain assignments");
        }
        this.expectOperator('=');
        result = new ast_1.Assignment(result, this.parseConditional());
      }
      return result;
    };
    _ParseAST.prototype.parseConditional = function() {
      var start = this.inputIndex;
      var result = this.parseLogicalOr();
      if (this.optionalOperator('?')) {
        var yes = this.parseExpression();
        if (!this.optionalCharacter(lexer_1.$COLON)) {
          var end = this.inputIndex;
          var expression = this.input.substring(start, end);
          this.error("Conditional expression " + expression + " requires all 3 expressions");
        }
        var no = this.parseExpression();
        return new ast_1.Conditional(result, yes, no);
      } else {
        return result;
      }
    };
    _ParseAST.prototype.parseLogicalOr = function() {
      var result = this.parseLogicalAnd();
      while (this.optionalOperator('||')) {
        result = new ast_1.Binary('||', result, this.parseLogicalAnd());
      }
      return result;
    };
    _ParseAST.prototype.parseLogicalAnd = function() {
      var result = this.parseEquality();
      while (this.optionalOperator('&&')) {
        result = new ast_1.Binary('&&', result, this.parseEquality());
      }
      return result;
    };
    _ParseAST.prototype.parseEquality = function() {
      var result = this.parseRelational();
      while (true) {
        if (this.optionalOperator('==')) {
          result = new ast_1.Binary('==', result, this.parseRelational());
        } else if (this.optionalOperator('===')) {
          result = new ast_1.Binary('===', result, this.parseRelational());
        } else if (this.optionalOperator('!=')) {
          result = new ast_1.Binary('!=', result, this.parseRelational());
        } else if (this.optionalOperator('!==')) {
          result = new ast_1.Binary('!==', result, this.parseRelational());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseRelational = function() {
      var result = this.parseAdditive();
      while (true) {
        if (this.optionalOperator('<')) {
          result = new ast_1.Binary('<', result, this.parseAdditive());
        } else if (this.optionalOperator('>')) {
          result = new ast_1.Binary('>', result, this.parseAdditive());
        } else if (this.optionalOperator('<=')) {
          result = new ast_1.Binary('<=', result, this.parseAdditive());
        } else if (this.optionalOperator('>=')) {
          result = new ast_1.Binary('>=', result, this.parseAdditive());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseAdditive = function() {
      var result = this.parseMultiplicative();
      while (true) {
        if (this.optionalOperator('+')) {
          result = new ast_1.Binary('+', result, this.parseMultiplicative());
        } else if (this.optionalOperator('-')) {
          result = new ast_1.Binary('-', result, this.parseMultiplicative());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseMultiplicative = function() {
      var result = this.parsePrefix();
      while (true) {
        if (this.optionalOperator('*')) {
          result = new ast_1.Binary('*', result, this.parsePrefix());
        } else if (this.optionalOperator('%')) {
          result = new ast_1.Binary('%', result, this.parsePrefix());
        } else if (this.optionalOperator('/')) {
          result = new ast_1.Binary('/', result, this.parsePrefix());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parsePrefix = function() {
      if (this.optionalOperator('+')) {
        return this.parsePrefix();
      } else if (this.optionalOperator('-')) {
        return new ast_1.Binary('-', new ast_1.LiteralPrimitive(0), this.parsePrefix());
      } else if (this.optionalOperator('!')) {
        return new ast_1.PrefixNot(this.parsePrefix());
      } else {
        return this.parseCallChain();
      }
    };
    _ParseAST.prototype.parseCallChain = function() {
      var result = this.parsePrimary();
      while (true) {
        if (this.optionalCharacter(lexer_1.$PERIOD)) {
          result = this.parseAccessMemberOrMethodCall(result);
        } else if (this.optionalCharacter(lexer_1.$LBRACKET)) {
          var key = this.parseExpression();
          this.expectCharacter(lexer_1.$RBRACKET);
          result = new ast_1.KeyedAccess(result, key);
        } else if (this.optionalCharacter(lexer_1.$LPAREN)) {
          var args = this.parseCallArguments();
          this.expectCharacter(lexer_1.$RPAREN);
          result = new ast_1.FunctionCall(result, args);
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parsePrimary = function() {
      if (this.optionalCharacter(lexer_1.$LPAREN)) {
        var result = this.parsePipe();
        this.expectCharacter(lexer_1.$RPAREN);
        return result;
      } else if (this.next.isKeywordNull() || this.next.isKeywordUndefined()) {
        this.advance();
        return new ast_1.LiteralPrimitive(null);
      } else if (this.next.isKeywordTrue()) {
        this.advance();
        return new ast_1.LiteralPrimitive(true);
      } else if (this.next.isKeywordFalse()) {
        this.advance();
        return new ast_1.LiteralPrimitive(false);
      } else if (this.optionalCharacter(lexer_1.$LBRACKET)) {
        var elements = this.parseExpressionList(lexer_1.$RBRACKET);
        this.expectCharacter(lexer_1.$RBRACKET);
        return new ast_1.LiteralArray(elements);
      } else if (this.next.isCharacter(lexer_1.$LBRACE)) {
        return this.parseLiteralMap();
      } else if (this.next.isIdentifier()) {
        return this.parseAccessMemberOrMethodCall(_implicitReceiver);
      } else if (this.next.isNumber()) {
        var value = this.next.toNumber();
        this.advance();
        return new ast_1.LiteralPrimitive(value);
      } else if (this.next.isString()) {
        var literalValue = this.next.toString();
        this.advance();
        return new ast_1.LiteralPrimitive(literalValue);
      } else if (this.index >= this.tokens.length) {
        this.error("Unexpected end of expression: " + this.input);
      } else {
        this.error("Unexpected token " + this.next);
      }
    };
    _ParseAST.prototype.parseExpressionList = function(terminator) {
      var result = [];
      if (!this.next.isCharacter(terminator)) {
        do {
          collection_1.ListWrapper.push(result, this.parseExpression());
        } while (this.optionalCharacter(lexer_1.$COMMA));
      }
      return result;
    };
    _ParseAST.prototype.parseLiteralMap = function() {
      var keys = [];
      var values = [];
      this.expectCharacter(lexer_1.$LBRACE);
      if (!this.optionalCharacter(lexer_1.$RBRACE)) {
        do {
          var key = this.expectIdentifierOrKeywordOrString();
          collection_1.ListWrapper.push(keys, key);
          this.expectCharacter(lexer_1.$COLON);
          collection_1.ListWrapper.push(values, this.parseExpression());
        } while (this.optionalCharacter(lexer_1.$COMMA));
        this.expectCharacter(lexer_1.$RBRACE);
      }
      return new ast_1.LiteralMap(keys, values);
    };
    _ParseAST.prototype.parseAccessMemberOrMethodCall = function(receiver) {
      var id = this.expectIdentifierOrKeyword();
      if (this.optionalCharacter(lexer_1.$LPAREN)) {
        var args = this.parseCallArguments();
        this.expectCharacter(lexer_1.$RPAREN);
        var fn = this.reflector.method(id);
        return new ast_1.MethodCall(receiver, id, fn, args);
      } else {
        var getter = this.reflector.getter(id);
        var setter = this.reflector.setter(id);
        var am = new ast_1.AccessMember(receiver, id, getter, setter);
        if (this.optionalOperator("|")) {
          return this.parseInlinedPipe(am);
        } else {
          return am;
        }
      }
    };
    _ParseAST.prototype.parseInlinedPipe = function(result) {
      do {
        if (this.parseAction) {
          this.error("Cannot have a pipe in an action expression");
        }
        var name = this.expectIdentifierOrKeyword();
        var args = collection_1.ListWrapper.create();
        while (this.optionalCharacter(lexer_1.$COLON)) {
          collection_1.ListWrapper.push(args, this.parseExpression());
        }
        result = new ast_1.Pipe(result, name, args, true);
      } while (this.optionalOperator("|"));
      return result;
    };
    _ParseAST.prototype.parseCallArguments = function() {
      if (this.next.isCharacter(lexer_1.$RPAREN))
        return [];
      var positionals = [];
      do {
        collection_1.ListWrapper.push(positionals, this.parseExpression());
      } while (this.optionalCharacter(lexer_1.$COMMA));
      return positionals;
    };
    _ParseAST.prototype.expectTemplateBindingKey = function() {
      var result = '';
      var operatorFound = false;
      do {
        result += this.expectIdentifierOrKeywordOrString();
        operatorFound = this.optionalOperator('-');
        if (operatorFound) {
          result += '-';
        }
      } while (operatorFound);
      return result.toString();
    };
    _ParseAST.prototype.parseTemplateBindings = function() {
      var bindings = [];
      var prefix = null;
      while (this.index < this.tokens.length) {
        var keyIsVar = this.optionalKeywordVar();
        var key = this.expectTemplateBindingKey();
        if (!keyIsVar) {
          if (prefix == null) {
            prefix = key;
          } else {
            key = prefix + '-' + key;
          }
        }
        this.optionalCharacter(lexer_1.$COLON);
        var name = null;
        var expression = null;
        if (this.next !== lexer_1.EOF) {
          if (keyIsVar) {
            if (this.optionalOperator("=")) {
              name = this.expectTemplateBindingKey();
            } else {
              name = '\$implicit';
            }
          } else if (!this.peekKeywordVar()) {
            var start = this.inputIndex;
            var ast = this.parsePipe();
            var source = this.input.substring(start, this.inputIndex);
            expression = new ast_1.ASTWithSource(ast, source, this.location);
          }
        }
        collection_1.ListWrapper.push(bindings, new ast_1.TemplateBinding(key, keyIsVar, name, expression));
        if (!this.optionalCharacter(lexer_1.$SEMICOLON)) {
          this.optionalCharacter(lexer_1.$COMMA);
        }
      }
      return bindings;
    };
    _ParseAST.prototype.error = function(message, index) {
      if (index === void 0) {
        index = null;
      }
      if (lang_1.isBlank(index))
        index = this.index;
      var location = (index < this.tokens.length) ? "at column " + (this.tokens[index].index + 1) + " in" : "at the end of the expression";
      throw new lang_1.BaseException("Parser Error: " + message + " " + location + " [" + this.input + "] in " + this.location);
    };
    return _ParseAST;
  })();
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_change_detector", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast", "npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.24/src/change_detection/dynamic_change_detector", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_jit_generator", "npm:angular2@2.0.0-alpha.24/src/change_detection/directive_record", "npm:angular2@2.0.0-alpha.24/src/change_detection/coalesce", "npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var ast_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast");
  var interfaces_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces");
  var change_detection_util_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util");
  var dynamic_change_detector_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/dynamic_change_detector");
  var change_detection_jit_generator_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_jit_generator");
  var directive_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/directive_record");
  var coalesce_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/coalesce");
  var proto_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_record");
  exports.__esModule = true;
  var DynamicProtoChangeDetector = (function(_super) {
    __extends(DynamicProtoChangeDetector, _super);
    function DynamicProtoChangeDetector(_pipeRegistry, definition) {
      _super.call(this);
      this._pipeRegistry = _pipeRegistry;
      this.definition = definition;
      this._records = this._createRecords(definition);
    }
    DynamicProtoChangeDetector.prototype.instantiate = function(dispatcher) {
      return new dynamic_change_detector_1.DynamicChangeDetector(this.definition.strategy, dispatcher, this._pipeRegistry, this._records, this.definition.directiveRecords);
    };
    DynamicProtoChangeDetector.prototype._createRecords = function(definition) {
      var recordBuilder = new ProtoRecordBuilder();
      collection_1.ListWrapper.forEach(definition.bindingRecords, function(b) {
        recordBuilder.addAst(b, definition.variableNames);
      });
      return coalesce_1.coalesce(recordBuilder.records);
    };
    return DynamicProtoChangeDetector;
  })(interfaces_1.ProtoChangeDetector);
  exports.DynamicProtoChangeDetector = DynamicProtoChangeDetector;
  var _jitProtoChangeDetectorClassCounter = 0;
  var JitProtoChangeDetector = (function(_super) {
    __extends(JitProtoChangeDetector, _super);
    function JitProtoChangeDetector(_pipeRegistry, definition) {
      _super.call(this);
      this._pipeRegistry = _pipeRegistry;
      this.definition = definition;
      this._factory = this._createFactory(definition);
    }
    JitProtoChangeDetector.prototype.instantiate = function(dispatcher) {
      return this._factory(dispatcher, this._pipeRegistry);
    };
    JitProtoChangeDetector.prototype._createFactory = function(definition) {
      var recordBuilder = new ProtoRecordBuilder();
      collection_1.ListWrapper.forEach(definition.bindingRecords, function(b) {
        recordBuilder.addAst(b, definition.variableNames);
      });
      var c = _jitProtoChangeDetectorClassCounter++;
      var records = coalesce_1.coalesce(recordBuilder.records);
      var typeName = "ChangeDetector" + c;
      return new change_detection_jit_generator_1.ChangeDetectorJITGenerator(typeName, definition.strategy, records, this.definition.directiveRecords).generate();
    };
    return JitProtoChangeDetector;
  })(interfaces_1.ProtoChangeDetector);
  exports.JitProtoChangeDetector = JitProtoChangeDetector;
  var ProtoRecordBuilder = (function() {
    function ProtoRecordBuilder() {
      this.records = [];
    }
    ProtoRecordBuilder.prototype.addAst = function(b, variableNames) {
      if (variableNames === void 0) {
        variableNames = null;
      }
      var oldLast = collection_1.ListWrapper.last(this.records);
      if (lang_1.isPresent(oldLast) && oldLast.bindingRecord.directiveRecord == b.directiveRecord) {
        oldLast.lastInDirective = false;
      }
      _ConvertAstIntoProtoRecords.append(this.records, b, variableNames);
      var newLast = collection_1.ListWrapper.last(this.records);
      if (lang_1.isPresent(newLast) && newLast !== oldLast) {
        newLast.lastInBinding = true;
        newLast.lastInDirective = true;
      }
    };
    return ProtoRecordBuilder;
  })();
  var _ConvertAstIntoProtoRecords = (function() {
    function _ConvertAstIntoProtoRecords(_records, _bindingRecord, _expressionAsString, _variableNames) {
      this._records = _records;
      this._bindingRecord = _bindingRecord;
      this._expressionAsString = _expressionAsString;
      this._variableNames = _variableNames;
    }
    _ConvertAstIntoProtoRecords.append = function(records, b, variableNames) {
      var c = new _ConvertAstIntoProtoRecords(records, b, b.ast.toString(), variableNames);
      b.ast.visit(c);
    };
    _ConvertAstIntoProtoRecords.prototype.visitImplicitReceiver = function(ast) {
      return this._bindingRecord.implicitReceiver;
    };
    _ConvertAstIntoProtoRecords.prototype.visitInterpolation = function(ast) {
      var args = this._visitAll(ast.expressions);
      return this._addRecord(proto_record_1.RECORD_TYPE_INTERPOLATE, "interpolate", _interpolationFn(ast.strings), args, ast.strings, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitLiteralPrimitive = function(ast) {
      return this._addRecord(proto_record_1.RECORD_TYPE_CONST, "literal", ast.value, [], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitAccessMember = function(ast) {
      var receiver = ast.receiver.visit(this);
      if (lang_1.isPresent(this._variableNames) && collection_1.ListWrapper.contains(this._variableNames, ast.name) && ast.receiver instanceof ast_1.ImplicitReceiver) {
        return this._addRecord(proto_record_1.RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);
      } else {
        return this._addRecord(proto_record_1.RECORD_TYPE_PROPERTY, ast.name, ast.getter, [], null, receiver);
      }
    };
    _ConvertAstIntoProtoRecords.prototype.visitMethodCall = function(ast) {
      var receiver = ast.receiver.visit(this);
      var args = this._visitAll(ast.args);
      if (lang_1.isPresent(this._variableNames) && collection_1.ListWrapper.contains(this._variableNames, ast.name)) {
        var target = this._addRecord(proto_record_1.RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);
        return this._addRecord(proto_record_1.RECORD_TYPE_INVOKE_CLOSURE, "closure", null, args, null, target);
      } else {
        return this._addRecord(proto_record_1.RECORD_TYPE_INVOKE_METHOD, ast.name, ast.fn, args, null, receiver);
      }
    };
    _ConvertAstIntoProtoRecords.prototype.visitFunctionCall = function(ast) {
      var target = ast.target.visit(this);
      var args = this._visitAll(ast.args);
      return this._addRecord(proto_record_1.RECORD_TYPE_INVOKE_CLOSURE, "closure", null, args, null, target);
    };
    _ConvertAstIntoProtoRecords.prototype.visitLiteralArray = function(ast) {
      var primitiveName = "arrayFn" + ast.expressions.length;
      return this._addRecord(proto_record_1.RECORD_TYPE_PRIMITIVE_OP, primitiveName, _arrayFn(ast.expressions.length), this._visitAll(ast.expressions), null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitLiteralMap = function(ast) {
      return this._addRecord(proto_record_1.RECORD_TYPE_PRIMITIVE_OP, _mapPrimitiveName(ast.keys), change_detection_util_1.ChangeDetectionUtil.mapFn(ast.keys), this._visitAll(ast.values), null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitBinary = function(ast) {
      var left = ast.left.visit(this);
      var right = ast.right.visit(this);
      return this._addRecord(proto_record_1.RECORD_TYPE_PRIMITIVE_OP, _operationToPrimitiveName(ast.operation), _operationToFunction(ast.operation), [left, right], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitPrefixNot = function(ast) {
      var exp = ast.expression.visit(this);
      return this._addRecord(proto_record_1.RECORD_TYPE_PRIMITIVE_OP, "operation_negate", change_detection_util_1.ChangeDetectionUtil.operation_negate, [exp], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitConditional = function(ast) {
      var c = ast.condition.visit(this);
      var t = ast.trueExp.visit(this);
      var f = ast.falseExp.visit(this);
      return this._addRecord(proto_record_1.RECORD_TYPE_PRIMITIVE_OP, "cond", change_detection_util_1.ChangeDetectionUtil.cond, [c, t, f], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitPipe = function(ast) {
      var value = ast.exp.visit(this);
      var type = ast.inBinding ? proto_record_1.RECORD_TYPE_BINDING_PIPE : proto_record_1.RECORD_TYPE_PIPE;
      return this._addRecord(type, ast.name, ast.name, [], null, value);
    };
    _ConvertAstIntoProtoRecords.prototype.visitKeyedAccess = function(ast) {
      var obj = ast.obj.visit(this);
      var key = ast.key.visit(this);
      return this._addRecord(proto_record_1.RECORD_TYPE_KEYED_ACCESS, "keyedAccess", change_detection_util_1.ChangeDetectionUtil.keyedAccess, [key], null, obj);
    };
    _ConvertAstIntoProtoRecords.prototype._visitAll = function(asts) {
      var res = collection_1.ListWrapper.createFixedSize(asts.length);
      for (var i = 0; i < asts.length; ++i) {
        res[i] = asts[i].visit(this);
      }
      return res;
    };
    _ConvertAstIntoProtoRecords.prototype._addRecord = function(type, name, funcOrValue, args, fixedArgs, context) {
      var selfIndex = this._records.length + 1;
      if (context instanceof directive_record_1.DirectiveIndex) {
        collection_1.ListWrapper.push(this._records, new proto_record_1.ProtoRecord(type, name, funcOrValue, args, fixedArgs, -1, context, selfIndex, this._bindingRecord, this._expressionAsString, false, false));
      } else {
        collection_1.ListWrapper.push(this._records, new proto_record_1.ProtoRecord(type, name, funcOrValue, args, fixedArgs, context, null, selfIndex, this._bindingRecord, this._expressionAsString, false, false));
      }
      return selfIndex;
    };
    return _ConvertAstIntoProtoRecords;
  })();
  function _arrayFn(length) {
    switch (length) {
      case 0:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn0;
      case 1:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn1;
      case 2:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn2;
      case 3:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn3;
      case 4:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn4;
      case 5:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn5;
      case 6:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn6;
      case 7:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn7;
      case 8:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn8;
      case 9:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn9;
      default:
        throw new lang_1.BaseException("Does not support literal maps with more than 9 elements");
    }
  }
  function _mapPrimitiveName(keys) {
    var stringifiedKeys = collection_1.ListWrapper.join(collection_1.ListWrapper.map(keys, function(k) {
      return lang_1.isString(k) ? "\"" + k + "\"" : "" + k;
    }), ", ");
    return "mapFn([" + stringifiedKeys + "])";
  }
  function _operationToPrimitiveName(operation) {
    switch (operation) {
      case '+':
        return "operation_add";
      case '-':
        return "operation_subtract";
      case '*':
        return "operation_multiply";
      case '/':
        return "operation_divide";
      case '%':
        return "operation_remainder";
      case '==':
        return "operation_equals";
      case '!=':
        return "operation_not_equals";
      case '<':
        return "operation_less_then";
      case '>':
        return "operation_greater_then";
      case '<=':
        return "operation_less_or_equals_then";
      case '>=':
        return "operation_greater_or_equals_then";
      case '&&':
        return "operation_logical_and";
      case '||':
        return "operation_logical_or";
      default:
        throw new lang_1.BaseException("Unsupported operation " + operation);
    }
  }
  function _operationToFunction(operation) {
    switch (operation) {
      case '+':
        return change_detection_util_1.ChangeDetectionUtil.operation_add;
      case '-':
        return change_detection_util_1.ChangeDetectionUtil.operation_subtract;
      case '*':
        return change_detection_util_1.ChangeDetectionUtil.operation_multiply;
      case '/':
        return change_detection_util_1.ChangeDetectionUtil.operation_divide;
      case '%':
        return change_detection_util_1.ChangeDetectionUtil.operation_remainder;
      case '==':
        return change_detection_util_1.ChangeDetectionUtil.operation_equals;
      case '!=':
        return change_detection_util_1.ChangeDetectionUtil.operation_not_equals;
      case '<':
        return change_detection_util_1.ChangeDetectionUtil.operation_less_then;
      case '>':
        return change_detection_util_1.ChangeDetectionUtil.operation_greater_then;
      case '<=':
        return change_detection_util_1.ChangeDetectionUtil.operation_less_or_equals_then;
      case '>=':
        return change_detection_util_1.ChangeDetectionUtil.operation_greater_or_equals_then;
      case '&&':
        return change_detection_util_1.ChangeDetectionUtil.operation_logical_and;
      case '||':
        return change_detection_util_1.ChangeDetectionUtil.operation_logical_or;
      default:
        throw new lang_1.BaseException("Unsupported operation " + operation);
    }
  }
  function s(v) {
    return lang_1.isPresent(v) ? "" + v : '';
  }
  function _interpolationFn(strings) {
    var length = strings.length;
    var c0 = length > 0 ? strings[0] : null;
    var c1 = length > 1 ? strings[1] : null;
    var c2 = length > 2 ? strings[2] : null;
    var c3 = length > 3 ? strings[3] : null;
    var c4 = length > 4 ? strings[4] : null;
    var c5 = length > 5 ? strings[5] : null;
    var c6 = length > 6 ? strings[6] : null;
    var c7 = length > 7 ? strings[7] : null;
    var c8 = length > 8 ? strings[8] : null;
    var c9 = length > 9 ? strings[9] : null;
    switch (length - 1) {
      case 1:
        return function(a1) {
          return c0 + s(a1) + c1;
        };
      case 2:
        return function(a1, a2) {
          return c0 + s(a1) + c1 + s(a2) + c2;
        };
      case 3:
        return function(a1, a2, a3) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3;
        };
      case 4:
        return function(a1, a2, a3, a4) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4;
        };
      case 5:
        return function(a1, a2, a3, a4, a5) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5;
        };
      case 6:
        return function(a1, a2, a3, a4, a5, a6) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6;
        };
      case 7:
        return function(a1, a2, a3, a4, a5, a6, a7) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7;
        };
      case 8:
        return function(a1, a2, a3, a4, a5, a6, a7, a8) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8;
        };
      case 9:
        return function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8 + s(a9) + c9;
        };
      default:
        throw new lang_1.BaseException("Does not support more than 9 expressions");
    }
  }
  global.define = __define;
  return module.exports;
});

System.register("github:jspm/nodelibs-process@0.1.1", ["github:jspm/nodelibs-process@0.1.1/index"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  module.exports = require("github:jspm/nodelibs-process@0.1.1/index");
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/di/injector", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/di/binding", "npm:angular2@2.0.0-alpha.24/src/di/exceptions", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/di/key", "npm:angular2@2.0.0-alpha.24/src/di/forward_ref", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
    var binding_1 = require("npm:angular2@2.0.0-alpha.24/src/di/binding");
    var exceptions_1 = require("npm:angular2@2.0.0-alpha.24/src/di/exceptions");
    var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
    var async_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/async");
    var key_1 = require("npm:angular2@2.0.0-alpha.24/src/di/key");
    var forward_ref_1 = require("npm:angular2@2.0.0-alpha.24/src/di/forward_ref");
    var _constructing = new Object();
    var _notFound = new Object();
    var _Waiting = (function() {
      function _Waiting(promise) {
        this.promise = promise;
      }
      return _Waiting;
    })();
    function _isWaiting(obj) {
      return obj instanceof _Waiting;
    }
    var Injector = (function() {
      function Injector(bindings, parent, defaultBindings) {
        this._bindings = bindings;
        this._instances = this._createInstances();
        this._parent = parent;
        this._defaultBindings = defaultBindings;
        this._asyncStrategy = new _AsyncInjectorStrategy(this);
        this._syncStrategy = new _SyncInjectorStrategy(this);
      }
      Injector.resolve = function(bindings) {
        var resolvedBindings = resolveBindings(bindings);
        var flatten = _flattenBindings(resolvedBindings, collection_1.MapWrapper.create());
        return _createListOfBindings(flatten);
      };
      Injector.resolveAndCreate = function(bindings, _a) {
        var _b = (_a === void 0 ? {} : _a).defaultBindings,
            defaultBindings = _b === void 0 ? false : _b;
        return new Injector(Injector.resolve(bindings), null, defaultBindings);
      };
      Injector.fromResolvedBindings = function(bindings, _a) {
        var _b = (_a === void 0 ? {} : _a).defaultBindings,
            defaultBindings = _b === void 0 ? false : _b;
        return new Injector(bindings, null, defaultBindings);
      };
      Object.defineProperty(Injector.prototype, "parent", {
        get: function() {
          return this._parent;
        },
        enumerable: true,
        configurable: true
      });
      Injector.prototype.get = function(token) {
        return this._getByKey(key_1.Key.get(token), false, false, false);
      };
      Injector.prototype.getOptional = function(token) {
        return this._getByKey(key_1.Key.get(token), false, false, true);
      };
      Injector.prototype.asyncGet = function(token) {
        return this._getByKey(key_1.Key.get(token), true, false, false);
      };
      Injector.prototype.resolveAndCreateChild = function(bindings) {
        return new Injector(Injector.resolve(bindings), this, false);
      };
      Injector.prototype.createChildFromResolved = function(bindings) {
        return new Injector(bindings, this, false);
      };
      Injector.prototype._createInstances = function() {
        return collection_1.ListWrapper.createFixedSize(key_1.Key.numberOfKeys + 1);
      };
      Injector.prototype._getByKey = function(key, returnPromise, returnLazy, optional) {
        var _this = this;
        if (returnLazy) {
          return function() {
            return _this._getByKey(key, returnPromise, false, optional);
          };
        }
        var strategy = returnPromise ? this._asyncStrategy : this._syncStrategy;
        var instance = strategy.readFromCache(key);
        if (instance !== _notFound)
          return instance;
        instance = strategy.instantiate(key);
        if (instance !== _notFound)
          return instance;
        if (lang_1.isPresent(this._parent)) {
          return this._parent._getByKey(key, returnPromise, returnLazy, optional);
        }
        if (optional) {
          return null;
        } else {
          throw new exceptions_1.NoBindingError(key);
        }
      };
      Injector.prototype._resolveDependencies = function(key, binding, forceAsync) {
        var _this = this;
        try {
          var getDependency = function(d) {
            return _this._getByKey(d.key, forceAsync || d.asPromise, d.lazy, d.optional);
          };
          return collection_1.ListWrapper.map(binding.dependencies, getDependency);
        } catch (e) {
          this._clear(key);
          if (e instanceof exceptions_1.AbstractBindingError)
            e.addKey(key);
          throw e;
        }
      };
      Injector.prototype._getInstance = function(key) {
        if (this._instances.length <= key.id)
          return null;
        return collection_1.ListWrapper.get(this._instances, key.id);
      };
      Injector.prototype._setInstance = function(key, obj) {
        collection_1.ListWrapper.set(this._instances, key.id, obj);
      };
      Injector.prototype._getBinding = function(key) {
        var binding = this._bindings.length <= key.id ? null : collection_1.ListWrapper.get(this._bindings, key.id);
        if (lang_1.isBlank(binding) && this._defaultBindings) {
          var token = key.token;
          return binding_1.bind(key.token).toClass(token).resolve();
        } else {
          return binding;
        }
      };
      Injector.prototype._markAsConstructing = function(key) {
        this._setInstance(key, _constructing);
      };
      Injector.prototype._clear = function(key) {
        this._setInstance(key, null);
      };
      return Injector;
    })();
    exports.Injector = Injector;
    var _SyncInjectorStrategy = (function() {
      function _SyncInjectorStrategy(injector) {
        this.injector = injector;
      }
      _SyncInjectorStrategy.prototype.readFromCache = function(key) {
        if (key.token === Injector) {
          return this.injector;
        }
        var instance = this.injector._getInstance(key);
        if (instance === _constructing) {
          throw new exceptions_1.CyclicDependencyError(key);
        } else if (lang_1.isPresent(instance) && !_isWaiting(instance)) {
          return instance;
        } else {
          return _notFound;
        }
      };
      _SyncInjectorStrategy.prototype.instantiate = function(key) {
        var binding = this.injector._getBinding(key);
        if (lang_1.isBlank(binding))
          return _notFound;
        if (binding.providedAsPromise)
          throw new exceptions_1.AsyncBindingError(key);
        this.injector._markAsConstructing(key);
        var deps = this.injector._resolveDependencies(key, binding, false);
        return this._createInstance(key, binding, deps);
      };
      _SyncInjectorStrategy.prototype._createInstance = function(key, binding, deps) {
        try {
          var instance = lang_1.FunctionWrapper.apply(binding.factory, deps);
          this.injector._setInstance(key, instance);
          return instance;
        } catch (e) {
          this.injector._clear(key);
          throw new exceptions_1.InstantiationError(e, key);
        }
      };
      return _SyncInjectorStrategy;
    })();
    var _AsyncInjectorStrategy = (function() {
      function _AsyncInjectorStrategy(injector) {
        this.injector = injector;
      }
      _AsyncInjectorStrategy.prototype.readFromCache = function(key) {
        if (key.token === Injector) {
          return async_1.PromiseWrapper.resolve(this.injector);
        }
        var instance = this.injector._getInstance(key);
        if (instance === _constructing) {
          throw new exceptions_1.CyclicDependencyError(key);
        } else if (_isWaiting(instance)) {
          return instance.promise;
        } else if (lang_1.isPresent(instance)) {
          return async_1.PromiseWrapper.resolve(instance);
        } else {
          return _notFound;
        }
      };
      _AsyncInjectorStrategy.prototype.instantiate = function(key) {
        var _this = this;
        var binding = this.injector._getBinding(key);
        if (lang_1.isBlank(binding))
          return _notFound;
        this.injector._markAsConstructing(key);
        var deps = this.injector._resolveDependencies(key, binding, true);
        var depsPromise = async_1.PromiseWrapper.all(deps);
        var promise = async_1.PromiseWrapper.then(depsPromise, null, function(e, s) {
          return _this._errorHandler(key, e, s);
        }).then(function(deps) {
          return _this._findOrCreate(key, binding, deps);
        }).then(function(instance) {
          return _this._cacheInstance(key, instance);
        });
        this.injector._setInstance(key, new _Waiting(promise));
        return promise;
      };
      _AsyncInjectorStrategy.prototype._errorHandler = function(key, e, stack) {
        if (e instanceof exceptions_1.AbstractBindingError)
          e.addKey(key);
        return async_1.PromiseWrapper.reject(e, stack);
      };
      _AsyncInjectorStrategy.prototype._findOrCreate = function(key, binding, deps) {
        try {
          var instance = this.injector._getInstance(key);
          if (!_isWaiting(instance))
            return instance;
          return lang_1.FunctionWrapper.apply(binding.factory, deps);
        } catch (e) {
          this.injector._clear(key);
          throw new exceptions_1.InstantiationError(e, key);
        }
      };
      _AsyncInjectorStrategy.prototype._cacheInstance = function(key, instance) {
        this.injector._setInstance(key, instance);
        return instance;
      };
      return _AsyncInjectorStrategy;
    })();
    function resolveBindings(bindings) {
      var resolvedList = collection_1.ListWrapper.createFixedSize(bindings.length);
      for (var i = 0; i < bindings.length; i++) {
        var unresolved = forward_ref_1.resolveForwardRef(bindings[i]);
        var resolved;
        if (unresolved instanceof binding_1.ResolvedBinding) {
          resolved = unresolved;
        } else if (unresolved instanceof lang_1.Type) {
          resolved = binding_1.bind(unresolved).toClass(unresolved).resolve();
        } else if (unresolved instanceof binding_1.Binding) {
          resolved = unresolved.resolve();
        } else if (unresolved instanceof collection_1.List) {
          resolved = resolveBindings(unresolved);
        } else if (unresolved instanceof binding_1.BindingBuilder) {
          throw new exceptions_1.InvalidBindingError(unresolved.token);
        } else {
          throw new exceptions_1.InvalidBindingError(unresolved);
        }
        resolvedList[i] = resolved;
      }
      return resolvedList;
    }
    exports.resolveBindings = resolveBindings;
    function flattenBindings(bindings) {
      var map = _flattenBindings(bindings, collection_1.MapWrapper.create());
      var res = collection_1.ListWrapper.create();
      collection_1.MapWrapper.forEach(map, function(binding, keyId) {
        return collection_1.ListWrapper.push(res, binding);
      });
      return res;
    }
    function _createListOfBindings(flattenedBindings) {
      var bindings = collection_1.ListWrapper.createFixedSize(key_1.Key.numberOfKeys + 1);
      collection_1.MapWrapper.forEach(flattenedBindings, function(v, keyId) {
        return bindings[keyId] = v;
      });
      return bindings;
    }
    function _flattenBindings(bindings, res) {
      collection_1.ListWrapper.forEach(bindings, function(b) {
        if (b instanceof binding_1.ResolvedBinding) {
          collection_1.MapWrapper.set(res, b.key.id, b);
        } else if (b instanceof collection_1.List) {
          _flattenBindings(b, res);
        }
      });
      return res;
    }
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref", ["npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    ElementRef: {get: function() {
        return ElementRef;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__angular2_47_src_47_facade_47_lang__,
      $__view_95_ref__,
      $__angular2_47_src_47_render_47_dom_47_view_47_view__;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var normalizeBlank = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}).normalizeBlank;
  var ViewRef = ($__view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__view_95_ref__ && $__view_95_ref__.__esModule && $__view_95_ref__ || {default: $__view_95_ref__}).ViewRef;
  var resolveInternalDomView = ($__angular2_47_src_47_render_47_dom_47_view_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $__angular2_47_src_47_render_47_dom_47_view_47_view__ && $__angular2_47_src_47_render_47_dom_47_view_47_view__.__esModule && $__angular2_47_src_47_render_47_dom_47_view_47_view__ || {default: $__angular2_47_src_47_render_47_dom_47_view_47_view__}).resolveInternalDomView;
  var ElementRef = function ElementRef(parentView, boundElementIndex) {
    this.parentView = parentView;
    this.boundElementIndex = boundElementIndex;
  };
  ($traceurRuntime.createClass)(ElementRef, {
    get domElement() {
      return resolveInternalDomView(this.parentView.render).boundElements[this.boundElementIndex];
    },
    getAttribute: function(name) {
      return normalizeBlank(DOM.getAttribute(this.domElement, name));
    }
  }, {});
  Object.defineProperty(ElementRef, "parameters", {get: function() {
      return [[ViewRef], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ElementRef.prototype.getAttribute, "parameters", {get: function() {
      return [[$traceurRuntime.type.string]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_pipeline", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view_builder", "npm:angular2@2.0.0-alpha.24/src/render/api", "github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperties(module.exports, {
      CompilePipeline: {get: function() {
          return CompilePipeline;
        }},
      __esModule: {value: true}
    });
    var $__angular2_47_src_47_facade_47_lang__,
        $__angular2_47_src_47_facade_47_collection__,
        $__angular2_47_src_47_dom_47_dom_95_adapter__,
        $__compile_95_element__,
        $__compile_95_control__,
        $__compile_95_step__,
        $___46__46__47_view_47_proto_95_view_95_builder__,
        $___46__46__47__46__46__47_api__;
    var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
        isPresent = $__0.isPresent,
        isBlank = $__0.isBlank;
    var $__1 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
        List = $__1.List,
        ListWrapper = $__1.ListWrapper;
    var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
    var CompileElement = ($__compile_95_element__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_element"), $__compile_95_element__ && $__compile_95_element__.__esModule && $__compile_95_element__ || {default: $__compile_95_element__}).CompileElement;
    var CompileControl = ($__compile_95_control__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_control"), $__compile_95_control__ && $__compile_95_control__.__esModule && $__compile_95_control__ || {default: $__compile_95_control__}).CompileControl;
    var CompileStep = ($__compile_95_step__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step"), $__compile_95_step__ && $__compile_95_step__.__esModule && $__compile_95_step__ || {default: $__compile_95_step__}).CompileStep;
    var ProtoViewBuilder = ($___46__46__47_view_47_proto_95_view_95_builder__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/proto_view_builder"), $___46__46__47_view_47_proto_95_view_95_builder__ && $___46__46__47_view_47_proto_95_view_95_builder__.__esModule && $___46__46__47_view_47_proto_95_view_95_builder__ || {default: $___46__46__47_view_47_proto_95_view_95_builder__}).ProtoViewBuilder;
    var ProtoViewDto = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}).ProtoViewDto;
    var CompilePipeline = function CompilePipeline(steps) {
      this._control = new CompileControl(steps);
    };
    ($traceurRuntime.createClass)(CompilePipeline, {
      process: function(rootElement) {
        var protoViewType = arguments[1] !== (void 0) ? arguments[1] : null;
        var compilationCtxtDescription = arguments[2] !== (void 0) ? arguments[2] : '';
        if (isBlank(protoViewType)) {
          protoViewType = ProtoViewDto.COMPONENT_VIEW_TYPE;
        }
        var results = ListWrapper.create();
        var rootCompileElement = new CompileElement(rootElement, compilationCtxtDescription);
        rootCompileElement.inheritedProtoView = new ProtoViewBuilder(rootElement, protoViewType);
        rootCompileElement.isViewRoot = true;
        this._process(results, null, rootCompileElement, compilationCtxtDescription);
        return results;
      },
      _process: function(results, parent, current) {
        var compilationCtxtDescription = arguments[3] !== (void 0) ? arguments[3] : '';
        var additionalChildren = this._control.internalProcess(results, 0, parent, current);
        if (current.compileChildren) {
          var node = DOM.firstChild(DOM.templateAwareRoot(current.element));
          while (isPresent(node)) {
            var nextNode = DOM.nextSibling(node);
            if (DOM.isElementNode(node)) {
              var childCompileElement = new CompileElement(node, compilationCtxtDescription);
              childCompileElement.inheritedProtoView = current.inheritedProtoView;
              childCompileElement.inheritedElementBinder = current.inheritedElementBinder;
              childCompileElement.distanceToInheritedBinder = current.distanceToInheritedBinder + 1;
              this._process(results, current, childCompileElement);
            }
            node = nextNode;
          }
        }
        if (isPresent(additionalChildren)) {
          for (var i = 0; i < additionalChildren.length; i++) {
            this._process(results, current, additionalChildren[i]);
          }
        }
      }
    }, {});
    Object.defineProperty(CompilePipeline, "parameters", {get: function() {
        return [[$traceurRuntime.genericType(List, CompileStep)]];
      }});
    Object.defineProperty(CompilePipeline.prototype.process, "parameters", {get: function() {
        return [[], [$traceurRuntime.type.number], [$traceurRuntime.type.string]];
      }});
    Object.defineProperty(CompilePipeline.prototype._process, "parameters", {get: function() {
        return [[], [CompileElement], [CompileElement], [$traceurRuntime.type.string]];
      }});
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/dist/rx", ["github:jspm/nodelibs-process@0.1.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  (function(process) {
    ;
    (function(undefined) {
      var objectTypes = {
        'boolean': false,
        'function': true,
        'object': true,
        'number': false,
        'string': false,
        'undefined': false
      };
      var root = (objectTypes[typeof window] && window) || this,
          freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
          freeModule = objectTypes[typeof module] && module && !module.nodeType && module,
          moduleExports = freeModule && freeModule.exports === freeExports && freeExports,
          freeGlobal = objectTypes[typeof global] && global;
      if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
        root = freeGlobal;
      }
      var Rx = {
        internals: {},
        config: {Promise: root.Promise},
        helpers: {}
      };
      var noop = Rx.helpers.noop = function() {},
          notDefined = Rx.helpers.notDefined = function(x) {
            return typeof x === 'undefined';
          },
          isScheduler = Rx.helpers.isScheduler = function(x) {
            return x instanceof Rx.Scheduler;
          },
          identity = Rx.helpers.identity = function(x) {
            return x;
          },
          pluck = Rx.helpers.pluck = function(property) {
            return function(x) {
              return x[property];
            };
          },
          just = Rx.helpers.just = function(value) {
            return function() {
              return value;
            };
          },
          defaultNow = Rx.helpers.defaultNow = Date.now,
          defaultComparer = Rx.helpers.defaultComparer = function(x, y) {
            return isEqual(x, y);
          },
          defaultSubComparer = Rx.helpers.defaultSubComparer = function(x, y) {
            return x > y ? 1 : (x < y ? -1 : 0);
          },
          defaultKeySerializer = Rx.helpers.defaultKeySerializer = function(x) {
            return x.toString();
          },
          defaultError = Rx.helpers.defaultError = function(err) {
            throw err;
          },
          isPromise = Rx.helpers.isPromise = function(p) {
            return !!p && typeof p.then === 'function';
          },
          asArray = Rx.helpers.asArray = function() {
            return Array.prototype.slice.call(arguments);
          },
          not = Rx.helpers.not = function(a) {
            return !a;
          },
          isFunction = Rx.helpers.isFunction = (function() {
            var isFn = function(value) {
              return typeof value == 'function' || false;
            };
            if (isFn(/x/)) {
              isFn = function(value) {
                return typeof value == 'function' && toString.call(value) == '[object Function]';
              };
            }
            return isFn;
          }());
      function cloneArray(arr) {
        for (var a = [],
            i = 0,
            len = arr.length; i < len; i++) {
          a.push(arr[i]);
        }
        return a;
      }
      Rx.config.longStackSupport = false;
      var hasStacks = false;
      try {
        throw new Error();
      } catch (e) {
        hasStacks = !!e.stack;
      }
      var rStartingLine = captureLine(),
          rFileName;
      var STACK_JUMP_SEPARATOR = "From previous event:";
      function makeStackTraceLong(error, observable) {
        if (hasStacks && observable.stack && typeof error === "object" && error !== null && error.stack && error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1) {
          var stacks = [];
          for (var o = observable; !!o; o = o.source) {
            if (o.stack) {
              stacks.unshift(o.stack);
            }
          }
          stacks.unshift(error.stack);
          var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
          error.stack = filterStackString(concatedStacks);
        }
      }
      function filterStackString(stackString) {
        var lines = stackString.split("\n"),
            desiredLines = [];
        for (var i = 0,
            len = lines.length; i < len; i++) {
          var line = lines[i];
          if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
            desiredLines.push(line);
          }
        }
        return desiredLines.join("\n");
      }
      function isInternalFrame(stackLine) {
        var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
        if (!fileNameAndLineNumber) {
          return false;
        }
        var fileName = fileNameAndLineNumber[0],
            lineNumber = fileNameAndLineNumber[1];
        return fileName === rFileName && lineNumber >= rStartingLine && lineNumber <= rEndingLine;
      }
      function isNodeFrame(stackLine) {
        return stackLine.indexOf("(module.js:") !== -1 || stackLine.indexOf("(node.js:") !== -1;
      }
      function captureLine() {
        if (!hasStacks) {
          return ;
        }
        try {
          throw new Error();
        } catch (e) {
          var lines = e.stack.split("\n");
          var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
          var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
          if (!fileNameAndLineNumber) {
            return ;
          }
          rFileName = fileNameAndLineNumber[0];
          return fileNameAndLineNumber[1];
        }
      }
      function getFileNameAndLineNumber(stackLine) {
        var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
        if (attempt1) {
          return [attempt1[1], Number(attempt1[2])];
        }
        var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
        if (attempt2) {
          return [attempt2[1], Number(attempt2[2])];
        }
        var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
        if (attempt3) {
          return [attempt3[1], Number(attempt3[2])];
        }
      }
      var EmptyError = Rx.EmptyError = function() {
        this.message = 'Sequence contains no elements.';
        Error.call(this);
      };
      EmptyError.prototype = Error.prototype;
      var ObjectDisposedError = Rx.ObjectDisposedError = function() {
        this.message = 'Object has been disposed';
        Error.call(this);
      };
      ObjectDisposedError.prototype = Error.prototype;
      var ArgumentOutOfRangeError = Rx.ArgumentOutOfRangeError = function() {
        this.message = 'Argument out of range';
        Error.call(this);
      };
      ArgumentOutOfRangeError.prototype = Error.prototype;
      var NotSupportedError = Rx.NotSupportedError = function(message) {
        this.message = message || 'This operation is not supported';
        Error.call(this);
      };
      NotSupportedError.prototype = Error.prototype;
      var NotImplementedError = Rx.NotImplementedError = function(message) {
        this.message = message || 'This operation is not implemented';
        Error.call(this);
      };
      NotImplementedError.prototype = Error.prototype;
      var notImplemented = Rx.helpers.notImplemented = function() {
        throw new NotImplementedError();
      };
      var notSupported = Rx.helpers.notSupported = function() {
        throw new NotSupportedError();
      };
      var $iterator$ = (typeof Symbol === 'function' && Symbol.iterator) || '_es6shim_iterator_';
      if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {
        $iterator$ = '@@iterator';
      }
      var doneEnumerator = Rx.doneEnumerator = {
        done: true,
        value: undefined
      };
      var isIterable = Rx.helpers.isIterable = function(o) {
        return o[$iterator$] !== undefined;
      };
      var isArrayLike = Rx.helpers.isArrayLike = function(o) {
        return o && o.length !== undefined;
      };
      Rx.helpers.iterator = $iterator$;
      var bindCallback = Rx.internals.bindCallback = function(func, thisArg, argCount) {
        if (typeof thisArg === 'undefined') {
          return func;
        }
        switch (argCount) {
          case 0:
            return function() {
              return func.call(thisArg);
            };
          case 1:
            return function(arg) {
              return func.call(thisArg, arg);
            };
          case 2:
            return function(value, index) {
              return func.call(thisArg, value, index);
            };
          case 3:
            return function(value, index, collection) {
              return func.call(thisArg, value, index, collection);
            };
        }
        return function() {
          return func.apply(thisArg, arguments);
        };
      };
      var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],
          dontEnumsLength = dontEnums.length;
      var argsClass = '[object Arguments]',
          arrayClass = '[object Array]',
          boolClass = '[object Boolean]',
          dateClass = '[object Date]',
          errorClass = '[object Error]',
          funcClass = '[object Function]',
          numberClass = '[object Number]',
          objectClass = '[object Object]',
          regexpClass = '[object RegExp]',
          stringClass = '[object String]';
      var toString = Object.prototype.toString,
          hasOwnProperty = Object.prototype.hasOwnProperty,
          supportsArgsClass = toString.call(arguments) == argsClass,
          supportNodeClass,
          errorProto = Error.prototype,
          objectProto = Object.prototype,
          stringProto = String.prototype,
          propertyIsEnumerable = objectProto.propertyIsEnumerable;
      try {
        supportNodeClass = !(toString.call(document) == objectClass && !({'toString': 0} + ''));
      } catch (e) {
        supportNodeClass = true;
      }
      var nonEnumProps = {};
      nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = {
        'constructor': true,
        'toLocaleString': true,
        'toString': true,
        'valueOf': true
      };
      nonEnumProps[boolClass] = nonEnumProps[stringClass] = {
        'constructor': true,
        'toString': true,
        'valueOf': true
      };
      nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = {
        'constructor': true,
        'toString': true
      };
      nonEnumProps[objectClass] = {'constructor': true};
      var support = {};
      (function() {
        var ctor = function() {
          this.x = 1;
        },
            props = [];
        ctor.prototype = {
          'valueOf': 1,
          'y': 1
        };
        for (var key in new ctor) {
          props.push(key);
        }
        for (key in arguments) {}
        support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');
        support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');
        support.nonEnumArgs = key != 0;
        support.nonEnumShadows = !/valueOf/.test(props);
      }(1));
      var isObject = Rx.internals.isObject = function(value) {
        var type = typeof value;
        return value && (type == 'function' || type == 'object') || false;
      };
      function keysIn(object) {
        var result = [];
        if (!isObject(object)) {
          return result;
        }
        if (support.nonEnumArgs && object.length && isArguments(object)) {
          object = slice.call(object);
        }
        var skipProto = support.enumPrototypes && typeof object == 'function',
            skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error);
        for (var key in object) {
          if (!(skipProto && key == 'prototype') && !(skipErrorProps && (key == 'message' || key == 'name'))) {
            result.push(key);
          }
        }
        if (support.nonEnumShadows && object !== objectProto) {
          var ctor = object.constructor,
              index = -1,
              length = dontEnumsLength;
          if (object === (ctor && ctor.prototype)) {
            var className = object === stringProto ? stringClass : object === errorProto ? errorClass : toString.call(object),
                nonEnum = nonEnumProps[className];
          }
          while (++index < length) {
            key = dontEnums[index];
            if (!(nonEnum && nonEnum[key]) && hasOwnProperty.call(object, key)) {
              result.push(key);
            }
          }
        }
        return result;
      }
      function internalFor(object, callback, keysFunc) {
        var index = -1,
            props = keysFunc(object),
            length = props.length;
        while (++index < length) {
          var key = props[index];
          if (callback(object[key], key, object) === false) {
            break;
          }
        }
        return object;
      }
      function internalForIn(object, callback) {
        return internalFor(object, callback, keysIn);
      }
      function isNode(value) {
        return typeof value.toString != 'function' && typeof(value + '') == 'string';
      }
      var isArguments = function(value) {
        return (value && typeof value == 'object') ? toString.call(value) == argsClass : false;
      };
      if (!supportsArgsClass) {
        isArguments = function(value) {
          return (value && typeof value == 'object') ? hasOwnProperty.call(value, 'callee') : false;
        };
      }
      var isEqual = Rx.internals.isEqual = function(x, y) {
        return deepEquals(x, y, [], []);
      };
      function deepEquals(a, b, stackA, stackB) {
        if (a === b) {
          return a !== 0 || (1 / a == 1 / b);
        }
        var type = typeof a,
            otherType = typeof b;
        if (a === a && (a == null || b == null || (type != 'function' && type != 'object' && otherType != 'function' && otherType != 'object'))) {
          return false;
        }
        var className = toString.call(a),
            otherClass = toString.call(b);
        if (className == argsClass) {
          className = objectClass;
        }
        if (otherClass == argsClass) {
          otherClass = objectClass;
        }
        if (className != otherClass) {
          return false;
        }
        switch (className) {
          case boolClass:
          case dateClass:
            return +a == +b;
          case numberClass:
            return (a != +a) ? b != +b : (a == 0 ? (1 / a == 1 / b) : a == +b);
          case regexpClass:
          case stringClass:
            return a == String(b);
        }
        var isArr = className == arrayClass;
        if (!isArr) {
          if (className != objectClass || (!support.nodeClass && (isNode(a) || isNode(b)))) {
            return false;
          }
          var ctorA = !support.argsObject && isArguments(a) ? Object : a.constructor,
              ctorB = !support.argsObject && isArguments(b) ? Object : b.constructor;
          if (ctorA != ctorB && !(hasOwnProperty.call(a, 'constructor') && hasOwnProperty.call(b, 'constructor')) && !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && ('constructor' in a && 'constructor' in b)) {
            return false;
          }
        }
        var initedStack = !stackA;
        stackA || (stackA = []);
        stackB || (stackB = []);
        var length = stackA.length;
        while (length--) {
          if (stackA[length] == a) {
            return stackB[length] == b;
          }
        }
        var size = 0;
        var result = true;
        stackA.push(a);
        stackB.push(b);
        if (isArr) {
          length = a.length;
          size = b.length;
          result = size == length;
          if (result) {
            while (size--) {
              var index = length,
                  value = b[size];
              if (!(result = deepEquals(a[size], value, stackA, stackB))) {
                break;
              }
            }
          }
        } else {
          internalForIn(b, function(value, key, b) {
            if (hasOwnProperty.call(b, key)) {
              size++;
              return (result = hasOwnProperty.call(a, key) && deepEquals(a[key], value, stackA, stackB));
            }
          });
          if (result) {
            internalForIn(a, function(value, key, a) {
              if (hasOwnProperty.call(a, key)) {
                return (result = --size > -1);
              }
            });
          }
        }
        stackA.pop();
        stackB.pop();
        return result;
      }
      var hasProp = {}.hasOwnProperty,
          slice = Array.prototype.slice;
      var inherits = this.inherits = Rx.internals.inherits = function(child, parent) {
        function __() {
          this.constructor = child;
        }
        __.prototype = parent.prototype;
        child.prototype = new __();
      };
      var addProperties = Rx.internals.addProperties = function(obj) {
        for (var sources = [],
            i = 1,
            len = arguments.length; i < len; i++) {
          sources.push(arguments[i]);
        }
        for (var idx = 0,
            ln = sources.length; idx < ln; idx++) {
          var source = sources[idx];
          for (var prop in source) {
            obj[prop] = source[prop];
          }
        }
      };
      var addRef = Rx.internals.addRef = function(xs, r) {
        return new AnonymousObservable(function(observer) {
          return new CompositeDisposable(r.getDisposable(), xs.subscribe(observer));
        });
      };
      function arrayInitialize(count, factory) {
        var a = new Array(count);
        for (var i = 0; i < count; i++) {
          a[i] = factory();
        }
        return a;
      }
      var errorObj = {e: {}};
      var tryCatchTarget;
      function tryCatcher() {
        try {
          return tryCatchTarget.apply(this, arguments);
        } catch (e) {
          errorObj.e = e;
          return errorObj;
        }
      }
      function tryCatch(fn) {
        if (!isFunction(fn)) {
          throw new TypeError('fn must be a function');
        }
        tryCatchTarget = fn;
        return tryCatcher;
      }
      function thrower(e) {
        throw e;
      }
      function IndexedItem(id, value) {
        this.id = id;
        this.value = value;
      }
      IndexedItem.prototype.compareTo = function(other) {
        var c = this.value.compareTo(other.value);
        c === 0 && (c = this.id - other.id);
        return c;
      };
      var PriorityQueue = Rx.internals.PriorityQueue = function(capacity) {
        this.items = new Array(capacity);
        this.length = 0;
      };
      var priorityProto = PriorityQueue.prototype;
      priorityProto.isHigherPriority = function(left, right) {
        return this.items[left].compareTo(this.items[right]) < 0;
      };
      priorityProto.percolate = function(index) {
        if (index >= this.length || index < 0) {
          return ;
        }
        var parent = index - 1 >> 1;
        if (parent < 0 || parent === index) {
          return ;
        }
        if (this.isHigherPriority(index, parent)) {
          var temp = this.items[index];
          this.items[index] = this.items[parent];
          this.items[parent] = temp;
          this.percolate(parent);
        }
      };
      priorityProto.heapify = function(index) {
        +index || (index = 0);
        if (index >= this.length || index < 0) {
          return ;
        }
        var left = 2 * index + 1,
            right = 2 * index + 2,
            first = index;
        if (left < this.length && this.isHigherPriority(left, first)) {
          first = left;
        }
        if (right < this.length && this.isHigherPriority(right, first)) {
          first = right;
        }
        if (first !== index) {
          var temp = this.items[index];
          this.items[index] = this.items[first];
          this.items[first] = temp;
          this.heapify(first);
        }
      };
      priorityProto.peek = function() {
        return this.items[0].value;
      };
      priorityProto.removeAt = function(index) {
        this.items[index] = this.items[--this.length];
        this.items[this.length] = undefined;
        this.heapify();
      };
      priorityProto.dequeue = function() {
        var result = this.peek();
        this.removeAt(0);
        return result;
      };
      priorityProto.enqueue = function(item) {
        var index = this.length++;
        this.items[index] = new IndexedItem(PriorityQueue.count++, item);
        this.percolate(index);
      };
      priorityProto.remove = function(item) {
        for (var i = 0; i < this.length; i++) {
          if (this.items[i].value === item) {
            this.removeAt(i);
            return true;
          }
        }
        return false;
      };
      PriorityQueue.count = 0;
      var CompositeDisposable = Rx.CompositeDisposable = function() {
        var args = [],
            i,
            len;
        if (Array.isArray(arguments[0])) {
          args = arguments[0];
          len = args.length;
        } else {
          len = arguments.length;
          args = new Array(len);
          for (i = 0; i < len; i++) {
            args[i] = arguments[i];
          }
        }
        for (i = 0; i < len; i++) {
          if (!isDisposable(args[i])) {
            throw new TypeError('Not a disposable');
          }
        }
        this.disposables = args;
        this.isDisposed = false;
        this.length = args.length;
      };
      var CompositeDisposablePrototype = CompositeDisposable.prototype;
      CompositeDisposablePrototype.add = function(item) {
        if (this.isDisposed) {
          item.dispose();
        } else {
          this.disposables.push(item);
          this.length++;
        }
      };
      CompositeDisposablePrototype.remove = function(item) {
        var shouldDispose = false;
        if (!this.isDisposed) {
          var idx = this.disposables.indexOf(item);
          if (idx !== -1) {
            shouldDispose = true;
            this.disposables.splice(idx, 1);
            this.length--;
            item.dispose();
          }
        }
        return shouldDispose;
      };
      CompositeDisposablePrototype.dispose = function() {
        if (!this.isDisposed) {
          this.isDisposed = true;
          var len = this.disposables.length,
              currentDisposables = new Array(len);
          for (var i = 0; i < len; i++) {
            currentDisposables[i] = this.disposables[i];
          }
          this.disposables = [];
          this.length = 0;
          for (i = 0; i < len; i++) {
            currentDisposables[i].dispose();
          }
        }
      };
      var Disposable = Rx.Disposable = function(action) {
        this.isDisposed = false;
        this.action = action || noop;
      };
      Disposable.prototype.dispose = function() {
        if (!this.isDisposed) {
          this.action();
          this.isDisposed = true;
        }
      };
      var disposableCreate = Disposable.create = function(action) {
        return new Disposable(action);
      };
      var disposableEmpty = Disposable.empty = {dispose: noop};
      var isDisposable = Disposable.isDisposable = function(d) {
        return d && isFunction(d.dispose);
      };
      var checkDisposed = Disposable.checkDisposed = function(disposable) {
        if (disposable.isDisposed) {
          throw new ObjectDisposedError();
        }
      };
      var SingleAssignmentDisposable = Rx.SingleAssignmentDisposable = (function() {
        function BooleanDisposable() {
          this.isDisposed = false;
          this.current = null;
        }
        var booleanDisposablePrototype = BooleanDisposable.prototype;
        booleanDisposablePrototype.getDisposable = function() {
          return this.current;
        };
        booleanDisposablePrototype.setDisposable = function(value) {
          var shouldDispose = this.isDisposed;
          if (!shouldDispose) {
            var old = this.current;
            this.current = value;
          }
          old && old.dispose();
          shouldDispose && value && value.dispose();
        };
        booleanDisposablePrototype.dispose = function() {
          if (!this.isDisposed) {
            this.isDisposed = true;
            var old = this.current;
            this.current = null;
          }
          old && old.dispose();
        };
        return BooleanDisposable;
      }());
      var SerialDisposable = Rx.SerialDisposable = SingleAssignmentDisposable;
      var RefCountDisposable = Rx.RefCountDisposable = (function() {
        function InnerDisposable(disposable) {
          this.disposable = disposable;
          this.disposable.count++;
          this.isInnerDisposed = false;
        }
        InnerDisposable.prototype.dispose = function() {
          if (!this.disposable.isDisposed && !this.isInnerDisposed) {
            this.isInnerDisposed = true;
            this.disposable.count--;
            if (this.disposable.count === 0 && this.disposable.isPrimaryDisposed) {
              this.disposable.isDisposed = true;
              this.disposable.underlyingDisposable.dispose();
            }
          }
        };
        function RefCountDisposable(disposable) {
          this.underlyingDisposable = disposable;
          this.isDisposed = false;
          this.isPrimaryDisposed = false;
          this.count = 0;
        }
        RefCountDisposable.prototype.dispose = function() {
          if (!this.isDisposed && !this.isPrimaryDisposed) {
            this.isPrimaryDisposed = true;
            if (this.count === 0) {
              this.isDisposed = true;
              this.underlyingDisposable.dispose();
            }
          }
        };
        RefCountDisposable.prototype.getDisposable = function() {
          return this.isDisposed ? disposableEmpty : new InnerDisposable(this);
        };
        return RefCountDisposable;
      })();
      function ScheduledDisposable(scheduler, disposable) {
        this.scheduler = scheduler;
        this.disposable = disposable;
        this.isDisposed = false;
      }
      function scheduleItem(s, self) {
        if (!self.isDisposed) {
          self.isDisposed = true;
          self.disposable.dispose();
        }
      }
      ScheduledDisposable.prototype.dispose = function() {
        this.scheduler.scheduleWithState(this, scheduleItem);
      };
      var ScheduledItem = Rx.internals.ScheduledItem = function(scheduler, state, action, dueTime, comparer) {
        this.scheduler = scheduler;
        this.state = state;
        this.action = action;
        this.dueTime = dueTime;
        this.comparer = comparer || defaultSubComparer;
        this.disposable = new SingleAssignmentDisposable();
      };
      ScheduledItem.prototype.invoke = function() {
        this.disposable.setDisposable(this.invokeCore());
      };
      ScheduledItem.prototype.compareTo = function(other) {
        return this.comparer(this.dueTime, other.dueTime);
      };
      ScheduledItem.prototype.isCancelled = function() {
        return this.disposable.isDisposed;
      };
      ScheduledItem.prototype.invokeCore = function() {
        return this.action(this.scheduler, this.state);
      };
      var Scheduler = Rx.Scheduler = (function() {
        function Scheduler(now, schedule, scheduleRelative, scheduleAbsolute) {
          this.now = now;
          this._schedule = schedule;
          this._scheduleRelative = scheduleRelative;
          this._scheduleAbsolute = scheduleAbsolute;
        }
        function invokeAction(scheduler, action) {
          action();
          return disposableEmpty;
        }
        var schedulerProto = Scheduler.prototype;
        schedulerProto.schedule = function(action) {
          return this._schedule(action, invokeAction);
        };
        schedulerProto.scheduleWithState = function(state, action) {
          return this._schedule(state, action);
        };
        schedulerProto.scheduleWithRelative = function(dueTime, action) {
          return this._scheduleRelative(action, dueTime, invokeAction);
        };
        schedulerProto.scheduleWithRelativeAndState = function(state, dueTime, action) {
          return this._scheduleRelative(state, dueTime, action);
        };
        schedulerProto.scheduleWithAbsolute = function(dueTime, action) {
          return this._scheduleAbsolute(action, dueTime, invokeAction);
        };
        schedulerProto.scheduleWithAbsoluteAndState = function(state, dueTime, action) {
          return this._scheduleAbsolute(state, dueTime, action);
        };
        Scheduler.now = defaultNow;
        Scheduler.normalize = function(timeSpan) {
          timeSpan < 0 && (timeSpan = 0);
          return timeSpan;
        };
        return Scheduler;
      }());
      var normalizeTime = Scheduler.normalize;
      (function(schedulerProto) {
        function invokeRecImmediate(scheduler, pair) {
          var state = pair[0],
              action = pair[1],
              group = new CompositeDisposable();
          function recursiveAction(state1) {
            action(state1, function(state2) {
              var isAdded = false,
                  isDone = false,
                  d = scheduler.scheduleWithState(state2, function(scheduler1, state3) {
                    if (isAdded) {
                      group.remove(d);
                    } else {
                      isDone = true;
                    }
                    recursiveAction(state3);
                    return disposableEmpty;
                  });
              if (!isDone) {
                group.add(d);
                isAdded = true;
              }
            });
          }
          recursiveAction(state);
          return group;
        }
        function invokeRecDate(scheduler, pair, method) {
          var state = pair[0],
              action = pair[1],
              group = new CompositeDisposable();
          function recursiveAction(state1) {
            action(state1, function(state2, dueTime1) {
              var isAdded = false,
                  isDone = false,
                  d = scheduler[method](state2, dueTime1, function(scheduler1, state3) {
                    if (isAdded) {
                      group.remove(d);
                    } else {
                      isDone = true;
                    }
                    recursiveAction(state3);
                    return disposableEmpty;
                  });
              if (!isDone) {
                group.add(d);
                isAdded = true;
              }
            });
          }
          ;
          recursiveAction(state);
          return group;
        }
        function scheduleInnerRecursive(action, self) {
          action(function(dt) {
            self(action, dt);
          });
        }
        schedulerProto.scheduleRecursive = function(action) {
          return this.scheduleRecursiveWithState(action, function(_action, self) {
            _action(function() {
              self(_action);
            });
          });
        };
        schedulerProto.scheduleRecursiveWithState = function(state, action) {
          return this.scheduleWithState([state, action], invokeRecImmediate);
        };
        schedulerProto.scheduleRecursiveWithRelative = function(dueTime, action) {
          return this.scheduleRecursiveWithRelativeAndState(action, dueTime, scheduleInnerRecursive);
        };
        schedulerProto.scheduleRecursiveWithRelativeAndState = function(state, dueTime, action) {
          return this._scheduleRelative([state, action], dueTime, function(s, p) {
            return invokeRecDate(s, p, 'scheduleWithRelativeAndState');
          });
        };
        schedulerProto.scheduleRecursiveWithAbsolute = function(dueTime, action) {
          return this.scheduleRecursiveWithAbsoluteAndState(action, dueTime, scheduleInnerRecursive);
        };
        schedulerProto.scheduleRecursiveWithAbsoluteAndState = function(state, dueTime, action) {
          return this._scheduleAbsolute([state, action], dueTime, function(s, p) {
            return invokeRecDate(s, p, 'scheduleWithAbsoluteAndState');
          });
        };
      }(Scheduler.prototype));
      (function(schedulerProto) {
        Scheduler.prototype.schedulePeriodic = function(period, action) {
          return this.schedulePeriodicWithState(null, period, action);
        };
        Scheduler.prototype.schedulePeriodicWithState = function(state, period, action) {
          if (typeof root.setInterval === 'undefined') {
            throw new NotSupportedError();
          }
          period = normalizeTime(period);
          var s = state,
              id = root.setInterval(function() {
                s = action(s);
              }, period);
          return disposableCreate(function() {
            root.clearInterval(id);
          });
        };
      }(Scheduler.prototype));
      (function(schedulerProto) {
        schedulerProto.catchError = schedulerProto['catch'] = function(handler) {
          return new CatchScheduler(this, handler);
        };
      }(Scheduler.prototype));
      var SchedulePeriodicRecursive = Rx.internals.SchedulePeriodicRecursive = (function() {
        function tick(command, recurse) {
          recurse(0, this._period);
          try {
            this._state = this._action(this._state);
          } catch (e) {
            this._cancel.dispose();
            throw e;
          }
        }
        function SchedulePeriodicRecursive(scheduler, state, period, action) {
          this._scheduler = scheduler;
          this._state = state;
          this._period = period;
          this._action = action;
        }
        SchedulePeriodicRecursive.prototype.start = function() {
          var d = new SingleAssignmentDisposable();
          this._cancel = d;
          d.setDisposable(this._scheduler.scheduleRecursiveWithRelativeAndState(0, this._period, tick.bind(this)));
          return d;
        };
        return SchedulePeriodicRecursive;
      }());
      var immediateScheduler = Scheduler.immediate = (function() {
        function scheduleNow(state, action) {
          return action(this, state);
        }
        return new Scheduler(defaultNow, scheduleNow, notSupported, notSupported);
      }());
      var currentThreadScheduler = Scheduler.currentThread = (function() {
        var queue;
        function runTrampoline() {
          while (queue.length > 0) {
            var item = queue.dequeue();
            !item.isCancelled() && item.invoke();
          }
        }
        function scheduleNow(state, action) {
          var si = new ScheduledItem(this, state, action, this.now());
          if (!queue) {
            queue = new PriorityQueue(4);
            queue.enqueue(si);
            var result = tryCatch(runTrampoline)();
            queue = null;
            if (result === errorObj) {
              return thrower(result.e);
            }
          } else {
            queue.enqueue(si);
          }
          return si.disposable;
        }
        var currentScheduler = new Scheduler(defaultNow, scheduleNow, notSupported, notSupported);
        currentScheduler.scheduleRequired = function() {
          return !queue;
        };
        return currentScheduler;
      }());
      var scheduleMethod,
          clearMethod;
      var localTimer = (function() {
        var localSetTimeout,
            localClearTimeout = noop;
        if (!!root.WScript) {
          localSetTimeout = function(fn, time) {
            root.WScript.Sleep(time);
            fn();
          };
        } else if (!!root.setTimeout) {
          localSetTimeout = root.setTimeout;
          localClearTimeout = root.clearTimeout;
        } else {
          throw new NotSupportedError();
        }
        return {
          setTimeout: localSetTimeout,
          clearTimeout: localClearTimeout
        };
      }());
      var localSetTimeout = localTimer.setTimeout,
          localClearTimeout = localTimer.clearTimeout;
      (function() {
        var nextHandle = 1,
            tasksByHandle = {},
            currentlyRunning = false;
        clearMethod = function(handle) {
          delete tasksByHandle[handle];
        };
        function runTask(handle) {
          if (currentlyRunning) {
            localSetTimeout(function() {
              runTask(handle);
            }, 0);
          } else {
            var task = tasksByHandle[handle];
            if (task) {
              currentlyRunning = true;
              var result = tryCatch(task)();
              clearMethod(handle);
              currentlyRunning = false;
              if (result === errorObj) {
                return thrower(result.e);
              }
            }
          }
        }
        var reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\]\\]/g, '\\$&').replace(/toString| for [^\]]+/g, '.*?') + '$');
        var setImmediate = typeof(setImmediate = freeGlobal && moduleExports && freeGlobal.setImmediate) == 'function' && !reNative.test(setImmediate) && setImmediate;
        function postMessageSupported() {
          if (!root.postMessage || root.importScripts) {
            return false;
          }
          var isAsync = false,
              oldHandler = root.onmessage;
          root.onmessage = function() {
            isAsync = true;
          };
          root.postMessage('', '*');
          root.onmessage = oldHandler;
          return isAsync;
        }
        if (isFunction(setImmediate)) {
          scheduleMethod = function(action) {
            var id = nextHandle++;
            tasksByHandle[id] = action;
            setImmediate(function() {
              runTask(id);
            });
            return id;
          };
        } else if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {
          scheduleMethod = function(action) {
            var id = nextHandle++;
            tasksByHandle[id] = action;
            process.nextTick(function() {
              runTask(id);
            });
            return id;
          };
        } else if (postMessageSupported()) {
          var MSG_PREFIX = 'ms.rx.schedule' + Math.random();
          function onGlobalPostMessage(event) {
            if (typeof event.data === 'string' && event.data.substring(0, MSG_PREFIX.length) === MSG_PREFIX) {
              runTask(event.data.substring(MSG_PREFIX.length));
            }
          }
          if (root.addEventListener) {
            root.addEventListener('message', onGlobalPostMessage, false);
          } else {
            root.attachEvent('onmessage', onGlobalPostMessage, false);
          }
          scheduleMethod = function(action) {
            var id = nextHandle++;
            tasksByHandle[id] = action;
            root.postMessage(MSG_PREFIX + currentId, '*');
            return id;
          };
        } else if (!!root.MessageChannel) {
          var channel = new root.MessageChannel();
          channel.port1.onmessage = function(e) {
            runTask(e.data);
          };
          scheduleMethod = function(action) {
            var id = nextHandle++;
            tasksByHandle[id] = action;
            channel.port2.postMessage(id);
            return id;
          };
        } else if ('document' in root && 'onreadystatechange' in root.document.createElement('script')) {
          scheduleMethod = function(action) {
            var scriptElement = root.document.createElement('script');
            var id = nextHandle++;
            tasksByHandle[id] = action;
            scriptElement.onreadystatechange = function() {
              runTask(id);
              scriptElement.onreadystatechange = null;
              scriptElement.parentNode.removeChild(scriptElement);
              scriptElement = null;
            };
            root.document.documentElement.appendChild(scriptElement);
            return id;
          };
        } else {
          scheduleMethod = function(action) {
            var id = nextHandle++;
            tasksByHandle[id] = action;
            localSetTimeout(function() {
              runTask(id);
            }, 0);
            return id;
          };
        }
      }());
      var timeoutScheduler = Scheduler.timeout = Scheduler.default = (function() {
        function scheduleNow(state, action) {
          var scheduler = this,
              disposable = new SingleAssignmentDisposable();
          var id = scheduleMethod(function() {
            if (!disposable.isDisposed) {
              disposable.setDisposable(action(scheduler, state));
            }
          });
          return new CompositeDisposable(disposable, disposableCreate(function() {
            clearMethod(id);
          }));
        }
        function scheduleRelative(state, dueTime, action) {
          var scheduler = this,
              dt = Scheduler.normalize(dueTime);
          if (dt === 0) {
            return scheduler.scheduleWithState(state, action);
          }
          var disposable = new SingleAssignmentDisposable();
          var id = localSetTimeout(function() {
            if (!disposable.isDisposed) {
              disposable.setDisposable(action(scheduler, state));
            }
          }, dt);
          return new CompositeDisposable(disposable, disposableCreate(function() {
            localClearTimeout(id);
          }));
        }
        function scheduleAbsolute(state, dueTime, action) {
          return this.scheduleWithRelativeAndState(state, dueTime - this.now(), action);
        }
        return new Scheduler(defaultNow, scheduleNow, scheduleRelative, scheduleAbsolute);
      })();
      var CatchScheduler = (function(__super__) {
        function scheduleNow(state, action) {
          return this._scheduler.scheduleWithState(state, this._wrap(action));
        }
        function scheduleRelative(state, dueTime, action) {
          return this._scheduler.scheduleWithRelativeAndState(state, dueTime, this._wrap(action));
        }
        function scheduleAbsolute(state, dueTime, action) {
          return this._scheduler.scheduleWithAbsoluteAndState(state, dueTime, this._wrap(action));
        }
        inherits(CatchScheduler, __super__);
        function CatchScheduler(scheduler, handler) {
          this._scheduler = scheduler;
          this._handler = handler;
          this._recursiveOriginal = null;
          this._recursiveWrapper = null;
          __super__.call(this, this._scheduler.now.bind(this._scheduler), scheduleNow, scheduleRelative, scheduleAbsolute);
        }
        CatchScheduler.prototype._clone = function(scheduler) {
          return new CatchScheduler(scheduler, this._handler);
        };
        CatchScheduler.prototype._wrap = function(action) {
          var parent = this;
          return function(self, state) {
            try {
              return action(parent._getRecursiveWrapper(self), state);
            } catch (e) {
              if (!parent._handler(e)) {
                throw e;
              }
              return disposableEmpty;
            }
          };
        };
        CatchScheduler.prototype._getRecursiveWrapper = function(scheduler) {
          if (this._recursiveOriginal !== scheduler) {
            this._recursiveOriginal = scheduler;
            var wrapper = this._clone(scheduler);
            wrapper._recursiveOriginal = scheduler;
            wrapper._recursiveWrapper = wrapper;
            this._recursiveWrapper = wrapper;
          }
          return this._recursiveWrapper;
        };
        CatchScheduler.prototype.schedulePeriodicWithState = function(state, period, action) {
          var self = this,
              failed = false,
              d = new SingleAssignmentDisposable();
          d.setDisposable(this._scheduler.schedulePeriodicWithState(state, period, function(state1) {
            if (failed) {
              return null;
            }
            try {
              return action(state1);
            } catch (e) {
              failed = true;
              if (!self._handler(e)) {
                throw e;
              }
              d.dispose();
              return null;
            }
          }));
          return d;
        };
        return CatchScheduler;
      }(Scheduler));
      var Notification = Rx.Notification = (function() {
        function Notification(kind, value, exception, accept, acceptObservable, toString) {
          this.kind = kind;
          this.value = value;
          this.exception = exception;
          this._accept = accept;
          this._acceptObservable = acceptObservable;
          this.toString = toString;
        }
        Notification.prototype.accept = function(observerOrOnNext, onError, onCompleted) {
          return observerOrOnNext && typeof observerOrOnNext === 'object' ? this._acceptObservable(observerOrOnNext) : this._accept(observerOrOnNext, onError, onCompleted);
        };
        Notification.prototype.toObservable = function(scheduler) {
          var self = this;
          isScheduler(scheduler) || (scheduler = immediateScheduler);
          return new AnonymousObservable(function(observer) {
            return scheduler.scheduleWithState(self, function(_, notification) {
              notification._acceptObservable(observer);
              notification.kind === 'N' && observer.onCompleted();
            });
          });
        };
        return Notification;
      })();
      var notificationCreateOnNext = Notification.createOnNext = (function() {
        function _accept(onNext) {
          return onNext(this.value);
        }
        function _acceptObservable(observer) {
          return observer.onNext(this.value);
        }
        function toString() {
          return 'OnNext(' + this.value + ')';
        }
        return function(value) {
          return new Notification('N', value, null, _accept, _acceptObservable, toString);
        };
      }());
      var notificationCreateOnError = Notification.createOnError = (function() {
        function _accept(onNext, onError) {
          return onError(this.exception);
        }
        function _acceptObservable(observer) {
          return observer.onError(this.exception);
        }
        function toString() {
          return 'OnError(' + this.exception + ')';
        }
        return function(e) {
          return new Notification('E', null, e, _accept, _acceptObservable, toString);
        };
      }());
      var notificationCreateOnCompleted = Notification.createOnCompleted = (function() {
        function _accept(onNext, onError, onCompleted) {
          return onCompleted();
        }
        function _acceptObservable(observer) {
          return observer.onCompleted();
        }
        function toString() {
          return 'OnCompleted()';
        }
        return function() {
          return new Notification('C', null, null, _accept, _acceptObservable, toString);
        };
      }());
      var Enumerator = Rx.internals.Enumerator = function(next) {
        this._next = next;
      };
      Enumerator.prototype.next = function() {
        return this._next();
      };
      Enumerator.prototype[$iterator$] = function() {
        return this;
      };
      var Enumerable = Rx.internals.Enumerable = function(iterator) {
        this._iterator = iterator;
      };
      Enumerable.prototype[$iterator$] = function() {
        return this._iterator();
      };
      Enumerable.prototype.concat = function() {
        var sources = this;
        return new AnonymousObservable(function(o) {
          var e = sources[$iterator$]();
          var isDisposed,
              subscription = new SerialDisposable();
          var cancelable = immediateScheduler.scheduleRecursive(function(self) {
            if (isDisposed) {
              return ;
            }
            try {
              var currentItem = e.next();
            } catch (ex) {
              return o.onError(ex);
            }
            if (currentItem.done) {
              return o.onCompleted();
            }
            var currentValue = currentItem.value;
            isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));
            var d = new SingleAssignmentDisposable();
            subscription.setDisposable(d);
            d.setDisposable(currentValue.subscribe(function(x) {
              o.onNext(x);
            }, function(err) {
              o.onError(err);
            }, self));
          });
          return new CompositeDisposable(subscription, cancelable, disposableCreate(function() {
            isDisposed = true;
          }));
        });
      };
      Enumerable.prototype.catchError = function() {
        var sources = this;
        return new AnonymousObservable(function(o) {
          var e = sources[$iterator$]();
          var isDisposed,
              subscription = new SerialDisposable();
          var cancelable = immediateScheduler.scheduleRecursiveWithState(null, function(lastException, self) {
            if (isDisposed) {
              return ;
            }
            try {
              var currentItem = e.next();
            } catch (ex) {
              return observer.onError(ex);
            }
            if (currentItem.done) {
              if (lastException !== null) {
                o.onError(lastException);
              } else {
                o.onCompleted();
              }
              return ;
            }
            var currentValue = currentItem.value;
            isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));
            var d = new SingleAssignmentDisposable();
            subscription.setDisposable(d);
            d.setDisposable(currentValue.subscribe(function(x) {
              o.onNext(x);
            }, self, function() {
              o.onCompleted();
            }));
          });
          return new CompositeDisposable(subscription, cancelable, disposableCreate(function() {
            isDisposed = true;
          }));
        });
      };
      Enumerable.prototype.catchErrorWhen = function(notificationHandler) {
        var sources = this;
        return new AnonymousObservable(function(o) {
          var exceptions = new Subject(),
              notifier = new Subject(),
              handled = notificationHandler(exceptions),
              notificationDisposable = handled.subscribe(notifier);
          var e = sources[$iterator$]();
          var isDisposed,
              lastException,
              subscription = new SerialDisposable();
          var cancelable = immediateScheduler.scheduleRecursive(function(self) {
            if (isDisposed) {
              return ;
            }
            try {
              var currentItem = e.next();
            } catch (ex) {
              return o.onError(ex);
            }
            if (currentItem.done) {
              if (lastException) {
                o.onError(lastException);
              } else {
                o.onCompleted();
              }
              return ;
            }
            var currentValue = currentItem.value;
            isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));
            var outer = new SingleAssignmentDisposable();
            var inner = new SingleAssignmentDisposable();
            subscription.setDisposable(new CompositeDisposable(inner, outer));
            outer.setDisposable(currentValue.subscribe(function(x) {
              o.onNext(x);
            }, function(exn) {
              inner.setDisposable(notifier.subscribe(self, function(ex) {
                o.onError(ex);
              }, function() {
                o.onCompleted();
              }));
              exceptions.onNext(exn);
            }, function() {
              o.onCompleted();
            }));
          });
          return new CompositeDisposable(notificationDisposable, subscription, cancelable, disposableCreate(function() {
            isDisposed = true;
          }));
        });
      };
      var enumerableRepeat = Enumerable.repeat = function(value, repeatCount) {
        if (repeatCount == null) {
          repeatCount = -1;
        }
        return new Enumerable(function() {
          var left = repeatCount;
          return new Enumerator(function() {
            if (left === 0) {
              return doneEnumerator;
            }
            if (left > 0) {
              left--;
            }
            return {
              done: false,
              value: value
            };
          });
        });
      };
      var enumerableOf = Enumerable.of = function(source, selector, thisArg) {
        if (selector) {
          var selectorFn = bindCallback(selector, thisArg, 3);
        }
        return new Enumerable(function() {
          var index = -1;
          return new Enumerator(function() {
            return ++index < source.length ? {
              done: false,
              value: !selector ? source[index] : selectorFn(source[index], index, source)
            } : doneEnumerator;
          });
        });
      };
      var Observer = Rx.Observer = function() {};
      Observer.prototype.toNotifier = function() {
        var observer = this;
        return function(n) {
          return n.accept(observer);
        };
      };
      Observer.prototype.asObserver = function() {
        return new AnonymousObserver(this.onNext.bind(this), this.onError.bind(this), this.onCompleted.bind(this));
      };
      Observer.prototype.checked = function() {
        return new CheckedObserver(this);
      };
      var observerCreate = Observer.create = function(onNext, onError, onCompleted) {
        onNext || (onNext = noop);
        onError || (onError = defaultError);
        onCompleted || (onCompleted = noop);
        return new AnonymousObserver(onNext, onError, onCompleted);
      };
      Observer.fromNotifier = function(handler, thisArg) {
        return new AnonymousObserver(function(x) {
          return handler.call(thisArg, notificationCreateOnNext(x));
        }, function(e) {
          return handler.call(thisArg, notificationCreateOnError(e));
        }, function() {
          return handler.call(thisArg, notificationCreateOnCompleted());
        });
      };
      Observer.prototype.notifyOn = function(scheduler) {
        return new ObserveOnObserver(scheduler, this);
      };
      Observer.prototype.makeSafe = function(disposable) {
        return new AnonymousSafeObserver(this._onNext, this._onError, this._onCompleted, disposable);
      };
      var AbstractObserver = Rx.internals.AbstractObserver = (function(__super__) {
        inherits(AbstractObserver, __super__);
        function AbstractObserver() {
          this.isStopped = false;
          __super__.call(this);
        }
        AbstractObserver.prototype.next = notImplemented;
        AbstractObserver.prototype.error = notImplemented;
        AbstractObserver.prototype.completed = notImplemented;
        AbstractObserver.prototype.onNext = function(value) {
          if (!this.isStopped) {
            this.next(value);
          }
        };
        AbstractObserver.prototype.onError = function(error) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.error(error);
          }
        };
        AbstractObserver.prototype.onCompleted = function() {
          if (!this.isStopped) {
            this.isStopped = true;
            this.completed();
          }
        };
        AbstractObserver.prototype.dispose = function() {
          this.isStopped = true;
        };
        AbstractObserver.prototype.fail = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.error(e);
            return true;
          }
          return false;
        };
        return AbstractObserver;
      }(Observer));
      var AnonymousObserver = Rx.AnonymousObserver = (function(__super__) {
        inherits(AnonymousObserver, __super__);
        function AnonymousObserver(onNext, onError, onCompleted) {
          __super__.call(this);
          this._onNext = onNext;
          this._onError = onError;
          this._onCompleted = onCompleted;
        }
        AnonymousObserver.prototype.next = function(value) {
          this._onNext(value);
        };
        AnonymousObserver.prototype.error = function(error) {
          this._onError(error);
        };
        AnonymousObserver.prototype.completed = function() {
          this._onCompleted();
        };
        return AnonymousObserver;
      }(AbstractObserver));
      var CheckedObserver = (function(__super__) {
        inherits(CheckedObserver, __super__);
        function CheckedObserver(observer) {
          __super__.call(this);
          this._observer = observer;
          this._state = 0;
        }
        var CheckedObserverPrototype = CheckedObserver.prototype;
        CheckedObserverPrototype.onNext = function(value) {
          this.checkAccess();
          var res = tryCatch(this._observer.onNext).call(this._observer, value);
          this._state = 0;
          res === errorObj && thrower(res.e);
        };
        CheckedObserverPrototype.onError = function(err) {
          this.checkAccess();
          var res = tryCatch(this._observer.onError).call(this._observer, err);
          this._state = 2;
          res === errorObj && thrower(res.e);
        };
        CheckedObserverPrototype.onCompleted = function() {
          this.checkAccess();
          var res = tryCatch(this._observer.onCompleted).call(this._observer);
          this._state = 2;
          res === errorObj && thrower(res.e);
        };
        CheckedObserverPrototype.checkAccess = function() {
          if (this._state === 1) {
            throw new Error('Re-entrancy detected');
          }
          if (this._state === 2) {
            throw new Error('Observer completed');
          }
          if (this._state === 0) {
            this._state = 1;
          }
        };
        return CheckedObserver;
      }(Observer));
      var ScheduledObserver = Rx.internals.ScheduledObserver = (function(__super__) {
        inherits(ScheduledObserver, __super__);
        function ScheduledObserver(scheduler, observer) {
          __super__.call(this);
          this.scheduler = scheduler;
          this.observer = observer;
          this.isAcquired = false;
          this.hasFaulted = false;
          this.queue = [];
          this.disposable = new SerialDisposable();
        }
        ScheduledObserver.prototype.next = function(value) {
          var self = this;
          this.queue.push(function() {
            self.observer.onNext(value);
          });
        };
        ScheduledObserver.prototype.error = function(e) {
          var self = this;
          this.queue.push(function() {
            self.observer.onError(e);
          });
        };
        ScheduledObserver.prototype.completed = function() {
          var self = this;
          this.queue.push(function() {
            self.observer.onCompleted();
          });
        };
        ScheduledObserver.prototype.ensureActive = function() {
          var isOwner = false,
              parent = this;
          if (!this.hasFaulted && this.queue.length > 0) {
            isOwner = !this.isAcquired;
            this.isAcquired = true;
          }
          if (isOwner) {
            this.disposable.setDisposable(this.scheduler.scheduleRecursive(function(self) {
              var work;
              if (parent.queue.length > 0) {
                work = parent.queue.shift();
              } else {
                parent.isAcquired = false;
                return ;
              }
              try {
                work();
              } catch (ex) {
                parent.queue = [];
                parent.hasFaulted = true;
                throw ex;
              }
              self();
            }));
          }
        };
        ScheduledObserver.prototype.dispose = function() {
          __super__.prototype.dispose.call(this);
          this.disposable.dispose();
        };
        return ScheduledObserver;
      }(AbstractObserver));
      var ObserveOnObserver = (function(__super__) {
        inherits(ObserveOnObserver, __super__);
        function ObserveOnObserver(scheduler, observer, cancel) {
          __super__.call(this, scheduler, observer);
          this._cancel = cancel;
        }
        ObserveOnObserver.prototype.next = function(value) {
          __super__.prototype.next.call(this, value);
          this.ensureActive();
        };
        ObserveOnObserver.prototype.error = function(e) {
          __super__.prototype.error.call(this, e);
          this.ensureActive();
        };
        ObserveOnObserver.prototype.completed = function() {
          __super__.prototype.completed.call(this);
          this.ensureActive();
        };
        ObserveOnObserver.prototype.dispose = function() {
          __super__.prototype.dispose.call(this);
          this._cancel && this._cancel.dispose();
          this._cancel = null;
        };
        return ObserveOnObserver;
      })(ScheduledObserver);
      var observableProto;
      var Observable = Rx.Observable = (function() {
        function Observable(subscribe) {
          if (Rx.config.longStackSupport && hasStacks) {
            try {
              throw new Error();
            } catch (e) {
              this.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
            }
            var self = this;
            this._subscribe = function(observer) {
              var oldOnError = observer.onError.bind(observer);
              observer.onError = function(err) {
                makeStackTraceLong(err, self);
                oldOnError(err);
              };
              return subscribe.call(self, observer);
            };
          } else {
            this._subscribe = subscribe;
          }
        }
        observableProto = Observable.prototype;
        observableProto.subscribe = observableProto.forEach = function(observerOrOnNext, onError, onCompleted) {
          return this._subscribe(typeof observerOrOnNext === 'object' ? observerOrOnNext : observerCreate(observerOrOnNext, onError, onCompleted));
        };
        observableProto.subscribeOnNext = function(onNext, thisArg) {
          return this._subscribe(observerCreate(typeof thisArg !== 'undefined' ? function(x) {
            onNext.call(thisArg, x);
          } : onNext));
        };
        observableProto.subscribeOnError = function(onError, thisArg) {
          return this._subscribe(observerCreate(null, typeof thisArg !== 'undefined' ? function(e) {
            onError.call(thisArg, e);
          } : onError));
        };
        observableProto.subscribeOnCompleted = function(onCompleted, thisArg) {
          return this._subscribe(observerCreate(null, null, typeof thisArg !== 'undefined' ? function() {
            onCompleted.call(thisArg);
          } : onCompleted));
        };
        return Observable;
      })();
      var ObservableBase = Rx.ObservableBase = (function(__super__) {
        inherits(ObservableBase, __super__);
        function fixSubscriber(subscriber) {
          return subscriber && isFunction(subscriber.dispose) ? subscriber : isFunction(subscriber) ? disposableCreate(subscriber) : disposableEmpty;
        }
        function setDisposable(s, state) {
          var ado = state[0],
              self = state[1];
          var sub = tryCatch(self.subscribeCore).call(self, ado);
          if (sub === errorObj) {
            if (!ado.fail(errorObj.e)) {
              return thrower(errorObj.e);
            }
          }
          ado.setDisposable(fixSubscriber(sub));
        }
        function subscribe(observer) {
          var ado = new AutoDetachObserver(observer),
              state = [ado, this];
          if (currentThreadScheduler.scheduleRequired()) {
            currentThreadScheduler.scheduleWithState(state, setDisposable);
          } else {
            setDisposable(null, state);
          }
          return ado;
        }
        function ObservableBase() {
          __super__.call(this, subscribe);
        }
        ObservableBase.prototype.subscribeCore = notImplemented;
        return ObservableBase;
      }(Observable));
      observableProto.observeOn = function(scheduler) {
        var source = this;
        return new AnonymousObservable(function(observer) {
          return source.subscribe(new ObserveOnObserver(scheduler, observer));
        }, source);
      };
      observableProto.subscribeOn = function(scheduler) {
        var source = this;
        return new AnonymousObservable(function(observer) {
          var m = new SingleAssignmentDisposable(),
              d = new SerialDisposable();
          d.setDisposable(m);
          m.setDisposable(scheduler.schedule(function() {
            d.setDisposable(new ScheduledDisposable(scheduler, source.subscribe(observer)));
          }));
          return d;
        }, source);
      };
      var observableFromPromise = Observable.fromPromise = function(promise) {
        return observableDefer(function() {
          var subject = new Rx.AsyncSubject();
          promise.then(function(value) {
            subject.onNext(value);
            subject.onCompleted();
          }, subject.onError.bind(subject));
          return subject;
        });
      };
      observableProto.toPromise = function(promiseCtor) {
        promiseCtor || (promiseCtor = Rx.config.Promise);
        if (!promiseCtor) {
          throw new NotSupportedError('Promise type not provided nor in Rx.config.Promise');
        }
        var source = this;
        return new promiseCtor(function(resolve, reject) {
          var value,
              hasValue = false;
          source.subscribe(function(v) {
            value = v;
            hasValue = true;
          }, reject, function() {
            hasValue && resolve(value);
          });
        });
      };
      var ToArrayObservable = (function(__super__) {
        inherits(ToArrayObservable, __super__);
        function ToArrayObservable(source) {
          this.source = source;
          __super__.call(this);
        }
        ToArrayObservable.prototype.subscribeCore = function(observer) {
          return this.source.subscribe(new ToArrayObserver(observer));
        };
        return ToArrayObservable;
      }(ObservableBase));
      function ToArrayObserver(observer) {
        this.observer = observer;
        this.a = [];
        this.isStopped = false;
      }
      ToArrayObserver.prototype.onNext = function(x) {
        if (!this.isStopped) {
          this.a.push(x);
        }
      };
      ToArrayObserver.prototype.onError = function(e) {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onError(e);
        }
      };
      ToArrayObserver.prototype.onCompleted = function() {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onNext(this.a);
          this.observer.onCompleted();
        }
      };
      ToArrayObserver.prototype.dispose = function() {
        this.isStopped = true;
      };
      ToArrayObserver.prototype.fail = function(e) {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onError(e);
          return true;
        }
        return false;
      };
      observableProto.toArray = function() {
        return new ToArrayObservable(this);
      };
      Observable.create = Observable.createWithDisposable = function(subscribe, parent) {
        return new AnonymousObservable(subscribe, parent);
      };
      var observableDefer = Observable.defer = function(observableFactory) {
        return new AnonymousObservable(function(observer) {
          var result;
          try {
            result = observableFactory();
          } catch (e) {
            return observableThrow(e).subscribe(observer);
          }
          isPromise(result) && (result = observableFromPromise(result));
          return result.subscribe(observer);
        });
      };
      var observableEmpty = Observable.empty = function(scheduler) {
        isScheduler(scheduler) || (scheduler = immediateScheduler);
        return new AnonymousObservable(function(observer) {
          return scheduler.scheduleWithState(null, function() {
            observer.onCompleted();
          });
        });
      };
      var FromObservable = (function(__super__) {
        inherits(FromObservable, __super__);
        function FromObservable(iterable, mapper, scheduler) {
          this.iterable = iterable;
          this.mapper = mapper;
          this.scheduler = scheduler;
          __super__.call(this);
        }
        FromObservable.prototype.subscribeCore = function(observer) {
          var sink = new FromSink(observer, this);
          return sink.run();
        };
        return FromObservable;
      }(ObservableBase));
      var FromSink = (function() {
        function FromSink(observer, parent) {
          this.observer = observer;
          this.parent = parent;
        }
        FromSink.prototype.run = function() {
          var list = Object(this.parent.iterable),
              it = getIterable(list),
              observer = this.observer,
              mapper = this.parent.mapper;
          function loopRecursive(i, recurse) {
            try {
              var next = it.next();
            } catch (e) {
              return observer.onError(e);
            }
            if (next.done) {
              return observer.onCompleted();
            }
            var result = next.value;
            if (mapper) {
              try {
                result = mapper(result, i);
              } catch (e) {
                return observer.onError(e);
              }
            }
            observer.onNext(result);
            recurse(i + 1);
          }
          return this.parent.scheduler.scheduleRecursiveWithState(0, loopRecursive);
        };
        return FromSink;
      }());
      var maxSafeInteger = Math.pow(2, 53) - 1;
      function StringIterable(str) {
        this._s = s;
      }
      StringIterable.prototype[$iterator$] = function() {
        return new StringIterator(this._s);
      };
      function StringIterator(str) {
        this._s = s;
        this._l = s.length;
        this._i = 0;
      }
      StringIterator.prototype[$iterator$] = function() {
        return this;
      };
      StringIterator.prototype.next = function() {
        return this._i < this._l ? {
          done: false,
          value: this._s.charAt(this._i++)
        } : doneEnumerator;
      };
      function ArrayIterable(a) {
        this._a = a;
      }
      ArrayIterable.prototype[$iterator$] = function() {
        return new ArrayIterator(this._a);
      };
      function ArrayIterator(a) {
        this._a = a;
        this._l = toLength(a);
        this._i = 0;
      }
      ArrayIterator.prototype[$iterator$] = function() {
        return this;
      };
      ArrayIterator.prototype.next = function() {
        return this._i < this._l ? {
          done: false,
          value: this._a[this._i++]
        } : doneEnumerator;
      };
      function numberIsFinite(value) {
        return typeof value === 'number' && root.isFinite(value);
      }
      function isNan(n) {
        return n !== n;
      }
      function getIterable(o) {
        var i = o[$iterator$],
            it;
        if (!i && typeof o === 'string') {
          it = new StringIterable(o);
          return it[$iterator$]();
        }
        if (!i && o.length !== undefined) {
          it = new ArrayIterable(o);
          return it[$iterator$]();
        }
        if (!i) {
          throw new TypeError('Object is not iterable');
        }
        return o[$iterator$]();
      }
      function sign(value) {
        var number = +value;
        if (number === 0) {
          return number;
        }
        if (isNaN(number)) {
          return number;
        }
        return number < 0 ? -1 : 1;
      }
      function toLength(o) {
        var len = +o.length;
        if (isNaN(len)) {
          return 0;
        }
        if (len === 0 || !numberIsFinite(len)) {
          return len;
        }
        len = sign(len) * Math.floor(Math.abs(len));
        if (len <= 0) {
          return 0;
        }
        if (len > maxSafeInteger) {
          return maxSafeInteger;
        }
        return len;
      }
      var observableFrom = Observable.from = function(iterable, mapFn, thisArg, scheduler) {
        if (iterable == null) {
          throw new Error('iterable cannot be null.');
        }
        if (mapFn && !isFunction(mapFn)) {
          throw new Error('mapFn when provided must be a function');
        }
        if (mapFn) {
          var mapper = bindCallback(mapFn, thisArg, 2);
        }
        isScheduler(scheduler) || (scheduler = currentThreadScheduler);
        return new FromObservable(iterable, mapper, scheduler);
      };
      var FromArrayObservable = (function(__super__) {
        inherits(FromArrayObservable, __super__);
        function FromArrayObservable(args, scheduler) {
          this.args = args;
          this.scheduler = scheduler;
          __super__.call(this);
        }
        FromArrayObservable.prototype.subscribeCore = function(observer) {
          var sink = new FromArraySink(observer, this);
          return sink.run();
        };
        return FromArrayObservable;
      }(ObservableBase));
      function FromArraySink(observer, parent) {
        this.observer = observer;
        this.parent = parent;
      }
      FromArraySink.prototype.run = function() {
        var observer = this.observer,
            args = this.parent.args,
            len = args.length;
        function loopRecursive(i, recurse) {
          if (i < len) {
            observer.onNext(args[i]);
            recurse(i + 1);
          } else {
            observer.onCompleted();
          }
        }
        return this.parent.scheduler.scheduleRecursiveWithState(0, loopRecursive);
      };
      var observableFromArray = Observable.fromArray = function(array, scheduler) {
        isScheduler(scheduler) || (scheduler = currentThreadScheduler);
        return new FromArrayObservable(array, scheduler);
      };
      Observable.generate = function(initialState, condition, iterate, resultSelector, scheduler) {
        isScheduler(scheduler) || (scheduler = currentThreadScheduler);
        return new AnonymousObservable(function(o) {
          var first = true;
          return scheduler.scheduleRecursiveWithState(initialState, function(state, self) {
            var hasResult,
                result;
            try {
              if (first) {
                first = false;
              } else {
                state = iterate(state);
              }
              hasResult = condition(state);
              hasResult && (result = resultSelector(state));
            } catch (e) {
              return o.onError(e);
            }
            if (hasResult) {
              o.onNext(result);
              self(state);
            } else {
              o.onCompleted();
            }
          });
        });
      };
      var observableNever = Observable.never = function() {
        return new AnonymousObservable(function() {
          return disposableEmpty;
        });
      };
      function observableOf(scheduler, array) {
        isScheduler(scheduler) || (scheduler = currentThreadScheduler);
        return new FromArrayObservable(array, scheduler);
      }
      Observable.of = function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        return new FromArrayObservable(args, currentThreadScheduler);
      };
      Observable.ofWithScheduler = function(scheduler) {
        var len = arguments.length,
            args = new Array(len - 1);
        for (var i = 1; i < len; i++) {
          args[i - 1] = arguments[i];
        }
        return new FromArrayObservable(args, scheduler);
      };
      Observable.pairs = function(obj, scheduler) {
        scheduler || (scheduler = Rx.Scheduler.currentThread);
        return new AnonymousObservable(function(observer) {
          var keys = Object.keys(obj),
              len = keys.length;
          return scheduler.scheduleRecursiveWithState(0, function(idx, self) {
            if (idx < len) {
              var key = keys[idx];
              observer.onNext([key, obj[key]]);
              self(idx + 1);
            } else {
              observer.onCompleted();
            }
          });
        });
      };
      var RangeObservable = (function(__super__) {
        inherits(RangeObservable, __super__);
        function RangeObservable(start, count, scheduler) {
          this.start = start;
          this.count = count;
          this.scheduler = scheduler;
          __super__.call(this);
        }
        RangeObservable.prototype.subscribeCore = function(observer) {
          var sink = new RangeSink(observer, this);
          return sink.run();
        };
        return RangeObservable;
      }(ObservableBase));
      var RangeSink = (function() {
        function RangeSink(observer, parent) {
          this.observer = observer;
          this.parent = parent;
        }
        RangeSink.prototype.run = function() {
          var start = this.parent.start,
              count = this.parent.count,
              observer = this.observer;
          function loopRecursive(i, recurse) {
            if (i < count) {
              observer.onNext(start + i);
              recurse(i + 1);
            } else {
              observer.onCompleted();
            }
          }
          return this.parent.scheduler.scheduleRecursiveWithState(0, loopRecursive);
        };
        return RangeSink;
      }());
      Observable.range = function(start, count, scheduler) {
        isScheduler(scheduler) || (scheduler = currentThreadScheduler);
        return new RangeObservable(start, count, scheduler);
      };
      Observable.repeat = function(value, repeatCount, scheduler) {
        isScheduler(scheduler) || (scheduler = currentThreadScheduler);
        return observableReturn(value, scheduler).repeat(repeatCount == null ? -1 : repeatCount);
      };
      var observableReturn = Observable['return'] = Observable.just = Observable.returnValue = function(value, scheduler) {
        isScheduler(scheduler) || (scheduler = immediateScheduler);
        return new AnonymousObservable(function(o) {
          return scheduler.scheduleWithState(value, function(_, v) {
            o.onNext(v);
            o.onCompleted();
          });
        });
      };
      var observableThrow = Observable['throw'] = Observable.throwError = function(error, scheduler) {
        isScheduler(scheduler) || (scheduler = immediateScheduler);
        return new AnonymousObservable(function(observer) {
          return scheduler.schedule(function() {
            observer.onError(error);
          });
        });
      };
      Observable.throwException = function() {
        return Observable.throwError.apply(null, arguments);
      };
      Observable.using = function(resourceFactory, observableFactory) {
        return new AnonymousObservable(function(observer) {
          var disposable = disposableEmpty,
              resource,
              source;
          try {
            resource = resourceFactory();
            resource && (disposable = resource);
            source = observableFactory(resource);
          } catch (exception) {
            return new CompositeDisposable(observableThrow(exception).subscribe(observer), disposable);
          }
          return new CompositeDisposable(source.subscribe(observer), disposable);
        });
      };
      observableProto.amb = function(rightSource) {
        var leftSource = this;
        return new AnonymousObservable(function(observer) {
          var choice,
              leftChoice = 'L',
              rightChoice = 'R',
              leftSubscription = new SingleAssignmentDisposable(),
              rightSubscription = new SingleAssignmentDisposable();
          isPromise(rightSource) && (rightSource = observableFromPromise(rightSource));
          function choiceL() {
            if (!choice) {
              choice = leftChoice;
              rightSubscription.dispose();
            }
          }
          function choiceR() {
            if (!choice) {
              choice = rightChoice;
              leftSubscription.dispose();
            }
          }
          leftSubscription.setDisposable(leftSource.subscribe(function(left) {
            choiceL();
            if (choice === leftChoice) {
              observer.onNext(left);
            }
          }, function(err) {
            choiceL();
            if (choice === leftChoice) {
              observer.onError(err);
            }
          }, function() {
            choiceL();
            if (choice === leftChoice) {
              observer.onCompleted();
            }
          }));
          rightSubscription.setDisposable(rightSource.subscribe(function(right) {
            choiceR();
            if (choice === rightChoice) {
              observer.onNext(right);
            }
          }, function(err) {
            choiceR();
            if (choice === rightChoice) {
              observer.onError(err);
            }
          }, function() {
            choiceR();
            if (choice === rightChoice) {
              observer.onCompleted();
            }
          }));
          return new CompositeDisposable(leftSubscription, rightSubscription);
        });
      };
      Observable.amb = function() {
        var acc = observableNever(),
            items = [];
        if (Array.isArray(arguments[0])) {
          items = arguments[0];
        } else {
          for (var i = 0,
              len = arguments.length; i < len; i++) {
            items.push(arguments[i]);
          }
        }
        function func(previous, current) {
          return previous.amb(current);
        }
        for (var i = 0,
            len = items.length; i < len; i++) {
          acc = func(acc, items[i]);
        }
        return acc;
      };
      function observableCatchHandler(source, handler) {
        return new AnonymousObservable(function(o) {
          var d1 = new SingleAssignmentDisposable(),
              subscription = new SerialDisposable();
          subscription.setDisposable(d1);
          d1.setDisposable(source.subscribe(function(x) {
            o.onNext(x);
          }, function(e) {
            try {
              var result = handler(e);
            } catch (ex) {
              return o.onError(ex);
            }
            isPromise(result) && (result = observableFromPromise(result));
            var d = new SingleAssignmentDisposable();
            subscription.setDisposable(d);
            d.setDisposable(result.subscribe(o));
          }, function(x) {
            o.onCompleted(x);
          }));
          return subscription;
        }, source);
      }
      observableProto['catch'] = observableProto.catchError = observableProto.catchException = function(handlerOrSecond) {
        return typeof handlerOrSecond === 'function' ? observableCatchHandler(this, handlerOrSecond) : observableCatch([this, handlerOrSecond]);
      };
      var observableCatch = Observable.catchError = Observable['catch'] = Observable.catchException = function() {
        var items = [];
        if (Array.isArray(arguments[0])) {
          items = arguments[0];
        } else {
          for (var i = 0,
              len = arguments.length; i < len; i++) {
            items.push(arguments[i]);
          }
        }
        return enumerableOf(items).catchError();
      };
      observableProto.combineLatest = function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        if (Array.isArray(args[0])) {
          args[0].unshift(this);
        } else {
          args.unshift(this);
        }
        return combineLatest.apply(this, args);
      };
      var combineLatest = Observable.combineLatest = function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        var resultSelector = args.pop();
        Array.isArray(args[0]) && (args = args[0]);
        return new AnonymousObservable(function(o) {
          var n = args.length,
              falseFactory = function() {
                return false;
              },
              hasValue = arrayInitialize(n, falseFactory),
              hasValueAll = false,
              isDone = arrayInitialize(n, falseFactory),
              values = new Array(n);
          function next(i) {
            hasValue[i] = true;
            if (hasValueAll || (hasValueAll = hasValue.every(identity))) {
              try {
                var res = resultSelector.apply(null, values);
              } catch (e) {
                return o.onError(e);
              }
              o.onNext(res);
            } else if (isDone.filter(function(x, j) {
              return j !== i;
            }).every(identity)) {
              o.onCompleted();
            }
          }
          function done(i) {
            isDone[i] = true;
            isDone.every(identity) && o.onCompleted();
          }
          var subscriptions = new Array(n);
          for (var idx = 0; idx < n; idx++) {
            (function(i) {
              var source = args[i],
                  sad = new SingleAssignmentDisposable();
              isPromise(source) && (source = observableFromPromise(source));
              sad.setDisposable(source.subscribe(function(x) {
                values[i] = x;
                next(i);
              }, function(e) {
                o.onError(e);
              }, function() {
                done(i);
              }));
              subscriptions[i] = sad;
            }(idx));
          }
          return new CompositeDisposable(subscriptions);
        }, this);
      };
      observableProto.concat = function() {
        for (var args = [],
            i = 0,
            len = arguments.length; i < len; i++) {
          args.push(arguments[i]);
        }
        args.unshift(this);
        return observableConcat.apply(null, args);
      };
      var observableConcat = Observable.concat = function() {
        var args;
        if (Array.isArray(arguments[0])) {
          args = arguments[0];
        } else {
          args = new Array(arguments.length);
          for (var i = 0,
              len = arguments.length; i < len; i++) {
            args[i] = arguments[i];
          }
        }
        return enumerableOf(args).concat();
      };
      observableProto.concatAll = observableProto.concatObservable = function() {
        return this.merge(1);
      };
      var MergeObservable = (function(__super__) {
        inherits(MergeObservable, __super__);
        function MergeObservable(source, maxConcurrent) {
          this.source = source;
          this.maxConcurrent = maxConcurrent;
          __super__.call(this);
        }
        MergeObservable.prototype.subscribeCore = function(observer) {
          var g = new CompositeDisposable();
          g.add(this.source.subscribe(new MergeObserver(observer, this.maxConcurrent, g)));
          return g;
        };
        return MergeObservable;
      }(ObservableBase));
      var MergeObserver = (function() {
        function MergeObserver(o, max, g) {
          this.o = o;
          this.max = max;
          this.g = g;
          this.done = false;
          this.q = [];
          this.activeCount = 0;
          this.isStopped = false;
        }
        MergeObserver.prototype.handleSubscribe = function(xs) {
          var sad = new SingleAssignmentDisposable();
          this.g.add(sad);
          isPromise(xs) && (xs = observableFromPromise(xs));
          sad.setDisposable(xs.subscribe(new InnerObserver(this, sad)));
        };
        MergeObserver.prototype.onNext = function(innerSource) {
          if (this.isStopped) {
            return ;
          }
          if (this.activeCount < this.max) {
            this.activeCount++;
            this.handleSubscribe(innerSource);
          } else {
            this.q.push(innerSource);
          }
        };
        MergeObserver.prototype.onError = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.o.onError(e);
          }
        };
        MergeObserver.prototype.onCompleted = function() {
          if (!this.isStopped) {
            this.isStopped = true;
            this.done = true;
            this.activeCount === 0 && this.o.onCompleted();
          }
        };
        MergeObserver.prototype.dispose = function() {
          this.isStopped = true;
        };
        MergeObserver.prototype.fail = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.o.onError(e);
            return true;
          }
          return false;
        };
        function InnerObserver(parent, sad) {
          this.parent = parent;
          this.sad = sad;
          this.isStopped = false;
        }
        InnerObserver.prototype.onNext = function(x) {
          if (!this.isStopped) {
            this.parent.o.onNext(x);
          }
        };
        InnerObserver.prototype.onError = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.parent.o.onError(e);
          }
        };
        InnerObserver.prototype.onCompleted = function() {
          if (!this.isStopped) {
            this.isStopped = true;
            var parent = this.parent;
            parent.g.remove(this.sad);
            if (parent.q.length > 0) {
              parent.handleSubscribe(parent.q.shift());
            } else {
              parent.activeCount--;
              parent.done && parent.activeCount === 0 && parent.o.onCompleted();
            }
          }
        };
        InnerObserver.prototype.dispose = function() {
          this.isStopped = true;
        };
        InnerObserver.prototype.fail = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.parent.o.onError(e);
            return true;
          }
          return false;
        };
        return MergeObserver;
      }());
      observableProto.merge = function(maxConcurrentOrOther) {
        return typeof maxConcurrentOrOther !== 'number' ? observableMerge(this, maxConcurrentOrOther) : new MergeObservable(this, maxConcurrentOrOther);
      };
      var observableMerge = Observable.merge = function() {
        var scheduler,
            sources = [],
            i,
            len = arguments.length;
        if (!arguments[0]) {
          scheduler = immediateScheduler;
          for (i = 1; i < len; i++) {
            sources.push(arguments[i]);
          }
        } else if (isScheduler(arguments[0])) {
          scheduler = arguments[0];
          for (i = 1; i < len; i++) {
            sources.push(arguments[i]);
          }
        } else {
          scheduler = immediateScheduler;
          for (i = 0; i < len; i++) {
            sources.push(arguments[i]);
          }
        }
        if (Array.isArray(sources[0])) {
          sources = sources[0];
        }
        return observableOf(scheduler, sources).mergeAll();
      };
      var CompositeError = Rx.CompositeError = function(errors) {
        this.name = "NotImplementedError";
        this.innerErrors = errors;
        this.message = 'This contains multiple errors. Check the innerErrors';
        Error.call(this);
      };
      CompositeError.prototype = Error.prototype;
      Observable.mergeDelayError = function() {
        var args;
        if (Array.isArray(arguments[0])) {
          args = arguments[0];
        } else {
          var len = arguments.length;
          args = new Array(len);
          for (var i = 0; i < len; i++) {
            args[i] = arguments[i];
          }
        }
        var source = observableOf(null, args);
        return new AnonymousObservable(function(o) {
          var group = new CompositeDisposable(),
              m = new SingleAssignmentDisposable(),
              isStopped = false,
              errors = [];
          function setCompletion() {
            if (errors.length === 0) {
              o.onCompleted();
            } else if (errors.length === 1) {
              o.onError(errors[0]);
            } else {
              o.onError(new CompositeError(errors));
            }
          }
          group.add(m);
          m.setDisposable(source.subscribe(function(innerSource) {
            var innerSubscription = new SingleAssignmentDisposable();
            group.add(innerSubscription);
            isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
            innerSubscription.setDisposable(innerSource.subscribe(function(x) {
              o.onNext(x);
            }, function(e) {
              errors.push(e);
              group.remove(innerSubscription);
              isStopped && group.length === 1 && setCompletion();
            }, function() {
              group.remove(innerSubscription);
              isStopped && group.length === 1 && setCompletion();
            }));
          }, function(e) {
            errors.push(e);
            isStopped = true;
            group.length === 1 && setCompletion();
          }, function() {
            isStopped = true;
            group.length === 1 && setCompletion();
          }));
          return group;
        });
      };
      var MergeAllObservable = (function(__super__) {
        inherits(MergeAllObservable, __super__);
        function MergeAllObservable(source) {
          this.source = source;
          __super__.call(this);
        }
        MergeAllObservable.prototype.subscribeCore = function(observer) {
          var g = new CompositeDisposable(),
              m = new SingleAssignmentDisposable();
          g.add(m);
          m.setDisposable(this.source.subscribe(new MergeAllObserver(observer, g)));
          return g;
        };
        return MergeAllObservable;
      }(ObservableBase));
      var MergeAllObserver = (function() {
        function MergeAllObserver(o, g) {
          this.o = o;
          this.g = g;
          this.isStopped = false;
          this.done = false;
        }
        MergeAllObserver.prototype.onNext = function(innerSource) {
          if (this.isStopped) {
            return ;
          }
          var sad = new SingleAssignmentDisposable();
          this.g.add(sad);
          isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
          sad.setDisposable(innerSource.subscribe(new InnerObserver(this, this.g, sad)));
        };
        MergeAllObserver.prototype.onError = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.o.onError(e);
          }
        };
        MergeAllObserver.prototype.onCompleted = function() {
          if (!this.isStopped) {
            this.isStopped = true;
            this.done = true;
            this.g.length === 1 && this.o.onCompleted();
          }
        };
        MergeAllObserver.prototype.dispose = function() {
          this.isStopped = true;
        };
        MergeAllObserver.prototype.fail = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.o.onError(e);
            return true;
          }
          return false;
        };
        function InnerObserver(parent, g, sad) {
          this.parent = parent;
          this.g = g;
          this.sad = sad;
          this.isStopped = false;
        }
        InnerObserver.prototype.onNext = function(x) {
          if (!this.isStopped) {
            this.parent.o.onNext(x);
          }
        };
        InnerObserver.prototype.onError = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.parent.o.onError(e);
          }
        };
        InnerObserver.prototype.onCompleted = function() {
          if (!this.isStopped) {
            var parent = this.parent;
            this.isStopped = true;
            parent.g.remove(this.sad);
            parent.done && parent.g.length === 1 && parent.o.onCompleted();
          }
        };
        InnerObserver.prototype.dispose = function() {
          this.isStopped = true;
        };
        InnerObserver.prototype.fail = function(e) {
          if (!this.isStopped) {
            this.isStopped = true;
            this.parent.o.onError(e);
            return true;
          }
          return false;
        };
        return MergeAllObserver;
      }());
      observableProto.mergeAll = observableProto.mergeObservable = function() {
        return new MergeAllObservable(this);
      };
      observableProto.onErrorResumeNext = function(second) {
        if (!second) {
          throw new Error('Second observable is required');
        }
        return onErrorResumeNext([this, second]);
      };
      var onErrorResumeNext = Observable.onErrorResumeNext = function() {
        var sources = [];
        if (Array.isArray(arguments[0])) {
          sources = arguments[0];
        } else {
          for (var i = 0,
              len = arguments.length; i < len; i++) {
            sources.push(arguments[i]);
          }
        }
        return new AnonymousObservable(function(observer) {
          var pos = 0,
              subscription = new SerialDisposable(),
              cancelable = immediateScheduler.scheduleRecursive(function(self) {
                var current,
                    d;
                if (pos < sources.length) {
                  current = sources[pos++];
                  isPromise(current) && (current = observableFromPromise(current));
                  d = new SingleAssignmentDisposable();
                  subscription.setDisposable(d);
                  d.setDisposable(current.subscribe(observer.onNext.bind(observer), self, self));
                } else {
                  observer.onCompleted();
                }
              });
          return new CompositeDisposable(subscription, cancelable);
        });
      };
      observableProto.skipUntil = function(other) {
        var source = this;
        return new AnonymousObservable(function(o) {
          var isOpen = false;
          var disposables = new CompositeDisposable(source.subscribe(function(left) {
            isOpen && o.onNext(left);
          }, function(e) {
            o.onError(e);
          }, function() {
            isOpen && o.onCompleted();
          }));
          isPromise(other) && (other = observableFromPromise(other));
          var rightSubscription = new SingleAssignmentDisposable();
          disposables.add(rightSubscription);
          rightSubscription.setDisposable(other.subscribe(function() {
            isOpen = true;
            rightSubscription.dispose();
          }, function(e) {
            o.onError(e);
          }, function() {
            rightSubscription.dispose();
          }));
          return disposables;
        }, source);
      };
      observableProto['switch'] = observableProto.switchLatest = function() {
        var sources = this;
        return new AnonymousObservable(function(observer) {
          var hasLatest = false,
              innerSubscription = new SerialDisposable(),
              isStopped = false,
              latest = 0,
              subscription = sources.subscribe(function(innerSource) {
                var d = new SingleAssignmentDisposable(),
                    id = ++latest;
                hasLatest = true;
                innerSubscription.setDisposable(d);
                isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
                d.setDisposable(innerSource.subscribe(function(x) {
                  latest === id && observer.onNext(x);
                }, function(e) {
                  latest === id && observer.onError(e);
                }, function() {
                  if (latest === id) {
                    hasLatest = false;
                    isStopped && observer.onCompleted();
                  }
                }));
              }, function(e) {
                observer.onError(e);
              }, function() {
                isStopped = true;
                !hasLatest && observer.onCompleted();
              });
          return new CompositeDisposable(subscription, innerSubscription);
        }, sources);
      };
      observableProto.takeUntil = function(other) {
        var source = this;
        return new AnonymousObservable(function(o) {
          isPromise(other) && (other = observableFromPromise(other));
          return new CompositeDisposable(source.subscribe(o), other.subscribe(function() {
            o.onCompleted();
          }, function(e) {
            o.onError(e);
          }, noop));
        }, source);
      };
      observableProto.withLatestFrom = function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        var resultSelector = args.pop(),
            source = this;
        if (typeof source === 'undefined') {
          throw new Error('Source observable not found for withLatestFrom().');
        }
        if (typeof resultSelector !== 'function') {
          throw new Error('withLatestFrom() expects a resultSelector function.');
        }
        if (Array.isArray(args[0])) {
          args = args[0];
        }
        return new AnonymousObservable(function(observer) {
          var falseFactory = function() {
            return false;
          },
              n = args.length,
              hasValue = arrayInitialize(n, falseFactory),
              hasValueAll = false,
              values = new Array(n);
          var subscriptions = new Array(n + 1);
          for (var idx = 0; idx < n; idx++) {
            (function(i) {
              var other = args[i],
                  sad = new SingleAssignmentDisposable();
              isPromise(other) && (other = observableFromPromise(other));
              sad.setDisposable(other.subscribe(function(x) {
                values[i] = x;
                hasValue[i] = true;
                hasValueAll = hasValue.every(identity);
              }, observer.onError.bind(observer), function() {}));
              subscriptions[i] = sad;
            }(idx));
          }
          var sad = new SingleAssignmentDisposable();
          sad.setDisposable(source.subscribe(function(x) {
            var res;
            var allValues = [x].concat(values);
            if (!hasValueAll)
              return ;
            try {
              res = resultSelector.apply(null, allValues);
            } catch (ex) {
              observer.onError(ex);
              return ;
            }
            observer.onNext(res);
          }, observer.onError.bind(observer), function() {
            observer.onCompleted();
          }));
          subscriptions[n] = sad;
          return new CompositeDisposable(subscriptions);
        }, this);
      };
      function zipArray(second, resultSelector) {
        var first = this;
        return new AnonymousObservable(function(observer) {
          var index = 0,
              len = second.length;
          return first.subscribe(function(left) {
            if (index < len) {
              var right = second[index++],
                  result;
              try {
                result = resultSelector(left, right);
              } catch (e) {
                return observer.onError(e);
              }
              observer.onNext(result);
            } else {
              observer.onCompleted();
            }
          }, function(e) {
            observer.onError(e);
          }, function() {
            observer.onCompleted();
          });
        }, first);
      }
      function falseFactory() {
        return false;
      }
      function emptyArrayFactory() {
        return [];
      }
      observableProto.zip = function() {
        if (Array.isArray(arguments[0])) {
          return zipArray.apply(this, arguments);
        }
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        var parent = this,
            resultSelector = args.pop();
        args.unshift(parent);
        return new AnonymousObservable(function(observer) {
          var n = args.length,
              queues = arrayInitialize(n, emptyArrayFactory),
              isDone = arrayInitialize(n, falseFactory);
          function next(i) {
            var res,
                queuedValues;
            if (queues.every(function(x) {
              return x.length > 0;
            })) {
              try {
                queuedValues = queues.map(function(x) {
                  return x.shift();
                });
                res = resultSelector.apply(parent, queuedValues);
              } catch (ex) {
                observer.onError(ex);
                return ;
              }
              observer.onNext(res);
            } else if (isDone.filter(function(x, j) {
              return j !== i;
            }).every(identity)) {
              observer.onCompleted();
            }
          }
          ;
          function done(i) {
            isDone[i] = true;
            if (isDone.every(function(x) {
              return x;
            })) {
              observer.onCompleted();
            }
          }
          var subscriptions = new Array(n);
          for (var idx = 0; idx < n; idx++) {
            (function(i) {
              var source = args[i],
                  sad = new SingleAssignmentDisposable();
              isPromise(source) && (source = observableFromPromise(source));
              sad.setDisposable(source.subscribe(function(x) {
                queues[i].push(x);
                next(i);
              }, function(e) {
                observer.onError(e);
              }, function() {
                done(i);
              }));
              subscriptions[i] = sad;
            })(idx);
          }
          return new CompositeDisposable(subscriptions);
        }, parent);
      };
      Observable.zip = function() {
        var len = arguments.length,
            args = new Array(len);
        for (var i = 0; i < len; i++) {
          args[i] = arguments[i];
        }
        var first = args.shift();
        return first.zip.apply(first, args);
      };
      Observable.zipArray = function() {
        var sources;
        if (Array.isArray(arguments[0])) {
          sources = arguments[0];
        } else {
          var len = arguments.length;
          sources = new Array(len);
          for (var i = 0; i < len; i++) {
            sources[i] = arguments[i];
          }
        }
        return new AnonymousObservable(function(observer) {
          var n = sources.length,
              queues = arrayInitialize(n, function() {
                return [];
              }),
              isDone = arrayInitialize(n, function() {
                return false;
              });
          function next(i) {
            if (queues.every(function(x) {
              return x.length > 0;
            })) {
              var res = queues.map(function(x) {
                return x.shift();
              });
              observer.onNext(res);
            } else if (isDone.filter(function(x, j) {
              return j !== i;
            }).every(identity)) {
              observer.onCompleted();
              return ;
            }
          }
          ;
          function done(i) {
            isDone[i] = true;
            if (isDone.every(identity)) {
              observer.onCompleted();
              return ;
            }
          }
          var subscriptions = new Array(n);
          for (var idx = 0; idx < n; idx++) {
            (function(i) {
              subscriptions[i] = new SingleAssignmentDisposable();
              subscriptions[i].setDisposable(sources[i].subscribe(function(x) {
                queues[i].push(x);
                next(i);
              }, function(e) {
                observer.onError(e);
              }, function() {
                done(i);
              }));
            })(idx);
          }
          return new CompositeDisposable(subscriptions);
        });
      };
      observableProto.asObservable = function() {
        var source = this;
        return new AnonymousObservable(function(o) {
          return source.subscribe(o);
        }, this);
      };
      observableProto.bufferWithCount = function(count, skip) {
        if (typeof skip !== 'number') {
          skip = count;
        }
        return this.windowWithCount(count, skip).selectMany(function(x) {
          return x.toArray();
        }).where(function(x) {
          return x.length > 0;
        });
      };
      observableProto.dematerialize = function() {
        var source = this;
        return new AnonymousObservable(function(o) {
          return source.subscribe(function(x) {
            return x.accept(o);
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, this);
      };
      observableProto.distinctUntilChanged = function(keySelector, comparer) {
        var source = this;
        comparer || (comparer = defaultComparer);
        return new AnonymousObservable(function(o) {
          var hasCurrentKey = false,
              currentKey;
          return source.subscribe(function(value) {
            var key = value;
            if (keySelector) {
              try {
                key = keySelector(value);
              } catch (e) {
                o.onError(e);
                return ;
              }
            }
            if (hasCurrentKey) {
              try {
                var comparerEquals = comparer(currentKey, key);
              } catch (e) {
                o.onError(e);
                return ;
              }
            }
            if (!hasCurrentKey || !comparerEquals) {
              hasCurrentKey = true;
              currentKey = key;
              o.onNext(value);
            }
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, this);
      };
      observableProto['do'] = observableProto.tap = observableProto.doAction = function(observerOrOnNext, onError, onCompleted) {
        var source = this;
        return new AnonymousObservable(function(observer) {
          var tapObserver = !observerOrOnNext || isFunction(observerOrOnNext) ? observerCreate(observerOrOnNext || noop, onError || noop, onCompleted || noop) : observerOrOnNext;
          return source.subscribe(function(x) {
            try {
              tapObserver.onNext(x);
            } catch (e) {
              observer.onError(e);
            }
            observer.onNext(x);
          }, function(err) {
            try {
              tapObserver.onError(err);
            } catch (e) {
              observer.onError(e);
            }
            observer.onError(err);
          }, function() {
            try {
              tapObserver.onCompleted();
            } catch (e) {
              observer.onError(e);
            }
            observer.onCompleted();
          });
        }, this);
      };
      observableProto.doOnNext = observableProto.tapOnNext = function(onNext, thisArg) {
        return this.tap(typeof thisArg !== 'undefined' ? function(x) {
          onNext.call(thisArg, x);
        } : onNext);
      };
      observableProto.doOnError = observableProto.tapOnError = function(onError, thisArg) {
        return this.tap(noop, typeof thisArg !== 'undefined' ? function(e) {
          onError.call(thisArg, e);
        } : onError);
      };
      observableProto.doOnCompleted = observableProto.tapOnCompleted = function(onCompleted, thisArg) {
        return this.tap(noop, null, typeof thisArg !== 'undefined' ? function() {
          onCompleted.call(thisArg);
        } : onCompleted);
      };
      observableProto['finally'] = observableProto.ensure = function(action) {
        var source = this;
        return new AnonymousObservable(function(observer) {
          var subscription;
          try {
            subscription = source.subscribe(observer);
          } catch (e) {
            action();
            throw e;
          }
          return disposableCreate(function() {
            try {
              subscription.dispose();
            } catch (e) {
              throw e;
            } finally {
              action();
            }
          });
        }, this);
      };
      observableProto.finallyAction = function(action) {
        return this.ensure(action);
      };
      observableProto.ignoreElements = function() {
        var source = this;
        return new AnonymousObservable(function(o) {
          return source.subscribe(noop, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, source);
      };
      observableProto.materialize = function() {
        var source = this;
        return new AnonymousObservable(function(observer) {
          return source.subscribe(function(value) {
            observer.onNext(notificationCreateOnNext(value));
          }, function(e) {
            observer.onNext(notificationCreateOnError(e));
            observer.onCompleted();
          }, function() {
            observer.onNext(notificationCreateOnCompleted());
            observer.onCompleted();
          });
        }, source);
      };
      observableProto.repeat = function(repeatCount) {
        return enumerableRepeat(this, repeatCount).concat();
      };
      observableProto.retry = function(retryCount) {
        return enumerableRepeat(this, retryCount).catchError();
      };
      observableProto.retryWhen = function(notifier) {
        return enumerableRepeat(this).catchErrorWhen(notifier);
      };
      observableProto.scan = function() {
        var hasSeed = false,
            seed,
            accumulator,
            source = this;
        if (arguments.length === 2) {
          hasSeed = true;
          seed = arguments[0];
          accumulator = arguments[1];
        } else {
          accumulator = arguments[0];
        }
        return new AnonymousObservable(function(o) {
          var hasAccumulation,
              accumulation,
              hasValue;
          return source.subscribe(function(x) {
            !hasValue && (hasValue = true);
            try {
              if (hasAccumulation) {
                accumulation = accumulator(accumulation, x);
              } else {
                accumulation = hasSeed ? accumulator(seed, x) : x;
                hasAccumulation = true;
              }
            } catch (e) {
              o.onError(e);
              return ;
            }
            o.onNext(accumulation);
          }, function(e) {
            o.onError(e);
          }, function() {
            !hasValue && hasSeed && o.onNext(seed);
            o.onCompleted();
          });
        }, source);
      };
      observableProto.skipLast = function(count) {
        if (count < 0) {
          throw new ArgumentOutOfRangeError();
        }
        var source = this;
        return new AnonymousObservable(function(o) {
          var q = [];
          return source.subscribe(function(x) {
            q.push(x);
            q.length > count && o.onNext(q.shift());
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, source);
      };
      observableProto.startWith = function() {
        var values,
            scheduler,
            start = 0;
        if (!!arguments.length && isScheduler(arguments[0])) {
          scheduler = arguments[0];
          start = 1;
        } else {
          scheduler = immediateScheduler;
        }
        for (var args = [],
            i = start,
            len = arguments.length; i < len; i++) {
          args.push(arguments[i]);
        }
        return enumerableOf([observableFromArray(args, scheduler), this]).concat();
      };
      observableProto.takeLast = function(count) {
        if (count < 0) {
          throw new ArgumentOutOfRangeError();
        }
        var source = this;
        return new AnonymousObservable(function(o) {
          var q = [];
          return source.subscribe(function(x) {
            q.push(x);
            q.length > count && q.shift();
          }, function(e) {
            o.onError(e);
          }, function() {
            while (q.length > 0) {
              o.onNext(q.shift());
            }
            o.onCompleted();
          });
        }, source);
      };
      observableProto.takeLastBuffer = function(count) {
        var source = this;
        return new AnonymousObservable(function(o) {
          var q = [];
          return source.subscribe(function(x) {
            q.push(x);
            q.length > count && q.shift();
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onNext(q);
            o.onCompleted();
          });
        }, source);
      };
      observableProto.windowWithCount = function(count, skip) {
        var source = this;
        +count || (count = 0);
        Math.abs(count) === Infinity && (count = 0);
        if (count <= 0) {
          throw new ArgumentOutOfRangeError();
        }
        skip == null && (skip = count);
        +skip || (skip = 0);
        Math.abs(skip) === Infinity && (skip = 0);
        if (skip <= 0) {
          throw new ArgumentOutOfRangeError();
        }
        return new AnonymousObservable(function(observer) {
          var m = new SingleAssignmentDisposable(),
              refCountDisposable = new RefCountDisposable(m),
              n = 0,
              q = [];
          function createWindow() {
            var s = new Subject();
            q.push(s);
            observer.onNext(addRef(s, refCountDisposable));
          }
          createWindow();
          m.setDisposable(source.subscribe(function(x) {
            for (var i = 0,
                len = q.length; i < len; i++) {
              q[i].onNext(x);
            }
            var c = n - count + 1;
            c >= 0 && c % skip === 0 && q.shift().onCompleted();
            ++n % skip === 0 && createWindow();
          }, function(e) {
            while (q.length > 0) {
              q.shift().onError(e);
            }
            observer.onError(e);
          }, function() {
            while (q.length > 0) {
              q.shift().onCompleted();
            }
            observer.onCompleted();
          }));
          return refCountDisposable;
        }, source);
      };
      function concatMap(source, selector, thisArg) {
        var selectorFunc = bindCallback(selector, thisArg, 3);
        return source.map(function(x, i) {
          var result = selectorFunc(x, i, source);
          isPromise(result) && (result = observableFromPromise(result));
          (isArrayLike(result) || isIterable(result)) && (result = observableFrom(result));
          return result;
        }).concatAll();
      }
      observableProto.selectConcat = observableProto.concatMap = function(selector, resultSelector, thisArg) {
        if (isFunction(selector) && isFunction(resultSelector)) {
          return this.concatMap(function(x, i) {
            var selectorResult = selector(x, i);
            isPromise(selectorResult) && (selectorResult = observableFromPromise(selectorResult));
            (isArrayLike(selectorResult) || isIterable(selectorResult)) && (selectorResult = observableFrom(selectorResult));
            return selectorResult.map(function(y, i2) {
              return resultSelector(x, y, i, i2);
            });
          });
        }
        return isFunction(selector) ? concatMap(this, selector, thisArg) : concatMap(this, function() {
          return selector;
        });
      };
      observableProto.concatMapObserver = observableProto.selectConcatObserver = function(onNext, onError, onCompleted, thisArg) {
        var source = this,
            onNextFunc = bindCallback(onNext, thisArg, 2),
            onErrorFunc = bindCallback(onError, thisArg, 1),
            onCompletedFunc = bindCallback(onCompleted, thisArg, 0);
        return new AnonymousObservable(function(observer) {
          var index = 0;
          return source.subscribe(function(x) {
            var result;
            try {
              result = onNextFunc(x, index++);
            } catch (e) {
              observer.onError(e);
              return ;
            }
            isPromise(result) && (result = observableFromPromise(result));
            observer.onNext(result);
          }, function(err) {
            var result;
            try {
              result = onErrorFunc(err);
            } catch (e) {
              observer.onError(e);
              return ;
            }
            isPromise(result) && (result = observableFromPromise(result));
            observer.onNext(result);
            observer.onCompleted();
          }, function() {
            var result;
            try {
              result = onCompletedFunc();
            } catch (e) {
              observer.onError(e);
              return ;
            }
            isPromise(result) && (result = observableFromPromise(result));
            observer.onNext(result);
            observer.onCompleted();
          });
        }, this).concatAll();
      };
      observableProto.defaultIfEmpty = function(defaultValue) {
        var source = this;
        defaultValue === undefined && (defaultValue = null);
        return new AnonymousObservable(function(observer) {
          var found = false;
          return source.subscribe(function(x) {
            found = true;
            observer.onNext(x);
          }, function(e) {
            observer.onError(e);
          }, function() {
            !found && observer.onNext(defaultValue);
            observer.onCompleted();
          });
        }, source);
      };
      function arrayIndexOfComparer(array, item, comparer) {
        for (var i = 0,
            len = array.length; i < len; i++) {
          if (comparer(array[i], item)) {
            return i;
          }
        }
        return -1;
      }
      function HashSet(comparer) {
        this.comparer = comparer;
        this.set = [];
      }
      HashSet.prototype.push = function(value) {
        var retValue = arrayIndexOfComparer(this.set, value, this.comparer) === -1;
        retValue && this.set.push(value);
        return retValue;
      };
      observableProto.distinct = function(keySelector, comparer) {
        var source = this;
        comparer || (comparer = defaultComparer);
        return new AnonymousObservable(function(o) {
          var hashSet = new HashSet(comparer);
          return source.subscribe(function(x) {
            var key = x;
            if (keySelector) {
              try {
                key = keySelector(x);
              } catch (e) {
                o.onError(e);
                return ;
              }
            }
            hashSet.push(key) && o.onNext(x);
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, this);
      };
      var MapObservable = (function(__super__) {
        inherits(MapObservable, __super__);
        function MapObservable(source, selector, thisArg) {
          this.source = source;
          this.selector = bindCallback(selector, thisArg, 3);
          __super__.call(this);
        }
        MapObservable.prototype.internalMap = function(selector, thisArg) {
          var self = this;
          return new MapObservable(this.source, function(x, i, o) {
            return selector.call(this, self.selector(x, i, o), i, o);
          }, thisArg);
        };
        MapObservable.prototype.subscribeCore = function(observer) {
          return this.source.subscribe(new MapObserver(observer, this.selector, this));
        };
        return MapObservable;
      }(ObservableBase));
      function MapObserver(observer, selector, source) {
        this.observer = observer;
        this.selector = selector;
        this.source = source;
        this.i = 0;
        this.isStopped = false;
      }
      MapObserver.prototype.onNext = function(x) {
        if (this.isStopped) {
          return ;
        }
        var result = tryCatch(this.selector).call(this, x, this.i++, this.source);
        if (result === errorObj) {
          return this.observer.onError(result.e);
        }
        this.observer.onNext(result);
      };
      MapObserver.prototype.onError = function(e) {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onError(e);
        }
      };
      MapObserver.prototype.onCompleted = function() {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onCompleted();
        }
      };
      MapObserver.prototype.dispose = function() {
        this.isStopped = true;
      };
      MapObserver.prototype.fail = function(e) {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onError(e);
          return true;
        }
        return false;
      };
      observableProto.map = observableProto.select = function(selector, thisArg) {
        var selectorFn = typeof selector === 'function' ? selector : function() {
          return selector;
        };
        return this instanceof MapObservable ? this.internalMap(selectorFn, thisArg) : new MapObservable(this, selectorFn, thisArg);
      };
      observableProto.pluck = function() {
        var args = arguments,
            len = arguments.length;
        if (len === 0) {
          throw new Error('List of properties cannot be empty.');
        }
        return this.map(function(x) {
          var currentProp = x;
          for (var i = 0; i < len; i++) {
            var p = currentProp[args[i]];
            if (typeof p !== 'undefined') {
              currentProp = p;
            } else {
              return undefined;
            }
          }
          return currentProp;
        });
      };
      observableProto.flatMapObserver = observableProto.selectManyObserver = function(onNext, onError, onCompleted, thisArg) {
        var source = this;
        return new AnonymousObservable(function(observer) {
          var index = 0;
          return source.subscribe(function(x) {
            var result;
            try {
              result = onNext.call(thisArg, x, index++);
            } catch (e) {
              observer.onError(e);
              return ;
            }
            isPromise(result) && (result = observableFromPromise(result));
            observer.onNext(result);
          }, function(err) {
            var result;
            try {
              result = onError.call(thisArg, err);
            } catch (e) {
              observer.onError(e);
              return ;
            }
            isPromise(result) && (result = observableFromPromise(result));
            observer.onNext(result);
            observer.onCompleted();
          }, function() {
            var result;
            try {
              result = onCompleted.call(thisArg);
            } catch (e) {
              observer.onError(e);
              return ;
            }
            isPromise(result) && (result = observableFromPromise(result));
            observer.onNext(result);
            observer.onCompleted();
          });
        }, source).mergeAll();
      };
      function flatMap(source, selector, thisArg) {
        var selectorFunc = bindCallback(selector, thisArg, 3);
        return source.map(function(x, i) {
          var result = selectorFunc(x, i, source);
          isPromise(result) && (result = observableFromPromise(result));
          (isArrayLike(result) || isIterable(result)) && (result = observableFrom(result));
          return result;
        }).mergeAll();
      }
      observableProto.selectMany = observableProto.flatMap = function(selector, resultSelector, thisArg) {
        if (isFunction(selector) && isFunction(resultSelector)) {
          return this.flatMap(function(x, i) {
            var selectorResult = selector(x, i);
            isPromise(selectorResult) && (selectorResult = observableFromPromise(selectorResult));
            (isArrayLike(selectorResult) || isIterable(selectorResult)) && (selectorResult = observableFrom(selectorResult));
            return selectorResult.map(function(y, i2) {
              return resultSelector(x, y, i, i2);
            });
          }, thisArg);
        }
        return isFunction(selector) ? flatMap(this, selector, thisArg) : flatMap(this, function() {
          return selector;
        });
      };
      observableProto.selectSwitch = observableProto.flatMapLatest = observableProto.switchMap = function(selector, thisArg) {
        return this.select(selector, thisArg).switchLatest();
      };
      observableProto.skip = function(count) {
        if (count < 0) {
          throw new ArgumentOutOfRangeError();
        }
        var source = this;
        return new AnonymousObservable(function(o) {
          var remaining = count;
          return source.subscribe(function(x) {
            if (remaining <= 0) {
              o.onNext(x);
            } else {
              remaining--;
            }
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, source);
      };
      observableProto.skipWhile = function(predicate, thisArg) {
        var source = this,
            callback = bindCallback(predicate, thisArg, 3);
        return new AnonymousObservable(function(o) {
          var i = 0,
              running = false;
          return source.subscribe(function(x) {
            if (!running) {
              try {
                running = !callback(x, i++, source);
              } catch (e) {
                o.onError(e);
                return ;
              }
            }
            running && o.onNext(x);
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, source);
      };
      observableProto.take = function(count, scheduler) {
        if (count < 0) {
          throw new ArgumentOutOfRangeError();
        }
        if (count === 0) {
          return observableEmpty(scheduler);
        }
        var source = this;
        return new AnonymousObservable(function(o) {
          var remaining = count;
          return source.subscribe(function(x) {
            if (remaining-- > 0) {
              o.onNext(x);
              remaining === 0 && o.onCompleted();
            }
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, source);
      };
      observableProto.takeWhile = function(predicate, thisArg) {
        var source = this,
            callback = bindCallback(predicate, thisArg, 3);
        return new AnonymousObservable(function(o) {
          var i = 0,
              running = true;
          return source.subscribe(function(x) {
            if (running) {
              try {
                running = callback(x, i++, source);
              } catch (e) {
                o.onError(e);
                return ;
              }
              if (running) {
                o.onNext(x);
              } else {
                o.onCompleted();
              }
            }
          }, function(e) {
            o.onError(e);
          }, function() {
            o.onCompleted();
          });
        }, source);
      };
      var FilterObservable = (function(__super__) {
        inherits(FilterObservable, __super__);
        function FilterObservable(source, predicate, thisArg) {
          this.source = source;
          this.predicate = bindCallback(predicate, thisArg, 3);
          __super__.call(this);
        }
        FilterObservable.prototype.subscribeCore = function(observer) {
          return this.source.subscribe(new FilterObserver(observer, this.predicate, this));
        };
        FilterObservable.prototype.internalFilter = function(predicate, thisArg) {
          var self = this;
          return new FilterObservable(this.source, function(x, i, o) {
            return self.predicate(x, i, o) && predicate.call(this, x, i, o);
          }, thisArg);
        };
        return FilterObservable;
      }(ObservableBase));
      function FilterObserver(observer, predicate, source) {
        this.observer = observer;
        this.predicate = predicate;
        this.source = source;
        this.i = 0;
        this.isStopped = false;
      }
      FilterObserver.prototype.onNext = function(x) {
        if (this.isStopped) {
          return ;
        }
        var shouldYield = tryCatch(this.predicate).call(this, x, this.i++, this.source);
        if (shouldYield === errorObj) {
          return this.observer.onError(shouldYield.e);
        }
        shouldYield && this.observer.onNext(x);
      };
      FilterObserver.prototype.onError = function(e) {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onError(e);
        }
      };
      FilterObserver.prototype.onCompleted = function() {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onCompleted();
        }
      };
      FilterObserver.prototype.dispose = function() {
        this.isStopped = true;
      };
      FilterObserver.prototype.fail = function(e) {
        if (!this.isStopped) {
          this.isStopped = true;
          this.observer.onError(e);
          return true;
        }
        return false;
      };
      observableProto.filter = observableProto.where = function(predicate, thisArg) {
        return this instanceof FilterObservable ? this.internalFilter(predicate, thisArg) : new FilterObservable(this, predicate, thisArg);
      };
      observableProto.transduce = function(transducer) {
        var source = this;
        function transformForObserver(o) {
          return {
            '@@transducer/init': function() {
              return o;
            },
            '@@transducer/step': function(obs, input) {
              return obs.onNext(input);
            },
            '@@transducer/result': function(obs) {
              return obs.onCompleted();
            }
          };
        }
        return new AnonymousObservable(function(o) {
          var xform = transducer(transformForObserver(o));
          return source.subscribe(function(v) {
            try {
              xform['@@transducer/step'](o, v);
            } catch (e) {
              o.onError(e);
            }
          }, function(e) {
            o.onError(e);
          }, function() {
            xform['@@transducer/result'](o);
          });
        }, source);
      };
      var AnonymousObservable = Rx.AnonymousObservable = (function(__super__) {
        inherits(AnonymousObservable, __super__);
        function fixSubscriber(subscriber) {
          return subscriber && isFunction(subscriber.dispose) ? subscriber : isFunction(subscriber) ? disposableCreate(subscriber) : disposableEmpty;
        }
        function setDisposable(s, state) {
          var ado = state[0],
              subscribe = state[1];
          var sub = tryCatch(subscribe)(ado);
          if (sub === errorObj) {
            if (!ado.fail(errorObj.e)) {
              return thrower(errorObj.e);
            }
          }
          ado.setDisposable(fixSubscriber(sub));
        }
        function AnonymousObservable(subscribe, parent) {
          this.source = parent;
          function s(observer) {
            var ado = new AutoDetachObserver(observer),
                state = [ado, subscribe];
            if (currentThreadScheduler.scheduleRequired()) {
              currentThreadScheduler.scheduleWithState(state, setDisposable);
            } else {
              setDisposable(null, state);
            }
            return ado;
          }
          __super__.call(this, s);
        }
        return AnonymousObservable;
      }(Observable));
      var AutoDetachObserver = (function(__super__) {
        inherits(AutoDetachObserver, __super__);
        function AutoDetachObserver(observer) {
          __super__.call(this);
          this.observer = observer;
          this.m = new SingleAssignmentDisposable();
        }
        var AutoDetachObserverPrototype = AutoDetachObserver.prototype;
        AutoDetachObserverPrototype.next = function(value) {
          var result = tryCatch(this.observer.onNext).call(this.observer, value);
          if (result === errorObj) {
            this.dispose();
            thrower(result.e);
          }
        };
        AutoDetachObserverPrototype.error = function(err) {
          var result = tryCatch(this.observer.onError).call(this.observer, err);
          this.dispose();
          result === errorObj && thrower(result.e);
        };
        AutoDetachObserverPrototype.completed = function() {
          var result = tryCatch(this.observer.onCompleted).call(this.observer);
          this.dispose();
          result === errorObj && thrower(result.e);
        };
        AutoDetachObserverPrototype.setDisposable = function(value) {
          this.m.setDisposable(value);
        };
        AutoDetachObserverPrototype.getDisposable = function() {
          return this.m.getDisposable();
        };
        AutoDetachObserverPrototype.dispose = function() {
          __super__.prototype.dispose.call(this);
          this.m.dispose();
        };
        return AutoDetachObserver;
      }(AbstractObserver));
      var InnerSubscription = function(subject, observer) {
        this.subject = subject;
        this.observer = observer;
      };
      InnerSubscription.prototype.dispose = function() {
        if (!this.subject.isDisposed && this.observer !== null) {
          var idx = this.subject.observers.indexOf(this.observer);
          this.subject.observers.splice(idx, 1);
          this.observer = null;
        }
      };
      var Subject = Rx.Subject = (function(__super__) {
        function subscribe(observer) {
          checkDisposed(this);
          if (!this.isStopped) {
            this.observers.push(observer);
            return new InnerSubscription(this, observer);
          }
          if (this.hasError) {
            observer.onError(this.error);
            return disposableEmpty;
          }
          observer.onCompleted();
          return disposableEmpty;
        }
        inherits(Subject, __super__);
        function Subject() {
          __super__.call(this, subscribe);
          this.isDisposed = false, this.isStopped = false, this.observers = [];
          this.hasError = false;
        }
        addProperties(Subject.prototype, Observer.prototype, {
          hasObservers: function() {
            return this.observers.length > 0;
          },
          onCompleted: function() {
            checkDisposed(this);
            if (!this.isStopped) {
              this.isStopped = true;
              for (var i = 0,
                  os = cloneArray(this.observers),
                  len = os.length; i < len; i++) {
                os[i].onCompleted();
              }
              this.observers.length = 0;
            }
          },
          onError: function(error) {
            checkDisposed(this);
            if (!this.isStopped) {
              this.isStopped = true;
              this.error = error;
              this.hasError = true;
              for (var i = 0,
                  os = cloneArray(this.observers),
                  len = os.length; i < len; i++) {
                os[i].onError(error);
              }
              this.observers.length = 0;
            }
          },
          onNext: function(value) {
            checkDisposed(this);
            if (!this.isStopped) {
              for (var i = 0,
                  os = cloneArray(this.observers),
                  len = os.length; i < len; i++) {
                os[i].onNext(value);
              }
            }
          },
          dispose: function() {
            this.isDisposed = true;
            this.observers = null;
          }
        });
        Subject.create = function(observer, observable) {
          return new AnonymousSubject(observer, observable);
        };
        return Subject;
      }(Observable));
      var AsyncSubject = Rx.AsyncSubject = (function(__super__) {
        function subscribe(observer) {
          checkDisposed(this);
          if (!this.isStopped) {
            this.observers.push(observer);
            return new InnerSubscription(this, observer);
          }
          if (this.hasError) {
            observer.onError(this.error);
          } else if (this.hasValue) {
            observer.onNext(this.value);
            observer.onCompleted();
          } else {
            observer.onCompleted();
          }
          return disposableEmpty;
        }
        inherits(AsyncSubject, __super__);
        function AsyncSubject() {
          __super__.call(this, subscribe);
          this.isDisposed = false;
          this.isStopped = false;
          this.hasValue = false;
          this.observers = [];
          this.hasError = false;
        }
        addProperties(AsyncSubject.prototype, Observer, {
          hasObservers: function() {
            checkDisposed(this);
            return this.observers.length > 0;
          },
          onCompleted: function() {
            var i,
                len;
            checkDisposed(this);
            if (!this.isStopped) {
              this.isStopped = true;
              var os = cloneArray(this.observers),
                  len = os.length;
              if (this.hasValue) {
                for (i = 0; i < len; i++) {
                  var o = os[i];
                  o.onNext(this.value);
                  o.onCompleted();
                }
              } else {
                for (i = 0; i < len; i++) {
                  os[i].onCompleted();
                }
              }
              this.observers.length = 0;
            }
          },
          onError: function(error) {
            checkDisposed(this);
            if (!this.isStopped) {
              this.isStopped = true;
              this.hasError = true;
              this.error = error;
              for (var i = 0,
                  os = cloneArray(this.observers),
                  len = os.length; i < len; i++) {
                os[i].onError(error);
              }
              this.observers.length = 0;
            }
          },
          onNext: function(value) {
            checkDisposed(this);
            if (this.isStopped) {
              return ;
            }
            this.value = value;
            this.hasValue = true;
          },
          dispose: function() {
            this.isDisposed = true;
            this.observers = null;
            this.exception = null;
            this.value = null;
          }
        });
        return AsyncSubject;
      }(Observable));
      var AnonymousSubject = Rx.AnonymousSubject = (function(__super__) {
        inherits(AnonymousSubject, __super__);
        function subscribe(observer) {
          return this.observable.subscribe(observer);
        }
        function AnonymousSubject(observer, observable) {
          this.observer = observer;
          this.observable = observable;
          __super__.call(this, subscribe);
        }
        addProperties(AnonymousSubject.prototype, Observer.prototype, {
          onCompleted: function() {
            this.observer.onCompleted();
          },
          onError: function(error) {
            this.observer.onError(error);
          },
          onNext: function(value) {
            this.observer.onNext(value);
          }
        });
        return AnonymousSubject;
      }(Observable));
      if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
        root.Rx = Rx;
        define(function() {
          return Rx;
        });
      } else if (freeExports && freeModule) {
        if (moduleExports) {
          (freeModule.exports = Rx).Rx = Rx;
        } else {
          freeExports.Rx = Rx;
        }
      } else {
        root.Rx = Rx;
      }
      var rEndingLine = captureLine();
    }.call(this));
  })(require("github:jspm/nodelibs-process@0.1.1"));
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/di", ["npm:angular2@2.0.0-alpha.24/src/di/annotations", "npm:angular2@2.0.0-alpha.24/src/di/decorators", "npm:angular2@2.0.0-alpha.24/src/di/forward_ref", "npm:angular2@2.0.0-alpha.24/src/di/injector", "npm:angular2@2.0.0-alpha.24/src/di/binding", "npm:angular2@2.0.0-alpha.24/src/di/key", "npm:angular2@2.0.0-alpha.24/src/di/exceptions", "npm:angular2@2.0.0-alpha.24/src/di/opaque_token"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  __export(require("npm:angular2@2.0.0-alpha.24/src/di/annotations"));
  __export(require("npm:angular2@2.0.0-alpha.24/src/di/decorators"));
  __export(require("npm:angular2@2.0.0-alpha.24/src/di/forward_ref"));
  var injector_1 = require("npm:angular2@2.0.0-alpha.24/src/di/injector");
  exports.resolveBindings = injector_1.resolveBindings;
  exports.Injector = injector_1.Injector;
  var binding_1 = require("npm:angular2@2.0.0-alpha.24/src/di/binding");
  exports.Binding = binding_1.Binding;
  exports.ResolvedBinding = binding_1.ResolvedBinding;
  exports.Dependency = binding_1.Dependency;
  exports.bind = binding_1.bind;
  var key_1 = require("npm:angular2@2.0.0-alpha.24/src/di/key");
  exports.Key = key_1.Key;
  exports.KeyRegistry = key_1.KeyRegistry;
  exports.TypeLiteral = key_1.TypeLiteral;
  var exceptions_1 = require("npm:angular2@2.0.0-alpha.24/src/di/exceptions");
  exports.NoBindingError = exceptions_1.NoBindingError;
  exports.AbstractBindingError = exceptions_1.AbstractBindingError;
  exports.AsyncBindingError = exceptions_1.AsyncBindingError;
  exports.CyclicDependencyError = exceptions_1.CyclicDependencyError;
  exports.InstantiationError = exceptions_1.InstantiationError;
  exports.InvalidBindingError = exceptions_1.InvalidBindingError;
  exports.NoAnnotationError = exceptions_1.NoAnnotationError;
  var opaque_token_1 = require("npm:angular2@2.0.0-alpha.24/src/di/opaque_token");
  exports.OpaqueToken = opaque_token_1.OpaqueToken;
  exports.__esModule = true;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager", ["npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager_utils", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_pool"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    AppViewManager: {get: function() {
        return AppViewManager;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_di__,
      $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__view__,
      $__element_95_ref__,
      $__view_95_ref__,
      $__view_95_container_95_ref__,
      $__angular2_47_src_47_render_47_api__,
      $__view_95_manager_95_utils__,
      $__view_95_pool__;
  var $__0 = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}),
      Injector = $__0.Injector,
      Binding = $__0.Binding;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__2.isPresent,
      isBlank = $__2.isBlank,
      BaseException = $__2.BaseException;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var ElementRef = ($__element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__element_95_ref__ && $__element_95_ref__.__esModule && $__element_95_ref__ || {default: $__element_95_ref__}).ElementRef;
  var $__4 = ($__view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__view_95_ref__ && $__view_95_ref__.__esModule && $__view_95_ref__ || {default: $__view_95_ref__}),
      ProtoViewRef = $__4.ProtoViewRef,
      ViewRef = $__4.ViewRef,
      internalView = $__4.internalView,
      internalProtoView = $__4.internalProtoView;
  var ViewContainerRef = ($__view_95_container_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref"), $__view_95_container_95_ref__ && $__view_95_container_95_ref__.__esModule && $__view_95_container_95_ref__ || {default: $__view_95_container_95_ref__}).ViewContainerRef;
  var $__6 = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}),
      Renderer = $__6.Renderer,
      RenderViewRef = $__6.RenderViewRef;
  var AppViewManagerUtils = ($__view_95_manager_95_utils__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager_utils"), $__view_95_manager_95_utils__ && $__view_95_manager_95_utils__.__esModule && $__view_95_manager_95_utils__ || {default: $__view_95_manager_95_utils__}).AppViewManagerUtils;
  var AppViewPool = ($__view_95_pool__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_pool"), $__view_95_pool__ && $__view_95_pool__.__esModule && $__view_95_pool__ || {default: $__view_95_pool__}).AppViewPool;
  var AppViewManager = function AppViewManager(viewPool, utils, renderer) {
    this._renderer = renderer;
    this._viewPool = viewPool;
    this._utils = utils;
  };
  ($traceurRuntime.createClass)(AppViewManager, {
    getComponentView: function(hostLocation) {
      var hostView = internalView(hostLocation.parentView);
      var boundElementIndex = hostLocation.boundElementIndex;
      return new ViewRef(hostView.componentChildViews[boundElementIndex]);
    },
    getViewContainer: function(location) {
      var hostView = internalView(location.parentView);
      return hostView.elementInjectors[location.boundElementIndex].getViewContainerRef();
    },
    getComponent: function(hostLocation) {
      var hostView = internalView(hostLocation.parentView);
      var boundElementIndex = hostLocation.boundElementIndex;
      return this._utils.getComponentInstance(hostView, boundElementIndex);
    },
    createDynamicComponentView: function(hostLocation, componentProtoViewRef, componentBinding, injector) {
      var componentProtoView = internalProtoView(componentProtoViewRef);
      var hostView = internalView(hostLocation.parentView);
      var boundElementIndex = hostLocation.boundElementIndex;
      var binder = hostView.proto.elementBinders[boundElementIndex];
      if (!binder.hasDynamicComponent()) {
        throw new BaseException(("There is no dynamic component directive at element " + boundElementIndex));
      }
      var componentView = this._createPooledView(componentProtoView);
      this._renderer.attachComponentView(hostView.render, boundElementIndex, componentView.render);
      this._utils.attachComponentView(hostView, boundElementIndex, componentView);
      this._utils.hydrateDynamicComponentInElementInjector(hostView, boundElementIndex, componentBinding, injector);
      this._utils.hydrateComponentView(hostView, boundElementIndex);
      this._viewHydrateRecurse(componentView);
      return new ViewRef(componentView);
    },
    createRootHostView: function(hostProtoViewRef, overrideSelector, injector) {
      var hostProtoView = internalProtoView(hostProtoViewRef);
      var hostElementSelector = overrideSelector;
      if (isBlank(hostElementSelector)) {
        hostElementSelector = hostProtoView.elementBinders[0].componentDirective.metadata.selector;
      }
      var renderView = this._renderer.createRootHostView(hostProtoView.render, hostElementSelector);
      var hostView = this._utils.createView(hostProtoView, renderView, this, this._renderer);
      this._renderer.setEventDispatcher(hostView.render, hostView);
      this._createViewRecurse(hostView);
      this._utils.hydrateRootHostView(hostView, injector);
      this._viewHydrateRecurse(hostView);
      return new ViewRef(hostView);
    },
    destroyRootHostView: function(hostViewRef) {
      var hostView = internalView(hostViewRef);
      this._viewDehydrateRecurse(hostView, true);
      this._renderer.destroyView(hostView.render);
    },
    createFreeHostView: function(parentComponentLocation, hostProtoViewRef, injector) {
      var hostProtoView = internalProtoView(hostProtoViewRef);
      var hostView = this._createPooledView(hostProtoView);
      var parentComponentHostView = internalView(parentComponentLocation.parentView);
      var parentComponentBoundElementIndex = parentComponentLocation.boundElementIndex;
      this._utils.attachAndHydrateFreeHostView(parentComponentHostView, parentComponentBoundElementIndex, hostView, injector);
      this._viewHydrateRecurse(hostView);
      return new ViewRef(hostView);
    },
    destroyFreeHostView: function(parentComponentLocation, hostViewRef) {
      var hostView = internalView(hostViewRef);
      var parentView = internalView(parentComponentLocation.parentView).componentChildViews[parentComponentLocation.boundElementIndex];
      this._destroyFreeHostView(parentView, hostView);
    },
    createViewInContainer: function(viewContainerLocation, atIndex, protoViewRef) {
      var context = arguments[3] !== (void 0) ? arguments[3] : null;
      var injector = arguments[4] !== (void 0) ? arguments[4] : null;
      var protoView = internalProtoView(protoViewRef);
      var parentView = internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      var contextView = null;
      var contextBoundElementIndex = null;
      if (isPresent(context)) {
        contextView = internalView(context.parentView);
        contextBoundElementIndex = context.boundElementIndex;
      }
      var view = this._createPooledView(protoView);
      this._renderer.attachViewInContainer(parentView.render, boundElementIndex, atIndex, view.render);
      this._utils.attachViewInContainer(parentView, boundElementIndex, contextView, contextBoundElementIndex, atIndex, view);
      this._utils.hydrateViewInContainer(parentView, boundElementIndex, contextView, contextBoundElementIndex, atIndex, injector);
      this._viewHydrateRecurse(view);
      return new ViewRef(view);
    },
    destroyViewInContainer: function(viewContainerLocation, atIndex) {
      var parentView = internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      this._destroyViewInContainer(parentView, boundElementIndex, atIndex);
    },
    attachViewInContainer: function(viewContainerLocation, atIndex, viewRef) {
      var view = internalView(viewRef);
      var parentView = internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      this._utils.attachViewInContainer(parentView, boundElementIndex, null, null, atIndex, view);
      this._renderer.attachViewInContainer(parentView.render, boundElementIndex, atIndex, view.render);
      return viewRef;
    },
    detachViewInContainer: function(viewContainerLocation, atIndex) {
      var parentView = internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[atIndex];
      this._utils.detachViewInContainer(parentView, boundElementIndex, atIndex);
      this._renderer.detachViewInContainer(parentView.render, boundElementIndex, atIndex, view.render);
      return new ViewRef(view);
    },
    _createPooledView: function(protoView) {
      var view = this._viewPool.getView(protoView);
      if (isBlank(view)) {
        view = this._utils.createView(protoView, this._renderer.createView(protoView.render), this, this._renderer);
        this._renderer.setEventDispatcher(view.render, view);
        this._createViewRecurse(view);
      }
      return view;
    },
    _createViewRecurse: function(view) {
      var binders = view.proto.elementBinders;
      for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
        var binder = binders[binderIdx];
        if (binder.hasStaticComponent()) {
          var childView = this._createPooledView(binder.nestedProtoView);
          this._renderer.attachComponentView(view.render, binderIdx, childView.render);
          this._utils.attachComponentView(view, binderIdx, childView);
        }
      }
    },
    _destroyPooledView: function(view) {
      this._viewPool.returnView(view);
    },
    _destroyViewInContainer: function(parentView, boundElementIndex, atIndex) {
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[atIndex];
      this._viewDehydrateRecurse(view, false);
      this._utils.detachViewInContainer(parentView, boundElementIndex, atIndex);
      this._renderer.detachViewInContainer(parentView.render, boundElementIndex, atIndex, view.render);
      this._destroyPooledView(view);
    },
    _destroyComponentView: function(hostView, boundElementIndex, componentView) {
      this._viewDehydrateRecurse(componentView, false);
      this._renderer.detachComponentView(hostView.render, boundElementIndex, componentView.render);
      this._utils.detachComponentView(hostView, boundElementIndex);
      this._destroyPooledView(componentView);
    },
    _destroyFreeHostView: function(parentView, hostView) {
      this._viewDehydrateRecurse(hostView, true);
      this._renderer.detachFreeHostView(parentView.render, hostView.render);
      this._utils.detachFreeHostView(parentView, hostView);
      this._destroyPooledView(hostView);
    },
    _viewHydrateRecurse: function(view) {
      this._renderer.hydrateView(view.render);
      var binders = view.proto.elementBinders;
      for (var i = 0; i < binders.length; ++i) {
        if (binders[i].hasStaticComponent()) {
          this._utils.hydrateComponentView(view, i);
          this._viewHydrateRecurse(view.componentChildViews[i]);
        }
      }
    },
    _viewDehydrateRecurse: function(view, forceDestroyComponents) {
      this._utils.dehydrateView(view);
      this._renderer.dehydrateView(view.render);
      var binders = view.proto.elementBinders;
      for (var i = 0; i < binders.length; i++) {
        var componentView = view.componentChildViews[i];
        if (isPresent(componentView)) {
          if (binders[i].hasDynamicComponent() || forceDestroyComponents) {
            this._destroyComponentView(view, i, componentView);
          } else {
            this._viewDehydrateRecurse(componentView, false);
          }
        }
        var vc = view.viewContainers[i];
        if (isPresent(vc)) {
          for (var j = vc.views.length - 1; j >= 0; j--) {
            this._destroyViewInContainer(view, i, j);
          }
        }
      }
      for (var i = view.freeHostViews.length - 1; i >= 0; i--) {
        var hostView = view.freeHostViews[i];
        this._destroyFreeHostView(view, hostView);
      }
    }
  }, {});
  Object.defineProperty(AppViewManager, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(AppViewManager, "parameters", {get: function() {
      return [[AppViewPool], [AppViewManagerUtils], [Renderer]];
    }});
  Object.defineProperty(AppViewManager.prototype.getComponentView, "parameters", {get: function() {
      return [[ElementRef]];
    }});
  Object.defineProperty(AppViewManager.prototype.getViewContainer, "parameters", {get: function() {
      return [[ElementRef]];
    }});
  Object.defineProperty(AppViewManager.prototype.getComponent, "parameters", {get: function() {
      return [[ElementRef]];
    }});
  Object.defineProperty(AppViewManager.prototype.createDynamicComponentView, "parameters", {get: function() {
      return [[ElementRef], [ProtoViewRef], [Binding], [Injector]];
    }});
  Object.defineProperty(AppViewManager.prototype.createRootHostView, "parameters", {get: function() {
      return [[ProtoViewRef], [$traceurRuntime.type.string], [Injector]];
    }});
  Object.defineProperty(AppViewManager.prototype.destroyRootHostView, "parameters", {get: function() {
      return [[ViewRef]];
    }});
  Object.defineProperty(AppViewManager.prototype.createFreeHostView, "parameters", {get: function() {
      return [[ElementRef], [ProtoViewRef], [Injector]];
    }});
  Object.defineProperty(AppViewManager.prototype.destroyFreeHostView, "parameters", {get: function() {
      return [[ElementRef], [ViewRef]];
    }});
  Object.defineProperty(AppViewManager.prototype.createViewInContainer, "parameters", {get: function() {
      return [[ElementRef], [$traceurRuntime.type.number], [ProtoViewRef], [ElementRef], [Injector]];
    }});
  Object.defineProperty(AppViewManager.prototype.destroyViewInContainer, "parameters", {get: function() {
      return [[ElementRef], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManager.prototype.attachViewInContainer, "parameters", {get: function() {
      return [[ElementRef], [$traceurRuntime.type.number], [ViewRef]];
    }});
  Object.defineProperty(AppViewManager.prototype.detachViewInContainer, "parameters", {get: function() {
      return [[ElementRef], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManager.prototype._createPooledView, "parameters", {get: function() {
      return [[viewModule.AppProtoView]];
    }});
  Object.defineProperty(AppViewManager.prototype._createViewRecurse, "parameters", {get: function() {
      return [[viewModule.AppView]];
    }});
  Object.defineProperty(AppViewManager.prototype._destroyPooledView, "parameters", {get: function() {
      return [[viewModule.AppView]];
    }});
  Object.defineProperty(AppViewManager.prototype._destroyViewInContainer, "parameters", {get: function() {
      return [[], [], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(AppViewManager.prototype._viewHydrateRecurse, "parameters", {get: function() {
      return [[viewModule.AppView]];
    }});
  Object.defineProperty(AppViewManager.prototype._viewDehydrateRecurse, "parameters", {get: function() {
      return [[viewModule.AppView], []];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compiler", ["npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_pipeline", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step_factory", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    DomCompiler: {get: function() {
        return DomCompiler;
      }},
    DefaultDomCompiler: {get: function() {
        return DefaultDomCompiler;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $___46__46__47__46__46__47_api__,
      $__compile_95_pipeline__,
      $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__,
      $__compile_95_step_95_factory__,
      $__angular2_47_change_95_detection__,
      $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__1 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      PromiseWrapper = $__1.PromiseWrapper,
      Promise = $__1.Promise;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      BaseException = $__2.BaseException,
      isPresent = $__2.isPresent;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__4 = ($___46__46__47__46__46__47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $___46__46__47__46__46__47_api__ && $___46__46__47__46__46__47_api__.__esModule && $___46__46__47__46__46__47_api__ || {default: $___46__46__47__46__46__47_api__}),
      ViewDefinition = $__4.ViewDefinition,
      ProtoViewDto = $__4.ProtoViewDto,
      DirectiveMetadata = $__4.DirectiveMetadata,
      RenderCompiler = $__4.RenderCompiler,
      RenderProtoViewRef = $__4.RenderProtoViewRef;
  var CompilePipeline = ($__compile_95_pipeline__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_pipeline"), $__compile_95_pipeline__ && $__compile_95_pipeline__.__esModule && $__compile_95_pipeline__ || {default: $__compile_95_pipeline__}).CompilePipeline;
  var TemplateLoader = ($__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader"), $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__ && $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__.__esModule && $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__ || {default: $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__}).TemplateLoader;
  var $__7 = ($__compile_95_step_95_factory__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compile_step_factory"), $__compile_95_step_95_factory__ && $__compile_95_step_95_factory__.__esModule && $__compile_95_step_95_factory__ || {default: $__compile_95_step_95_factory__}),
      CompileStepFactory = $__7.CompileStepFactory,
      DefaultStepFactory = $__7.DefaultStepFactory;
  var Parser = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}).Parser;
  var ShadowDomStrategy = ($___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__ && $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__.__esModule && $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__ || {default: $___46__46__47_shadow_95_dom_47_shadow_95_dom_95_strategy__}).ShadowDomStrategy;
  var DomCompiler = function DomCompiler(stepFactory, templateLoader) {
    $traceurRuntime.superConstructor($DomCompiler).call(this);
    this._templateLoader = templateLoader;
    this._stepFactory = stepFactory;
  };
  var $DomCompiler = DomCompiler;
  ($traceurRuntime.createClass)(DomCompiler, {
    compile: function(template) {
      var $__10 = this;
      var tplPromise = this._templateLoader.load(template);
      return PromiseWrapper.then(tplPromise, (function(el) {
        return $__10._compileTemplate(template, el, ProtoViewDto.COMPONENT_VIEW_TYPE);
      }), (function(_) {
        throw new BaseException(("Failed to load the template \"" + template.componentId + "\""));
      }));
    },
    compileHost: function(directiveMetadata) {
      var hostViewDef = new ViewDefinition({
        componentId: directiveMetadata.id,
        absUrl: null,
        template: null,
        directives: [directiveMetadata]
      });
      var element = DOM.createElement(directiveMetadata.selector);
      return this._compileTemplate(hostViewDef, element, ProtoViewDto.HOST_VIEW_TYPE);
    },
    _compileTemplate: function(viewDef, tplElement, protoViewType) {
      var subTaskPromises = [];
      var pipeline = new CompilePipeline(this._stepFactory.createSteps(viewDef, subTaskPromises));
      var compileElements = pipeline.process(tplElement, protoViewType, viewDef.componentId);
      var protoView = compileElements[0].inheritedProtoView.build();
      if (subTaskPromises.length > 0) {
        return PromiseWrapper.all(subTaskPromises).then((function(_) {
          return protoView;
        }));
      } else {
        return PromiseWrapper.resolve(protoView);
      }
    }
  }, {}, RenderCompiler);
  Object.defineProperty(DomCompiler, "parameters", {get: function() {
      return [[CompileStepFactory], [TemplateLoader]];
    }});
  Object.defineProperty(DomCompiler.prototype.compile, "parameters", {get: function() {
      return [[ViewDefinition]];
    }});
  Object.defineProperty(DomCompiler.prototype.compileHost, "parameters", {get: function() {
      return [[DirectiveMetadata]];
    }});
  Object.defineProperty(DomCompiler.prototype._compileTemplate, "parameters", {get: function() {
      return [[ViewDefinition], [], [$traceurRuntime.type.number]];
    }});
  var DefaultDomCompiler = function DefaultDomCompiler(parser, shadowDomStrategy, templateLoader) {
    $traceurRuntime.superConstructor($DefaultDomCompiler).call(this, new DefaultStepFactory(parser, shadowDomStrategy), templateLoader);
  };
  var $DefaultDomCompiler = DefaultDomCompiler;
  ($traceurRuntime.createClass)(DefaultDomCompiler, {}, {}, DomCompiler);
  Object.defineProperty(DefaultDomCompiler, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(DefaultDomCompiler, "parameters", {get: function() {
      return [[Parser], [ShadowDomStrategy], [TemplateLoader]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1/index", ["npm:rx@2.5.1/dist/rx", "npm:rx@2.5.1/dist/rx.aggregates", "npm:rx@2.5.1/dist/rx.async", "npm:rx@2.5.1/dist/rx.backpressure", "npm:rx@2.5.1/dist/rx.binding", "npm:rx@2.5.1/dist/rx.coincidence", "npm:rx@2.5.1/dist/rx.experimental", "npm:rx@2.5.1/dist/rx.joinpatterns", "npm:rx@2.5.1/dist/rx.sorting", "npm:rx@2.5.1/dist/rx.virtualtime", "npm:rx@2.5.1/dist/rx.testing", "npm:rx@2.5.1/dist/rx.time"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var Rx = require("npm:rx@2.5.1/dist/rx");
  require("npm:rx@2.5.1/dist/rx.aggregates");
  require("npm:rx@2.5.1/dist/rx.async");
  require("npm:rx@2.5.1/dist/rx.backpressure");
  require("npm:rx@2.5.1/dist/rx.binding");
  require("npm:rx@2.5.1/dist/rx.coincidence");
  require("npm:rx@2.5.1/dist/rx.experimental");
  require("npm:rx@2.5.1/dist/rx.joinpatterns");
  require("npm:rx@2.5.1/dist/rx.sorting");
  require("npm:rx@2.5.1/dist/rx.virtualtime");
  require("npm:rx@2.5.1/dist/rx.testing");
  require("npm:rx@2.5.1/dist/rx.time");
  module.exports = Rx;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/di", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/core/compiler/query_list", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    TreeNode: {get: function() {
        return TreeNode;
      }},
    DirectiveDependency: {get: function() {
        return DirectiveDependency;
      }},
    DirectiveBinding: {get: function() {
        return DirectiveBinding;
      }},
    PreBuiltObjects: {get: function() {
        return PreBuiltObjects;
      }},
    ProtoElementInjector: {get: function() {
        return ProtoElementInjector;
      }},
    ElementInjector: {get: function() {
        return ElementInjector;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_di__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_di__,
      $__view__,
      $__view_95_manager__,
      $__view_95_container_95_ref__,
      $__element_95_ref__,
      $__view_95_ref__,
      $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__,
      $__angular2_47_change_95_detection__,
      $__query_95_list__,
      $__angular2_47_src_47_reflection_47_reflection__,
      $__angular2_47_src_47_render_47_api__;
  var $__0 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      isPresent = $__0.isPresent,
      isBlank = $__0.isBlank,
      Type = $__0.Type,
      int = $__0.int,
      BaseException = $__0.BaseException,
      stringify = $__0.stringify;
  var $__1 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      EventEmitter = $__1.EventEmitter,
      ObservableWrapper = $__1.ObservableWrapper;
  var $__2 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__2.List,
      ListWrapper = $__2.ListWrapper,
      MapWrapper = $__2.MapWrapper,
      StringMapWrapper = $__2.StringMapWrapper;
  var $__3 = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}),
      Injector = $__3.Injector,
      Key = $__3.Key,
      Dependency = $__3.Dependency,
      bind = $__3.bind,
      Binding = $__3.Binding,
      ResolvedBinding = $__3.ResolvedBinding,
      NoBindingError = $__3.NoBindingError,
      AbstractBindingError = $__3.AbstractBindingError,
      CyclicDependencyError = $__3.CyclicDependencyError,
      resolveForwardRef = $__3.resolveForwardRef,
      resolveBindings = $__3.resolveBindings;
  var $__4 = ($__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/visibility"), $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_visibility__}),
      Visibility = $__4.Visibility,
      Self = $__4.Self;
  var $__5 = ($__angular2_47_src_47_core_47_annotations_95_impl_47_di__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/di"), $__angular2_47_src_47_core_47_annotations_95_impl_47_di__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_di__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_di__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_di__}),
      Attribute = $__5.Attribute,
      Query = $__5.Query;
  var viewModule = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__});
  var avmModule = ($__view_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager"), $__view_95_manager__ && $__view_95_manager__.__esModule && $__view_95_manager__ || {default: $__view_95_manager__});
  var ViewContainerRef = ($__view_95_container_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref"), $__view_95_container_95_ref__ && $__view_95_container_95_ref__.__esModule && $__view_95_container_95_ref__ || {default: $__view_95_container_95_ref__}).ViewContainerRef;
  var ElementRef = ($__element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__element_95_ref__ && $__element_95_ref__.__esModule && $__element_95_ref__ || {default: $__element_95_ref__}).ElementRef;
  var $__8 = ($__view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__view_95_ref__ && $__view_95_ref__.__esModule && $__view_95_ref__ || {default: $__view_95_ref__}),
      ProtoViewRef = $__8.ProtoViewRef,
      ViewRef = $__8.ViewRef;
  var $__9 = ($__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/annotations"), $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__.__esModule && $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__ || {default: $__angular2_47_src_47_core_47_annotations_95_impl_47_annotations__}),
      Directive = $__9.Directive,
      Component = $__9.Component,
      onChange = $__9.onChange,
      onDestroy = $__9.onDestroy,
      onAllChangesDone = $__9.onAllChangesDone;
  var $__10 = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}),
      ChangeDetector = $__10.ChangeDetector,
      ChangeDetectorRef = $__10.ChangeDetectorRef;
  var QueryList = ($__query_95_list__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/query_list"), $__query_95_list__ && $__query_95_list__.__esModule && $__query_95_list__ || {default: $__query_95_list__}).QueryList;
  var reflector = ($__angular2_47_src_47_reflection_47_reflection__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection"), $__angular2_47_src_47_reflection_47_reflection__ && $__angular2_47_src_47_reflection_47_reflection__.__esModule && $__angular2_47_src_47_reflection_47_reflection__ || {default: $__angular2_47_src_47_reflection_47_reflection__}).reflector;
  var DirectiveMetadata = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}).DirectiveMetadata;
  var _MAX_DIRECTIVE_CONSTRUCTION_COUNTER = 10;
  var _undefined = new Object();
  var _staticKeys;
  var StaticKeys = function StaticKeys() {
    this.viewManagerId = Key.get(avmModule.AppViewManager).id;
    this.protoViewId = Key.get(ProtoViewRef).id;
    this.viewContainerId = Key.get(ViewContainerRef).id;
    this.changeDetectorRefId = Key.get(ChangeDetectorRef).id;
    this.elementRefId = Key.get(ElementRef).id;
  };
  var $StaticKeys = StaticKeys;
  ($traceurRuntime.createClass)(StaticKeys, {}, {instance: function() {
      if (isBlank(_staticKeys))
        _staticKeys = new $StaticKeys();
      return _staticKeys;
    }});
  var TreeNode = function TreeNode(parent) {
    this._head = null;
    this._tail = null;
    this._next = null;
    if (isPresent(parent))
      parent.addChild(this);
  };
  var $TreeNode = TreeNode;
  ($traceurRuntime.createClass)(TreeNode, {
    _assertConsistency: function() {
      this._assertHeadBeforeTail();
      this._assertTailReachable();
      this._assertPresentInParentList();
    },
    _assertHeadBeforeTail: function() {
      if (isBlank(this._tail) && isPresent(this._head))
        throw new BaseException('null tail but non-null head');
    },
    _assertTailReachable: function() {
      if (isBlank(this._tail))
        return ;
      if (isPresent(this._tail._next))
        throw new BaseException('node after tail');
      var p = this._head;
      while (isPresent(p) && p != this._tail)
        p = p._next;
      if (isBlank(p) && isPresent(this._tail))
        throw new BaseException('tail not reachable.');
    },
    _assertPresentInParentList: function() {
      var p = this._parent;
      if (isBlank(p)) {
        return ;
      }
      var cur = p._head;
      while (isPresent(cur) && cur != this)
        cur = cur._next;
      if (isBlank(cur))
        throw new BaseException('node not reachable through parent.');
    },
    addChild: function(child) {
      if (isPresent(this._tail)) {
        this._tail._next = child;
        this._tail = child;
      } else {
        this._tail = this._head = child;
      }
      child._next = null;
      child._parent = this;
      this._assertConsistency();
    },
    addChildAfter: function(child, prevSibling) {
      this._assertConsistency();
      if (isBlank(prevSibling)) {
        var prevHead = this._head;
        this._head = child;
        child._next = prevHead;
        if (isBlank(this._tail))
          this._tail = child;
      } else if (isBlank(prevSibling._next)) {
        this.addChild(child);
        return ;
      } else {
        prevSibling._assertPresentInParentList();
        child._next = prevSibling._next;
        prevSibling._next = child;
      }
      child._parent = this;
      this._assertConsistency();
    },
    remove: function() {
      this._assertConsistency();
      if (isBlank(this.parent))
        return ;
      var nextSibling = this._next;
      var prevSibling = this._findPrev();
      if (isBlank(prevSibling)) {
        this.parent._head = this._next;
      } else {
        prevSibling._next = this._next;
      }
      if (isBlank(nextSibling)) {
        this._parent._tail = prevSibling;
      }
      this._parent._assertConsistency();
      this._parent = null;
      this._next = null;
      this._assertConsistency();
    },
    _findPrev: function() {
      var node = this.parent._head;
      if (node == this)
        return null;
      while (node._next !== this)
        node = node._next;
      return node;
    },
    get parent() {
      return this._parent;
    },
    get children() {
      var res = [];
      var child = this._head;
      while (child != null) {
        ListWrapper.push(res, child);
        child = child._next;
      }
      return res;
    }
  }, {});
  Object.defineProperty(TreeNode, "parameters", {get: function() {
      return [[TreeNode]];
    }});
  Object.defineProperty(TreeNode.prototype.addChild, "parameters", {get: function() {
      return [[TreeNode]];
    }});
  Object.defineProperty(TreeNode.prototype.addChildAfter, "parameters", {get: function() {
      return [[TreeNode], [TreeNode]];
    }});
  var DirectiveDependency = function DirectiveDependency(key, asPromise, lazy, optional, properties, visibility, attributeName, queryDirective) {
    $traceurRuntime.superConstructor($DirectiveDependency).call(this, key, asPromise, lazy, optional, properties);
    this.visibility = visibility;
    ;
    this.attributeName = attributeName;
    this.queryDirective = queryDirective;
    this._verify();
  };
  var $DirectiveDependency = DirectiveDependency;
  ($traceurRuntime.createClass)(DirectiveDependency, {_verify: function() {
      var count = 0;
      if (isPresent(this.queryDirective))
        count++;
      if (isPresent(this.attributeName))
        count++;
      if (count > 1)
        throw new BaseException('A directive injectable can contain only one of the following @Attribute or @Query.');
    }}, {
    createFrom: function(d) {
      return new $DirectiveDependency(d.key, d.asPromise, d.lazy, d.optional, d.properties, $DirectiveDependency._visibility(d.properties), $DirectiveDependency._attributeName(d.properties), $DirectiveDependency._query(d.properties));
    },
    _visibility: function(properties) {
      if (properties.length == 0)
        return new Self();
      var p = ListWrapper.find(properties, (function(p) {
        return p instanceof Visibility;
      }));
      return isPresent(p) ? p : new Self();
    },
    _attributeName: function(properties) {
      var p = ListWrapper.find(properties, (function(p) {
        return p instanceof Attribute;
      }));
      return isPresent(p) ? p.attributeName : null;
    },
    _query: function(properties) {
      var p = ListWrapper.find(properties, (function(p) {
        return p instanceof Query;
      }));
      return isPresent(p) ? resolveForwardRef(p.directive) : null;
    }
  }, Dependency);
  Object.defineProperty(DirectiveDependency, "parameters", {get: function() {
      return [[Key], [$traceurRuntime.type.boolean], [$traceurRuntime.type.boolean], [$traceurRuntime.type.boolean], [List], [Visibility], [$traceurRuntime.type.string], []];
    }});
  Object.defineProperty(DirectiveDependency.createFrom, "parameters", {get: function() {
      return [[Dependency]];
    }});
  var DirectiveBinding = function DirectiveBinding(key, factory, dependencies, providedAsPromise, resolvedAppInjectables, resolvedHostInjectables, resolvedViewInjectables, metadata) {
    $traceurRuntime.superConstructor($DirectiveBinding).call(this, key, factory, dependencies, providedAsPromise);
    this.resolvedAppInjectables = resolvedAppInjectables;
    this.resolvedHostInjectables = resolvedHostInjectables;
    this.resolvedViewInjectables = resolvedViewInjectables;
    this.metadata = metadata;
  };
  var $DirectiveBinding = DirectiveBinding;
  ($traceurRuntime.createClass)(DirectiveBinding, {
    get callOnDestroy() {
      return this.metadata.callOnDestroy;
    },
    get callOnChange() {
      return this.metadata.callOnChange;
    },
    get callOnAllChangesDone() {
      return this.metadata.callOnAllChangesDone;
    },
    get displayName() {
      return this.key.displayName;
    },
    get eventEmitters() {
      return isPresent(this.metadata) && isPresent(this.metadata.events) ? this.metadata.events : [];
    },
    get hostActions() {
      return isPresent(this.metadata) && isPresent(this.metadata.hostActions) ? this.metadata.hostActions : MapWrapper.create();
    },
    get changeDetection() {
      return this.metadata.changeDetection;
    }
  }, {
    createFromBinding: function(binding, ann) {
      if (isBlank(ann)) {
        ann = new Directive();
      }
      var rb = binding.resolve();
      var deps = ListWrapper.map(rb.dependencies, DirectiveDependency.createFrom);
      var resolvedAppInjectables = ann instanceof Component && isPresent(ann.appInjector) ? Injector.resolve(ann.appInjector) : [];
      var resolvedHostInjectables = isPresent(ann.hostInjector) ? resolveBindings(ann.hostInjector) : [];
      var resolvedViewInjectables = ann instanceof Component && isPresent(ann.viewInjector) ? resolveBindings(ann.viewInjector) : [];
      var metadata = new DirectiveMetadata({
        id: stringify(rb.key.token),
        type: ann instanceof Component ? DirectiveMetadata.COMPONENT_TYPE : DirectiveMetadata.DIRECTIVE_TYPE,
        selector: ann.selector,
        compileChildren: ann.compileChildren,
        events: ann.events,
        hostListeners: isPresent(ann.hostListeners) ? MapWrapper.createFromStringMap(ann.hostListeners) : null,
        hostProperties: isPresent(ann.hostProperties) ? MapWrapper.createFromStringMap(ann.hostProperties) : null,
        hostAttributes: isPresent(ann.hostAttributes) ? MapWrapper.createFromStringMap(ann.hostAttributes) : null,
        hostActions: isPresent(ann.hostActions) ? MapWrapper.createFromStringMap(ann.hostActions) : null,
        properties: isPresent(ann.properties) ? MapWrapper.createFromStringMap(ann.properties) : null,
        readAttributes: $DirectiveBinding._readAttributes(deps),
        callOnDestroy: ann.hasLifecycleHook(onDestroy),
        callOnChange: ann.hasLifecycleHook(onChange),
        callOnAllChangesDone: ann.hasLifecycleHook(onAllChangesDone),
        changeDetection: ann instanceof Component ? ann.changeDetection : null
      });
      return new $DirectiveBinding(rb.key, rb.factory, deps, rb.providedAsPromise, resolvedAppInjectables, resolvedHostInjectables, resolvedViewInjectables, metadata);
    },
    _readAttributes: function(deps) {
      var readAttributes = [];
      ListWrapper.forEach(deps, (function(dep) {
        if (isPresent(dep.attributeName)) {
          ListWrapper.push(readAttributes, dep.attributeName);
        }
      }));
      return readAttributes;
    },
    createFromType: function(type, annotation) {
      var binding = new Binding(type, {toClass: type});
      return $DirectiveBinding.createFromBinding(binding, annotation);
    }
  }, ResolvedBinding);
  Object.defineProperty(DirectiveBinding, "parameters", {get: function() {
      return [[Key], [Function], [List], [$traceurRuntime.type.boolean], [$traceurRuntime.genericType(List, ResolvedBinding)], [$traceurRuntime.genericType(List, ResolvedBinding)], [$traceurRuntime.genericType(List, ResolvedBinding)], [DirectiveMetadata]];
    }});
  Object.defineProperty(DirectiveBinding.createFromBinding, "parameters", {get: function() {
      return [[Binding], [Directive]];
    }});
  Object.defineProperty(DirectiveBinding.createFromType, "parameters", {get: function() {
      return [[Type], [Directive]];
    }});
  var PreBuiltObjects = function PreBuiltObjects(viewManager, view, protoView) {
    this.viewManager = viewManager;
    this.view = view;
    this.protoView = protoView;
  };
  ($traceurRuntime.createClass)(PreBuiltObjects, {}, {});
  Object.defineProperty(PreBuiltObjects, "parameters", {get: function() {
      return [[avmModule.AppViewManager], [viewModule.AppView], [viewModule.AppProtoView]];
    }});
  var EventEmitterAccessor = function EventEmitterAccessor(eventName, getter) {
    this.eventName = eventName;
    this.getter = getter;
  };
  ($traceurRuntime.createClass)(EventEmitterAccessor, {subscribe: function(view, boundElementIndex, directive) {
      var $__14 = this;
      var eventEmitter = this.getter(directive);
      return ObservableWrapper.subscribe(eventEmitter, (function(eventObj) {
        return view.triggerEventHandlers($__14.eventName, eventObj, boundElementIndex);
      }));
    }}, {});
  Object.defineProperty(EventEmitterAccessor, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [Function]];
    }});
  Object.defineProperty(EventEmitterAccessor.prototype.subscribe, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [Object]];
    }});
  var HostActionAccessor = function HostActionAccessor(actionExpression, getter) {
    this.actionExpression = actionExpression;
    this.getter = getter;
  };
  ($traceurRuntime.createClass)(HostActionAccessor, {subscribe: function(view, boundElementIndex, directive) {
      var $__14 = this;
      var eventEmitter = this.getter(directive);
      return ObservableWrapper.subscribe(eventEmitter, (function(actionObj) {
        return view.callAction(boundElementIndex, $__14.actionExpression, actionObj);
      }));
    }}, {});
  Object.defineProperty(HostActionAccessor, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [Function]];
    }});
  Object.defineProperty(HostActionAccessor.prototype.subscribe, "parameters", {get: function() {
      return [[viewModule.AppView], [$traceurRuntime.type.number], [Object]];
    }});
  var LIGHT_DOM = 1;
  var SHADOW_DOM = 2;
  var LIGHT_DOM_AND_SHADOW_DOM = 3;
  var BindingData = function BindingData(binding, visibility) {
    this.binding = binding;
    this.visibility = visibility;
  };
  ($traceurRuntime.createClass)(BindingData, {
    getKeyId: function() {
      return this.binding.key.id;
    },
    createEventEmitterAccessors: function() {
      if (!(this.binding instanceof DirectiveBinding))
        return [];
      var db = this.binding;
      return ListWrapper.map(db.eventEmitters, (function(eventName) {
        return new EventEmitterAccessor(eventName, reflector.getter(eventName));
      }));
    },
    createHostActionAccessors: function() {
      if (!(this.binding instanceof DirectiveBinding))
        return [];
      var res = [];
      var db = this.binding;
      MapWrapper.forEach(db.hostActions, (function(actionExpression, actionName) {
        ListWrapper.push(res, new HostActionAccessor(actionExpression, reflector.getter(actionName)));
      }));
      return res;
    }
  }, {});
  Object.defineProperty(BindingData, "parameters", {get: function() {
      return [[ResolvedBinding], [$traceurRuntime.type.number]];
    }});
  var ProtoElementInjector = function ProtoElementInjector(parent, index, bd, distanceToParent, firstBindingIsComponent) {
    this.parent = parent;
    this.index = index;
    this.distanceToParent = distanceToParent;
    this.exportComponent = false;
    this.exportElement = false;
    this._firstBindingIsComponent = firstBindingIsComponent;
    this._binding0 = null;
    this._keyId0 = null;
    this._visibility0 = null;
    this._binding1 = null;
    this._keyId1 = null;
    this._visibility1 = null;
    this._binding2 = null;
    this._keyId2 = null;
    this._visibility2 = null;
    this._binding3 = null;
    this._keyId3 = null;
    this._visibility3 = null;
    this._binding4 = null;
    this._keyId4 = null;
    this._visibility4 = null;
    this._binding5 = null;
    this._keyId5 = null;
    this._visibility5 = null;
    this._binding6 = null;
    this._keyId6 = null;
    this._visibility6 = null;
    this._binding7 = null;
    this._keyId7 = null;
    this._visibility7 = null;
    this._binding8 = null;
    this._keyId8 = null;
    this._visibility8 = null;
    this._binding9 = null;
    this._keyId9 = null;
    this._visibility9 = null;
    var length = bd.length;
    this.eventEmitterAccessors = ListWrapper.createFixedSize(length);
    this.hostActionAccessors = ListWrapper.createFixedSize(length);
    if (length > 0) {
      this._binding0 = bd[0].binding;
      this._keyId0 = bd[0].getKeyId();
      this._visibility0 = bd[0].visibility;
      this.eventEmitterAccessors[0] = bd[0].createEventEmitterAccessors();
      this.hostActionAccessors[0] = bd[0].createHostActionAccessors();
    }
    if (length > 1) {
      this._binding1 = bd[1].binding;
      this._keyId1 = bd[1].getKeyId();
      this._visibility1 = bd[1].visibility;
      this.eventEmitterAccessors[1] = bd[1].createEventEmitterAccessors();
      this.hostActionAccessors[1] = bd[1].createHostActionAccessors();
    }
    if (length > 2) {
      this._binding2 = bd[2].binding;
      this._keyId2 = bd[2].getKeyId();
      this._visibility2 = bd[2].visibility;
      this.eventEmitterAccessors[2] = bd[2].createEventEmitterAccessors();
      this.hostActionAccessors[2] = bd[2].createHostActionAccessors();
    }
    if (length > 3) {
      this._binding3 = bd[3].binding;
      this._keyId3 = bd[3].getKeyId();
      this._visibility3 = bd[3].visibility;
      this.eventEmitterAccessors[3] = bd[3].createEventEmitterAccessors();
      this.hostActionAccessors[3] = bd[3].createHostActionAccessors();
    }
    if (length > 4) {
      this._binding4 = bd[4].binding;
      this._keyId4 = bd[4].getKeyId();
      this._visibility4 = bd[4].visibility;
      this.eventEmitterAccessors[4] = bd[4].createEventEmitterAccessors();
      this.hostActionAccessors[4] = bd[4].createHostActionAccessors();
    }
    if (length > 5) {
      this._binding5 = bd[5].binding;
      this._keyId5 = bd[5].getKeyId();
      this._visibility5 = bd[5].visibility;
      this.eventEmitterAccessors[5] = bd[5].createEventEmitterAccessors();
      this.hostActionAccessors[5] = bd[5].createHostActionAccessors();
    }
    if (length > 6) {
      this._binding6 = bd[6].binding;
      this._keyId6 = bd[6].getKeyId();
      this._visibility6 = bd[6].visibility;
      this.eventEmitterAccessors[6] = bd[6].createEventEmitterAccessors();
      this.hostActionAccessors[6] = bd[6].createHostActionAccessors();
    }
    if (length > 7) {
      this._binding7 = bd[7].binding;
      this._keyId7 = bd[7].getKeyId();
      this._visibility7 = bd[7].visibility;
      this.eventEmitterAccessors[7] = bd[7].createEventEmitterAccessors();
      this.hostActionAccessors[7] = bd[7].createHostActionAccessors();
    }
    if (length > 8) {
      this._binding8 = bd[8].binding;
      this._keyId8 = bd[8].getKeyId();
      this._visibility8 = bd[8].visibility;
      this.eventEmitterAccessors[8] = bd[8].createEventEmitterAccessors();
      this.hostActionAccessors[8] = bd[8].createHostActionAccessors();
    }
    if (length > 9) {
      this._binding9 = bd[9].binding;
      this._keyId9 = bd[9].getKeyId();
      this._visibility9 = bd[9].visibility;
      this.eventEmitterAccessors[9] = bd[9].createEventEmitterAccessors();
      this.hostActionAccessors[9] = bd[9].createHostActionAccessors();
    }
    if (length > 10) {
      throw 'Maximum number of directives per element has been reached.';
    }
  };
  var $ProtoElementInjector = ProtoElementInjector;
  ($traceurRuntime.createClass)(ProtoElementInjector, {
    instantiate: function(parent) {
      return new ElementInjector(this, parent);
    },
    directParent: function() {
      return this.distanceToParent < 2 ? this.parent : null;
    },
    get hasBindings() {
      return isPresent(this._binding0);
    },
    getBindingAtIndex: function(index) {
      if (index == 0)
        return this._binding0;
      if (index == 1)
        return this._binding1;
      if (index == 2)
        return this._binding2;
      if (index == 3)
        return this._binding3;
      if (index == 4)
        return this._binding4;
      if (index == 5)
        return this._binding5;
      if (index == 6)
        return this._binding6;
      if (index == 7)
        return this._binding7;
      if (index == 8)
        return this._binding8;
      if (index == 9)
        return this._binding9;
      throw new OutOfBoundsAccess(index);
    }
  }, {
    create: function(parent, index, bindings, firstBindingIsComponent, distanceToParent) {
      var bd = [];
      $ProtoElementInjector._createDirectiveBindingData(bindings, bd, firstBindingIsComponent);
      $ProtoElementInjector._createHostInjectorBindingData(bindings, bd);
      if (firstBindingIsComponent) {
        $ProtoElementInjector._createViewInjectorBindingData(bindings, bd);
      }
      return new $ProtoElementInjector(parent, index, bd, distanceToParent, firstBindingIsComponent);
    },
    _createDirectiveBindingData: function(bindings, bd, firstBindingIsComponent) {
      if (firstBindingIsComponent) {
        ListWrapper.push(bd, new BindingData(bindings[0], LIGHT_DOM_AND_SHADOW_DOM));
        for (var i = 1; i < bindings.length; ++i) {
          ListWrapper.push(bd, new BindingData(bindings[i], LIGHT_DOM));
        }
      } else {
        ListWrapper.forEach(bindings, (function(b) {
          ListWrapper.push(bd, new BindingData(b, LIGHT_DOM));
        }));
      }
    },
    _createHostInjectorBindingData: function(bindings, bd) {
      ListWrapper.forEach(bindings, (function(b) {
        ListWrapper.forEach(b.resolvedHostInjectables, (function(b) {
          ListWrapper.push(bd, new BindingData(b, LIGHT_DOM));
        }));
      }));
    },
    _createViewInjectorBindingData: function(bindings, bd) {
      ListWrapper.forEach(bindings[0].resolvedViewInjectables, (function(b) {
        return ListWrapper.push(bd, new BindingData(b, SHADOW_DOM));
      }));
    }
  });
  Object.defineProperty(ProtoElementInjector, "parameters", {get: function() {
      return [[ProtoElementInjector], [int], [$traceurRuntime.genericType(List, BindingData)], [$traceurRuntime.type.number], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(ProtoElementInjector.create, "parameters", {get: function() {
      return [[ProtoElementInjector], [int], [List], [$traceurRuntime.type.boolean], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ProtoElementInjector._createDirectiveBindingData, "parameters", {get: function() {
      return [[List], [List], [$traceurRuntime.type.boolean]];
    }});
  Object.defineProperty(ProtoElementInjector._createHostInjectorBindingData, "parameters", {get: function() {
      return [[List], [List]];
    }});
  Object.defineProperty(ProtoElementInjector._createViewInjectorBindingData, "parameters", {get: function() {
      return [[List], [List]];
    }});
  Object.defineProperty(ProtoElementInjector.prototype.instantiate, "parameters", {get: function() {
      return [[ElementInjector]];
    }});
  Object.defineProperty(ProtoElementInjector.prototype.getBindingAtIndex, "parameters", {get: function() {
      return [[int]];
    }});
  var ElementInjector = function ElementInjector(proto, parent) {
    $traceurRuntime.superConstructor($ElementInjector).call(this, parent);
    this._proto = proto;
    this._preBuiltObjects = null;
    this._lightDomAppInjector = null;
    this._shadowDomAppInjector = null;
    this._obj0 = null;
    this._obj1 = null;
    this._obj2 = null;
    this._obj3 = null;
    this._obj4 = null;
    this._obj5 = null;
    this._obj6 = null;
    this._obj7 = null;
    this._obj8 = null;
    this._obj9 = null;
    this._constructionCounter = 0;
    this._inheritQueries(parent);
    this._buildQueries();
  };
  var $ElementInjector = ElementInjector;
  ($traceurRuntime.createClass)(ElementInjector, {
    dehydrate: function() {
      this._host = null;
      this._preBuiltObjects = null;
      this._lightDomAppInjector = null;
      this._shadowDomAppInjector = null;
      var p = this._proto;
      if (p._binding0 instanceof DirectiveBinding && p._binding0.callOnDestroy) {
        this._obj0.onDestroy();
      }
      if (p._binding1 instanceof DirectiveBinding && p._binding1.callOnDestroy) {
        this._obj1.onDestroy();
      }
      if (p._binding2 instanceof DirectiveBinding && p._binding2.callOnDestroy) {
        this._obj2.onDestroy();
      }
      if (p._binding3 instanceof DirectiveBinding && p._binding3.callOnDestroy) {
        this._obj3.onDestroy();
      }
      if (p._binding4 instanceof DirectiveBinding && p._binding4.callOnDestroy) {
        this._obj4.onDestroy();
      }
      if (p._binding5 instanceof DirectiveBinding && p._binding5.callOnDestroy) {
        this._obj5.onDestroy();
      }
      if (p._binding6 instanceof DirectiveBinding && p._binding6.callOnDestroy) {
        this._obj6.onDestroy();
      }
      if (p._binding7 instanceof DirectiveBinding && p._binding7.callOnDestroy) {
        this._obj7.onDestroy();
      }
      if (p._binding8 instanceof DirectiveBinding && p._binding8.callOnDestroy) {
        this._obj8.onDestroy();
      }
      if (p._binding9 instanceof DirectiveBinding && p._binding9.callOnDestroy) {
        this._obj9.onDestroy();
      }
      if (isPresent(this._dynamicallyCreatedComponentBinding) && this._dynamicallyCreatedComponentBinding.callOnDestroy) {
        this._dynamicallyCreatedComponent.onDestroy();
      }
      this._obj0 = null;
      this._obj1 = null;
      this._obj2 = null;
      this._obj3 = null;
      this._obj4 = null;
      this._obj5 = null;
      this._obj6 = null;
      this._obj7 = null;
      this._obj8 = null;
      this._obj9 = null;
      this._dynamicallyCreatedComponent = null;
      this._dynamicallyCreatedComponentBinding = null;
      this._constructionCounter = 0;
    },
    hydrate: function(injector, host, preBuiltObjects) {
      var p = this._proto;
      this._host = host;
      this._lightDomAppInjector = injector;
      this._preBuiltObjects = preBuiltObjects;
      if (p._firstBindingIsComponent) {
        this._shadowDomAppInjector = this._createShadowDomAppInjector(p._binding0, injector);
      }
      this._checkShadowDomAppInjector(this._shadowDomAppInjector);
      if (isPresent(p._keyId0))
        this._getObjByKeyId(p._keyId0, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId1))
        this._getObjByKeyId(p._keyId1, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId2))
        this._getObjByKeyId(p._keyId2, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId3))
        this._getObjByKeyId(p._keyId3, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId4))
        this._getObjByKeyId(p._keyId4, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId5))
        this._getObjByKeyId(p._keyId5, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId6))
        this._getObjByKeyId(p._keyId6, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId7))
        this._getObjByKeyId(p._keyId7, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId8))
        this._getObjByKeyId(p._keyId8, LIGHT_DOM_AND_SHADOW_DOM);
      if (isPresent(p._keyId9))
        this._getObjByKeyId(p._keyId9, LIGHT_DOM_AND_SHADOW_DOM);
    },
    _createShadowDomAppInjector: function(componentDirective, appInjector) {
      if (!ListWrapper.isEmpty(componentDirective.resolvedAppInjectables)) {
        return appInjector.createChildFromResolved(componentDirective.resolvedAppInjectables);
      } else {
        return appInjector;
      }
    },
    dynamicallyCreateComponent: function(componentDirective, parentInjector) {
      this._shadowDomAppInjector = this._createShadowDomAppInjector(componentDirective, parentInjector);
      this._dynamicallyCreatedComponentBinding = componentDirective;
      this._dynamicallyCreatedComponent = this._new(this._dynamicallyCreatedComponentBinding);
      return this._dynamicallyCreatedComponent;
    },
    _checkShadowDomAppInjector: function(shadowDomAppInjector) {
      if (this._proto._firstBindingIsComponent && isBlank(shadowDomAppInjector)) {
        throw new BaseException('A shadowDomAppInjector is required as this ElementInjector contains a component');
      } else if (!this._proto._firstBindingIsComponent && isPresent(shadowDomAppInjector)) {
        throw new BaseException('No shadowDomAppInjector allowed as there is not component stored in this ElementInjector');
      }
    },
    get: function(token) {
      if (this._isDynamicallyLoadedComponent(token)) {
        return this._dynamicallyCreatedComponent;
      }
      return this._getByKey(Key.get(token), new Self(), false, null);
    },
    _isDynamicallyLoadedComponent: function(token) {
      return isPresent(this._dynamicallyCreatedComponentBinding) && Key.get(token) === this._dynamicallyCreatedComponentBinding.key;
    },
    hasDirective: function(type) {
      return this._getObjByKeyId(Key.get(type).id, LIGHT_DOM_AND_SHADOW_DOM) !== _undefined;
    },
    getEventEmitterAccessors: function() {
      return this._proto.eventEmitterAccessors;
    },
    getHostActionAccessors: function() {
      return this._proto.hostActionAccessors;
    },
    getComponent: function() {
      return this._obj0;
    },
    getElementRef: function() {
      return new ElementRef(new ViewRef(this._preBuiltObjects.view), this._proto.index);
    },
    getViewContainerRef: function() {
      return new ViewContainerRef(this._preBuiltObjects.viewManager, this.getElementRef());
    },
    getDynamicallyLoadedComponent: function() {
      return this._dynamicallyCreatedComponent;
    },
    directParent: function() {
      return this._proto.distanceToParent < 2 ? this.parent : null;
    },
    _isComponentKey: function(key) {
      return this._proto._firstBindingIsComponent && key.id === this._proto._keyId0;
    },
    _isDynamicallyLoadedComponentKey: function(key) {
      return isPresent(this._dynamicallyCreatedComponentBinding) && key.id === this._dynamicallyCreatedComponentBinding.key.id;
    },
    _new: function(binding) {
      if (this._constructionCounter++ > _MAX_DIRECTIVE_CONSTRUCTION_COUNTER) {
        throw new CyclicDependencyError(binding.key);
      }
      var factory = binding.factory;
      var deps = binding.dependencies;
      var length = deps.length;
      var d0,
          d1,
          d2,
          d3,
          d4,
          d5,
          d6,
          d7,
          d8,
          d9;
      try {
        d0 = length > 0 ? this._getByDependency(deps[0], binding.key) : null;
        d1 = length > 1 ? this._getByDependency(deps[1], binding.key) : null;
        d2 = length > 2 ? this._getByDependency(deps[2], binding.key) : null;
        d3 = length > 3 ? this._getByDependency(deps[3], binding.key) : null;
        d4 = length > 4 ? this._getByDependency(deps[4], binding.key) : null;
        d5 = length > 5 ? this._getByDependency(deps[5], binding.key) : null;
        d6 = length > 6 ? this._getByDependency(deps[6], binding.key) : null;
        d7 = length > 7 ? this._getByDependency(deps[7], binding.key) : null;
        d8 = length > 8 ? this._getByDependency(deps[8], binding.key) : null;
        d9 = length > 9 ? this._getByDependency(deps[9], binding.key) : null;
      } catch (e) {
        if (e instanceof AbstractBindingError)
          e.addKey(binding.key);
        throw e;
      }
      var obj;
      switch (length) {
        case 0:
          obj = factory();
          break;
        case 1:
          obj = factory(d0);
          break;
        case 2:
          obj = factory(d0, d1);
          break;
        case 3:
          obj = factory(d0, d1, d2);
          break;
        case 4:
          obj = factory(d0, d1, d2, d3);
          break;
        case 5:
          obj = factory(d0, d1, d2, d3, d4);
          break;
        case 6:
          obj = factory(d0, d1, d2, d3, d4, d5);
          break;
        case 7:
          obj = factory(d0, d1, d2, d3, d4, d5, d6);
          break;
        case 8:
          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);
          break;
        case 9:
          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);
          break;
        case 10:
          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);
          break;
        default:
          throw ("Directive " + binding.key.token + " can only have up to 10 dependencies.");
      }
      this._addToQueries(obj, binding.key.token);
      return obj;
    },
    _getByDependency: function(dep, requestor) {
      if (isPresent(dep.attributeName))
        return this._buildAttribute(dep);
      if (isPresent(dep.queryDirective))
        return this._findQuery(dep.queryDirective).list;
      if (dep.key.id === StaticKeys.instance().changeDetectorRefId) {
        var componentView = this._preBuiltObjects.view.componentChildViews[this._proto.index];
        return componentView.changeDetector.ref;
      }
      if (dep.key.id === StaticKeys.instance().elementRefId) {
        return this.getElementRef();
      }
      if (dep.key.id === StaticKeys.instance().viewContainerId) {
        return this.getViewContainerRef();
      }
      if (dep.key.id === StaticKeys.instance().protoViewId) {
        if (isBlank(this._preBuiltObjects.protoView)) {
          if (dep.optional) {
            return null;
          }
          throw new NoBindingError(dep.key);
        }
        return new ProtoViewRef(this._preBuiltObjects.protoView);
      }
      return this._getByKey(dep.key, dep.visibility, dep.optional, requestor);
    },
    _buildAttribute: function(dep) {
      var attributes = this._proto.attributes;
      if (isPresent(attributes) && MapWrapper.contains(attributes, dep.attributeName)) {
        return MapWrapper.get(attributes, dep.attributeName);
      } else {
        return null;
      }
    },
    _buildQueriesForDeps: function(deps) {
      for (var i = 0; i < deps.length; i++) {
        var dep = deps[i];
        if (isPresent(dep.queryDirective)) {
          this._createQueryRef(dep.queryDirective);
        }
      }
    },
    _createQueryRef: function(directive) {
      var queryList = new QueryList();
      if (isBlank(this._query0)) {
        this._query0 = new QueryRef(directive, queryList, this);
      } else if (isBlank(this._query1)) {
        this._query1 = new QueryRef(directive, queryList, this);
      } else if (isBlank(this._query2)) {
        this._query2 = new QueryRef(directive, queryList, this);
      } else
        throw new QueryError();
    },
    _addToQueries: function(obj, token) {
      if (isPresent(this._query0) && (this._query0.directive === token)) {
        this._query0.list.add(obj);
      }
      if (isPresent(this._query1) && (this._query1.directive === token)) {
        this._query1.list.add(obj);
      }
      if (isPresent(this._query2) && (this._query2.directive === token)) {
        this._query2.list.add(obj);
      }
    },
    _inheritQueries: function(parent) {
      if (isBlank(parent))
        return ;
      if (isPresent(parent._query0)) {
        this._query0 = parent._query0;
      }
      if (isPresent(parent._query1)) {
        this._query1 = parent._query1;
      }
      if (isPresent(parent._query2)) {
        this._query2 = parent._query2;
      }
    },
    _buildQueries: function() {
      if (isBlank(this._proto))
        return ;
      var p = this._proto;
      if (isPresent(p._binding0)) {
        this._buildQueriesForDeps(p._binding0.dependencies);
      }
      if (isPresent(p._binding1)) {
        this._buildQueriesForDeps(p._binding1.dependencies);
      }
      if (isPresent(p._binding2)) {
        this._buildQueriesForDeps(p._binding2.dependencies);
      }
      if (isPresent(p._binding3)) {
        this._buildQueriesForDeps(p._binding3.dependencies);
      }
      if (isPresent(p._binding4)) {
        this._buildQueriesForDeps(p._binding4.dependencies);
      }
      if (isPresent(p._binding5)) {
        this._buildQueriesForDeps(p._binding5.dependencies);
      }
      if (isPresent(p._binding6)) {
        this._buildQueriesForDeps(p._binding6.dependencies);
      }
      if (isPresent(p._binding7)) {
        this._buildQueriesForDeps(p._binding7.dependencies);
      }
      if (isPresent(p._binding8)) {
        this._buildQueriesForDeps(p._binding8.dependencies);
      }
      if (isPresent(p._binding9)) {
        this._buildQueriesForDeps(p._binding9.dependencies);
      }
    },
    _findQuery: function(token) {
      if (isPresent(this._query0) && this._query0.directive === token) {
        return this._query0;
      }
      if (isPresent(this._query1) && this._query1.directive === token) {
        return this._query1;
      }
      if (isPresent(this._query2) && this._query2.directive === token) {
        return this._query2;
      }
      throw new BaseException(("Cannot find query for directive " + token + "."));
    },
    link: function(parent) {
      parent.addChild(this);
      this._addParentQueries();
    },
    linkAfter: function(parent, prevSibling) {
      parent.addChildAfter(this, prevSibling);
      this._addParentQueries();
    },
    _addParentQueries: function() {
      if (isPresent(this.parent._query0)) {
        this._addQueryToTree(this.parent._query0);
        this.parent._query0.update();
      }
      if (isPresent(this.parent._query1)) {
        this._addQueryToTree(this.parent._query1);
        this.parent._query1.update();
      }
      if (isPresent(this.parent._query2)) {
        this._addQueryToTree(this.parent._query2);
        this.parent._query2.update();
      }
    },
    unlink: function() {
      var queriesToUpDate = [];
      if (isPresent(this.parent._query0)) {
        this._pruneQueryFromTree(this.parent._query0);
        ListWrapper.push(queriesToUpDate, this.parent._query0);
      }
      if (isPresent(this.parent._query1)) {
        this._pruneQueryFromTree(this.parent._query1);
        ListWrapper.push(queriesToUpDate, this.parent._query1);
      }
      if (isPresent(this.parent._query2)) {
        this._pruneQueryFromTree(this.parent._query2);
        ListWrapper.push(queriesToUpDate, this.parent._query2);
      }
      this.remove();
      ListWrapper.forEach(queriesToUpDate, (function(q) {
        return q.update();
      }));
    },
    _pruneQueryFromTree: function(query) {
      this._removeQueryRef(query);
      var child = this._head;
      while (isPresent(child)) {
        child._pruneQueryFromTree(query);
        child = child._next;
      }
    },
    _addQueryToTree: function(query) {
      this._assignQueryRef(query);
      var child = this._head;
      while (isPresent(child)) {
        child._addQueryToTree(query);
        child = child._next;
      }
    },
    _assignQueryRef: function(query) {
      if (isBlank(this._query0)) {
        this._query0 = query;
        return ;
      } else if (isBlank(this._query1)) {
        this._query1 = query;
        return ;
      } else if (isBlank(this._query2)) {
        this._query2 = query;
        return ;
      }
      throw new QueryError();
    },
    _removeQueryRef: function(query) {
      if (this._query0 == query)
        this._query0 = null;
      if (this._query1 == query)
        this._query1 = null;
      if (this._query2 == query)
        this._query2 = null;
    },
    _getByKey: function(key, visibility, optional, requestor) {
      var ei = this;
      var currentVisibility = LIGHT_DOM;
      var depth = visibility.depth;
      if (!visibility.shouldIncludeSelf()) {
        depth -= ei._proto.distanceToParent;
        if (isPresent(ei._parent)) {
          ei = ei._parent;
        } else {
          ei = ei._host;
          if (!visibility.crossComponentBoundaries) {
            currentVisibility = SHADOW_DOM;
          }
        }
      }
      while (ei != null && depth >= 0) {
        var preBuiltObj = ei._getPreBuiltObjectByKeyId(key.id);
        if (preBuiltObj !== _undefined)
          return preBuiltObj;
        var dir = ei._getObjByKeyId(key.id, currentVisibility);
        if (dir !== _undefined)
          return dir;
        depth -= ei._proto.distanceToParent;
        if (currentVisibility === SHADOW_DOM)
          break;
        if (isPresent(ei._parent)) {
          ei = ei._parent;
        } else {
          ei = ei._host;
          if (!visibility.crossComponentBoundaries) {
            currentVisibility = SHADOW_DOM;
          }
        }
      }
      if (isPresent(this._host) && this._host._isComponentKey(key)) {
        return this._host.getComponent();
      } else if (isPresent(this._host) && this._host._isDynamicallyLoadedComponentKey(key)) {
        return this._host.getDynamicallyLoadedComponent();
      } else if (optional) {
        return this._appInjector(requestor).getOptional(key);
      } else {
        return this._appInjector(requestor).get(key);
      }
    },
    _appInjector: function(requestor) {
      if (isPresent(requestor) && (this._isComponentKey(requestor) || this._isDynamicallyLoadedComponentKey(requestor))) {
        return this._shadowDomAppInjector;
      } else {
        return this._lightDomAppInjector;
      }
    },
    _getPreBuiltObjectByKeyId: function(keyId) {
      var staticKeys = StaticKeys.instance();
      if (keyId === staticKeys.viewManagerId)
        return this._preBuiltObjects.viewManager;
      return _undefined;
    },
    _getObjByKeyId: function(keyId, visibility) {
      var p = this._proto;
      if (p._keyId0 === keyId && (p._visibility0 & visibility) > 0) {
        if (isBlank(this._obj0)) {
          this._obj0 = this._new(p._binding0);
        }
        return this._obj0;
      }
      if (p._keyId1 === keyId && (p._visibility1 & visibility) > 0) {
        if (isBlank(this._obj1)) {
          this._obj1 = this._new(p._binding1);
        }
        return this._obj1;
      }
      if (p._keyId2 === keyId && (p._visibility2 & visibility) > 0) {
        if (isBlank(this._obj2)) {
          this._obj2 = this._new(p._binding2);
        }
        return this._obj2;
      }
      if (p._keyId3 === keyId && (p._visibility3 & visibility) > 0) {
        if (isBlank(this._obj3)) {
          this._obj3 = this._new(p._binding3);
        }
        return this._obj3;
      }
      if (p._keyId4 === keyId && (p._visibility4 & visibility) > 0) {
        if (isBlank(this._obj4)) {
          this._obj4 = this._new(p._binding4);
        }
        return this._obj4;
      }
      if (p._keyId5 === keyId && (p._visibility5 & visibility) > 0) {
        if (isBlank(this._obj5)) {
          this._obj5 = this._new(p._binding5);
        }
        return this._obj5;
      }
      if (p._keyId6 === keyId && (p._visibility6 & visibility) > 0) {
        if (isBlank(this._obj6)) {
          this._obj6 = this._new(p._binding6);
        }
        return this._obj6;
      }
      if (p._keyId7 === keyId && (p._visibility7 & visibility) > 0) {
        if (isBlank(this._obj7)) {
          this._obj7 = this._new(p._binding7);
        }
        return this._obj7;
      }
      if (p._keyId8 === keyId && (p._visibility8 & visibility) > 0) {
        if (isBlank(this._obj8)) {
          this._obj8 = this._new(p._binding8);
        }
        return this._obj8;
      }
      if (p._keyId9 === keyId && (p._visibility9 & visibility) > 0) {
        if (isBlank(this._obj9)) {
          this._obj9 = this._new(p._binding9);
        }
        return this._obj9;
      }
      return _undefined;
    },
    getDirectiveAtIndex: function(index) {
      if (index == 0)
        return this._obj0;
      if (index == 1)
        return this._obj1;
      if (index == 2)
        return this._obj2;
      if (index == 3)
        return this._obj3;
      if (index == 4)
        return this._obj4;
      if (index == 5)
        return this._obj5;
      if (index == 6)
        return this._obj6;
      if (index == 7)
        return this._obj7;
      if (index == 8)
        return this._obj8;
      if (index == 9)
        return this._obj9;
      throw new OutOfBoundsAccess(index);
    },
    hasInstances: function() {
      return this._constructionCounter > 0;
    },
    isExportingComponent: function() {
      return this._proto.exportComponent;
    },
    isExportingElement: function() {
      return this._proto.exportElement;
    },
    getExportImplicitName: function() {
      return this._proto.exportImplicitName;
    },
    getLightDomAppInjector: function() {
      return this._lightDomAppInjector;
    },
    getShadowDomAppInjector: function() {
      return this._shadowDomAppInjector;
    },
    getHost: function() {
      return this._host;
    },
    getBoundElementIndex: function() {
      return this._proto.index;
    }
  }, {}, TreeNode);
  Object.defineProperty(ElementInjector, "parameters", {get: function() {
      return [[ProtoElementInjector], [ElementInjector]];
    }});
  Object.defineProperty(ElementInjector.prototype.hydrate, "parameters", {get: function() {
      return [[Injector], [ElementInjector], [PreBuiltObjects]];
    }});
  Object.defineProperty(ElementInjector.prototype._createShadowDomAppInjector, "parameters", {get: function() {
      return [[DirectiveBinding], [Injector]];
    }});
  Object.defineProperty(ElementInjector.prototype.dynamicallyCreateComponent, "parameters", {get: function() {
      return [[DirectiveBinding], [Injector]];
    }});
  Object.defineProperty(ElementInjector.prototype._checkShadowDomAppInjector, "parameters", {get: function() {
      return [[Injector]];
    }});
  Object.defineProperty(ElementInjector.prototype.hasDirective, "parameters", {get: function() {
      return [[Type]];
    }});
  Object.defineProperty(ElementInjector.prototype._isComponentKey, "parameters", {get: function() {
      return [[Key]];
    }});
  Object.defineProperty(ElementInjector.prototype._isDynamicallyLoadedComponentKey, "parameters", {get: function() {
      return [[Key]];
    }});
  Object.defineProperty(ElementInjector.prototype._new, "parameters", {get: function() {
      return [[ResolvedBinding]];
    }});
  Object.defineProperty(ElementInjector.prototype._getByDependency, "parameters", {get: function() {
      return [[DirectiveDependency], [Key]];
    }});
  Object.defineProperty(ElementInjector.prototype._buildQueriesForDeps, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, DirectiveDependency)]];
    }});
  Object.defineProperty(ElementInjector.prototype._inheritQueries, "parameters", {get: function() {
      return [[ElementInjector]];
    }});
  Object.defineProperty(ElementInjector.prototype.link, "parameters", {get: function() {
      return [[ElementInjector]];
    }});
  Object.defineProperty(ElementInjector.prototype.linkAfter, "parameters", {get: function() {
      return [[ElementInjector], [ElementInjector]];
    }});
  Object.defineProperty(ElementInjector.prototype._pruneQueryFromTree, "parameters", {get: function() {
      return [[QueryRef]];
    }});
  Object.defineProperty(ElementInjector.prototype._addQueryToTree, "parameters", {get: function() {
      return [[QueryRef]];
    }});
  Object.defineProperty(ElementInjector.prototype._assignQueryRef, "parameters", {get: function() {
      return [[QueryRef]];
    }});
  Object.defineProperty(ElementInjector.prototype._removeQueryRef, "parameters", {get: function() {
      return [[QueryRef]];
    }});
  Object.defineProperty(ElementInjector.prototype._getByKey, "parameters", {get: function() {
      return [[Key], [Visibility], [$traceurRuntime.type.boolean], [Key]];
    }});
  Object.defineProperty(ElementInjector.prototype._appInjector, "parameters", {get: function() {
      return [[Key]];
    }});
  Object.defineProperty(ElementInjector.prototype._getPreBuiltObjectByKeyId, "parameters", {get: function() {
      return [[int]];
    }});
  Object.defineProperty(ElementInjector.prototype._getObjByKeyId, "parameters", {get: function() {
      return [[int], [$traceurRuntime.type.number]];
    }});
  Object.defineProperty(ElementInjector.prototype.getDirectiveAtIndex, "parameters", {get: function() {
      return [[int]];
    }});
  var OutOfBoundsAccess = function OutOfBoundsAccess(index) {
    $traceurRuntime.superConstructor($OutOfBoundsAccess).call(this);
    this.message = ("Index " + index + " is out-of-bounds.");
  };
  var $OutOfBoundsAccess = OutOfBoundsAccess;
  ($traceurRuntime.createClass)(OutOfBoundsAccess, {toString: function() {
      return this.message;
    }}, {}, BaseException);
  var QueryError = function QueryError() {
    $traceurRuntime.superConstructor($QueryError).call(this);
    this.message = 'Only 3 queries can be concurrently active in a template.';
  };
  var $QueryError = QueryError;
  ($traceurRuntime.createClass)(QueryError, {toString: function() {
      return this.message;
    }}, {}, BaseException);
  var QueryRef = function QueryRef(directive, list, originator) {
    this.directive = directive;
    this.list = list;
    this.originator = originator;
  };
  ($traceurRuntime.createClass)(QueryRef, {
    update: function() {
      var aggregator = [];
      this.visit(this.originator, aggregator);
      this.list.reset(aggregator);
    },
    visit: function(inj, aggregator) {
      if (isBlank(inj))
        return ;
      if (inj.hasDirective(this.directive)) {
        ListWrapper.push(aggregator, inj.get(this.directive));
      }
      var child = inj._head;
      while (isPresent(child)) {
        this.visit(child, aggregator);
        child = child._next;
      }
    }
  }, {});
  Object.defineProperty(QueryRef, "parameters", {get: function() {
      return [[], [QueryList], [ElementInjector]];
    }});
  Object.defineProperty(QueryRef.prototype.visit, "parameters", {get: function() {
      return [[ElementInjector], []];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:rx@2.5.1", ["npm:rx@2.5.1/index"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  module.exports = require("npm:rx@2.5.1/index");
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/view", ["npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_binder", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    AppViewContainer: {get: function() {
        return AppViewContainer;
      }},
    AppView: {get: function() {
        return AppView;
      }},
    AppProtoView: {get: function() {
        return AppProtoView;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_change_95_detection__,
      $__element_95_injector__,
      $__element_95_binder__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_render_47_api__;
  var $__0 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      ListWrapper = $__0.ListWrapper,
      MapWrapper = $__0.MapWrapper,
      Map = $__0.Map,
      StringMapWrapper = $__0.StringMapWrapper,
      List = $__0.List;
  var $__1 = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}),
      AST = $__1.AST,
      Locals = $__1.Locals,
      ChangeDispatcher = $__1.ChangeDispatcher,
      ProtoChangeDetector = $__1.ProtoChangeDetector,
      ChangeDetector = $__1.ChangeDetector,
      ChangeRecord = $__1.ChangeRecord,
      BindingRecord = $__1.BindingRecord,
      DirectiveRecord = $__1.DirectiveRecord,
      DirectiveIndex = $__1.DirectiveIndex,
      ChangeDetectorRef = $__1.ChangeDetectorRef;
  var $__2 = ($__element_95_injector__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"), $__element_95_injector__ && $__element_95_injector__.__esModule && $__element_95_injector__ || {default: $__element_95_injector__}),
      ProtoElementInjector = $__2.ProtoElementInjector,
      ElementInjector = $__2.ElementInjector,
      PreBuiltObjects = $__2.PreBuiltObjects,
      DirectiveBinding = $__2.DirectiveBinding;
  var ElementBinder = ($__element_95_binder__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_binder"), $__element_95_binder__ && $__element_95_binder__.__esModule && $__element_95_binder__ || {default: $__element_95_binder__}).ElementBinder;
  var $__4 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      IMPLEMENTS = $__4.IMPLEMENTS,
      int = $__4.int,
      isPresent = $__4.isPresent,
      isBlank = $__4.isBlank,
      BaseException = $__4.BaseException;
  var renderApi = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__});
  var AppViewContainer = function AppViewContainer() {
    this.views = [];
  };
  ($traceurRuntime.createClass)(AppViewContainer, {}, {});
  var AppView = function AppView(renderer, proto, protoLocals) {
    this.render = null;
    this.proto = proto;
    this.changeDetector = null;
    this.elementInjectors = null;
    this.rootElementInjectors = null;
    this.componentChildViews = null;
    this.viewContainers = ListWrapper.createFixedSize(this.proto.elementBinders.length);
    this.preBuiltObjects = null;
    this.context = null;
    this.locals = new Locals(null, MapWrapper.clone(protoLocals));
    this.renderer = renderer;
    this.freeHostViews = [];
  };
  var $AppView = AppView;
  ($traceurRuntime.createClass)(AppView, {
    init: function(changeDetector, elementInjectors, rootElementInjectors, preBuiltObjects, componentChildViews) {
      this.changeDetector = changeDetector;
      this.elementInjectors = elementInjectors;
      this.rootElementInjectors = rootElementInjectors;
      this.preBuiltObjects = preBuiltObjects;
      this.componentChildViews = componentChildViews;
    },
    setLocal: function(contextName, value) {
      if (!this.hydrated())
        throw new BaseException('Cannot set locals on dehydrated view.');
      if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {
        return ;
      }
      var templateName = MapWrapper.get(this.proto.variableBindings, contextName);
      this.locals.set(templateName, value);
    },
    hydrated: function() {
      return isPresent(this.context);
    },
    triggerEventHandlers: function(eventName, eventObj, binderIndex) {
      var locals = MapWrapper.create();
      MapWrapper.set(locals, '$event', eventObj);
      this.dispatchEvent(binderIndex, eventName, locals);
    },
    notifyOnBinding: function(b, currentValue) {
      if (b.isElement()) {
        this.renderer.setElementProperty(this.render, b.elementIndex, b.propertyName, currentValue);
      } else {
        this.renderer.setText(this.render, b.elementIndex, currentValue);
      }
    },
    getDirectiveFor: function(directive) {
      var elementInjector = this.elementInjectors[directive.elementIndex];
      return elementInjector.getDirectiveAtIndex(directive.directiveIndex);
    },
    getDetectorFor: function(directive) {
      var childView = this.componentChildViews[directive.elementIndex];
      return isPresent(childView) ? childView.changeDetector : null;
    },
    callAction: function(elementIndex, actionExpression, action) {
      this.renderer.callAction(this.render, elementIndex, actionExpression, action);
    },
    dispatchEvent: function(elementIndex, eventName, locals) {
      var $__5 = this;
      var allowDefaultBehavior = true;
      if (this.hydrated()) {
        var elBinder = this.proto.elementBinders[elementIndex];
        if (isBlank(elBinder.hostListeners))
          return allowDefaultBehavior;
        var eventMap = elBinder.hostListeners[eventName];
        if (isBlank(eventMap))
          return allowDefaultBehavior;
        MapWrapper.forEach(eventMap, (function(expr, directiveIndex) {
          var context;
          if (directiveIndex === -1) {
            context = $__5.context;
          } else {
            context = $__5.elementInjectors[elementIndex].getDirectiveAtIndex(directiveIndex);
          }
          var result = expr.eval(context, new Locals($__5.locals, locals));
          if (isPresent(result)) {
            allowDefaultBehavior = allowDefaultBehavior && result == true;
          }
        }));
      }
      return allowDefaultBehavior;
    }
  }, {});
  Object.defineProperty(AppView, "annotations", {get: function() {
      return [new IMPLEMENTS(ChangeDispatcher)];
    }});
  Object.defineProperty(AppView, "parameters", {get: function() {
      return [[renderApi.Renderer], [AppProtoView], [Map]];
    }});
  Object.defineProperty(AppView.prototype.init, "parameters", {get: function() {
      return [[ChangeDetector], [List], [List], [List], [List]];
    }});
  Object.defineProperty(AppView.prototype.setLocal, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], []];
    }});
  Object.defineProperty(AppView.prototype.triggerEventHandlers, "parameters", {get: function() {
      return [[$traceurRuntime.type.string], [], [int]];
    }});
  Object.defineProperty(AppView.prototype.notifyOnBinding, "parameters", {get: function() {
      return [[BindingRecord], [$traceurRuntime.type.any]];
    }});
  Object.defineProperty(AppView.prototype.getDirectiveFor, "parameters", {get: function() {
      return [[DirectiveIndex]];
    }});
  Object.defineProperty(AppView.prototype.getDetectorFor, "parameters", {get: function() {
      return [[DirectiveIndex]];
    }});
  Object.defineProperty(AppView.prototype.callAction, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.string], [Object]];
    }});
  Object.defineProperty(AppView.prototype.dispatchEvent, "parameters", {get: function() {
      return [[$traceurRuntime.type.number], [$traceurRuntime.type.string], [$traceurRuntime.genericType(Map, $traceurRuntime.type.string, $traceurRuntime.type.any)]];
    }});
  var AppProtoView = function AppProtoView(render, protoChangeDetector, variableBindings) {
    var $__5 = this;
    this.render = render;
    this.elementBinders = [];
    this.variableBindings = variableBindings;
    this.protoLocals = MapWrapper.create();
    if (isPresent(variableBindings)) {
      MapWrapper.forEach(variableBindings, (function(templateName, _) {
        MapWrapper.set($__5.protoLocals, templateName, null);
      }));
    }
    this.protoChangeDetector = protoChangeDetector;
  };
  ($traceurRuntime.createClass)(AppProtoView, {
    bindElement: function(parent, distanceToParent, protoElementInjector) {
      var componentDirective = arguments[3] !== (void 0) ? arguments[3] : null;
      var elBinder = new ElementBinder(this.elementBinders.length, parent, distanceToParent, protoElementInjector, componentDirective);
      ListWrapper.push(this.elementBinders, elBinder);
      return elBinder;
    },
    bindEvent: function(eventBindings, boundElementIndex) {
      var directiveIndex = arguments[2] !== (void 0) ? arguments[2] : -1;
      var elBinder = this.elementBinders[boundElementIndex];
      var events = elBinder.hostListeners;
      if (isBlank(events)) {
        events = StringMapWrapper.create();
        elBinder.hostListeners = events;
      }
      for (var i = 0; i < eventBindings.length; i++) {
        var eventBinding = eventBindings[i];
        var eventName = eventBinding.fullName;
        var event = StringMapWrapper.get(events, eventName);
        if (isBlank(event)) {
          event = MapWrapper.create();
          StringMapWrapper.set(events, eventName, event);
        }
        MapWrapper.set(event, directiveIndex, eventBinding.source);
      }
    }
  }, {});
  Object.defineProperty(AppProtoView, "parameters", {get: function() {
      return [[renderApi.RenderProtoViewRef], [ProtoChangeDetector], [Map]];
    }});
  Object.defineProperty(AppProtoView.prototype.bindElement, "parameters", {get: function() {
      return [[ElementBinder], [int], [ProtoElementInjector], [DirectiveBinding]];
    }});
  Object.defineProperty(AppProtoView.prototype.bindEvent, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, renderApi.EventBinding)], [$traceurRuntime.type.number], [int]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/facade/async", ["npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:rx@2.5.1"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  exports.__esModule = true;
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var Rx = require("npm:rx@2.5.1");
  exports.Promise = lang_1.global.Promise;
  var PromiseWrapper = (function() {
    function PromiseWrapper() {}
    PromiseWrapper.resolve = function(obj) {
      return exports.Promise.resolve(obj);
    };
    PromiseWrapper.reject = function(obj, _) {
      return exports.Promise.reject(obj);
    };
    PromiseWrapper.catchError = function(promise, onError) {
      return promise.catch(onError);
    };
    PromiseWrapper.all = function(promises) {
      if (promises.length == 0)
        return exports.Promise.resolve([]);
      return exports.Promise.all(promises);
    };
    PromiseWrapper.then = function(promise, success, rejection) {
      return promise.then(success, rejection);
    };
    PromiseWrapper.completer = function() {
      var resolve;
      var reject;
      var p = new exports.Promise(function(res, rej) {
        resolve = res;
        reject = rej;
      });
      return {
        promise: p,
        resolve: resolve,
        reject: reject
      };
    };
    PromiseWrapper.setTimeout = function(fn, millis) {
      return lang_1.global.setTimeout(fn, millis);
    };
    PromiseWrapper.clearTimeout = function(id) {
      lang_1.global.clearTimeout(id);
    };
    PromiseWrapper.setInterval = function(fn, millis) {
      return lang_1.global.setInterval(fn, millis);
    };
    PromiseWrapper.clearInterval = function(id) {
      lang_1.global.clearInterval(id);
    };
    PromiseWrapper.isPromise = function(maybePromise) {
      return maybePromise instanceof exports.Promise;
    };
    return PromiseWrapper;
  })();
  exports.PromiseWrapper = PromiseWrapper;
  var ObservableWrapper = (function() {
    function ObservableWrapper() {}
    ObservableWrapper.subscribe = function(emitter, onNext, onThrow, onReturn) {
      if (onThrow === void 0) {
        onThrow = null;
      }
      if (onReturn === void 0) {
        onReturn = null;
      }
      return emitter.observer({
        next: onNext,
        throw: onThrow,
        return: onReturn
      });
    };
    ObservableWrapper.isObservable = function(obs) {
      return obs instanceof Observable;
    };
    ObservableWrapper.dispose = function(subscription) {
      subscription.dispose();
    };
    ObservableWrapper.callNext = function(emitter, value) {
      emitter.next(value);
    };
    ObservableWrapper.callThrow = function(emitter, error) {
      emitter.throw(error);
    };
    ObservableWrapper.callReturn = function(emitter) {
      emitter.return(null);
    };
    return ObservableWrapper;
  })();
  exports.ObservableWrapper = ObservableWrapper;
  var Observable = (function() {
    function Observable() {}
    Observable.prototype.observer = function(generator) {
      return null;
    };
    return Observable;
  })();
  exports.Observable = Observable;
  var EventEmitter = (function(_super) {
    __extends(EventEmitter, _super);
    function EventEmitter() {
      _super.call(this);
      if (Rx.hasOwnProperty('default')) {
        this._subject = new Rx.default.Rx.Subject();
        this._immediateScheduler = Rx.default.Rx.Scheduler.immediate;
      } else {
        this._subject = new Rx.Subject();
        this._immediateScheduler = Rx.Scheduler.immediate;
      }
    }
    EventEmitter.prototype.observer = function(generator) {
      return this._subject.observeOn(this._immediateScheduler).subscribe(function(value) {
        setTimeout(function() {
          return generator.next(value);
        });
      }, function(error) {
        return generator.throw ? generator.throw(error) : null;
      }, function() {
        return generator.return ? generator.return() : null;
      });
    };
    EventEmitter.prototype.toRx = function() {
      return this._subject;
    };
    EventEmitter.prototype.next = function(value) {
      this._subject.onNext(value);
    };
    EventEmitter.prototype.throw = function(error) {
      this._subject.onError(error);
    };
    EventEmitter.prototype.return = function(value) {
      this._subject.onCompleted();
    };
    return EventEmitter;
  })(Observable);
  exports.EventEmitter = EventEmitter;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler", ["npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/di/annotations_impl", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_binder", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector", "npm:angular2@2.0.0-alpha.24/src/core/compiler/template_resolver", "npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view", "npm:angular2@2.0.0-alpha.24/src/core/compiler/component_url_mapper", "npm:angular2@2.0.0-alpha.24/src/core/compiler/proto_view_factory", "npm:angular2@2.0.0-alpha.24/src/services/url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/api"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    CompilerCache: {get: function() {
        return CompilerCache;
      }},
    Compiler: {get: function() {
        return Compiler;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_di__,
      $__angular2_47_src_47_di_47_annotations_95_impl__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_facade_47_collection__,
      $__directive_95_resolver__,
      $__view__,
      $__element_95_binder__,
      $__view_95_ref__,
      $__element_95_injector__,
      $__template_95_resolver__,
      $___46__46__47_annotations_95_impl_47_view__,
      $__component_95_url_95_mapper__,
      $__proto_95_view_95_factory__,
      $__angular2_47_src_47_services_47_url_95_resolver__,
      $__angular2_47_src_47_render_47_api__;
  var $__0 = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}),
      Binding = $__0.Binding,
      resolveForwardRef = $__0.resolveForwardRef;
  var Injectable = ($__angular2_47_src_47_di_47_annotations_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/di/annotations_impl"), $__angular2_47_src_47_di_47_annotations_95_impl__ && $__angular2_47_src_47_di_47_annotations_95_impl__.__esModule && $__angular2_47_src_47_di_47_annotations_95_impl__ || {default: $__angular2_47_src_47_di_47_annotations_95_impl__}).Injectable;
  var $__2 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      Type = $__2.Type,
      isBlank = $__2.isBlank,
      isPresent = $__2.isPresent,
      BaseException = $__2.BaseException,
      normalizeBlank = $__2.normalizeBlank,
      stringify = $__2.stringify;
  var $__3 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      Promise = $__3.Promise,
      PromiseWrapper = $__3.PromiseWrapper;
  var $__4 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__4.List,
      ListWrapper = $__4.ListWrapper,
      Map = $__4.Map,
      MapWrapper = $__4.MapWrapper;
  var DirectiveResolver = ($__directive_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver"), $__directive_95_resolver__ && $__directive_95_resolver__.__esModule && $__directive_95_resolver__ || {default: $__directive_95_resolver__}).DirectiveResolver;
  var AppProtoView = ($__view__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view"), $__view__ && $__view__.__esModule && $__view__ || {default: $__view__}).AppProtoView;
  var ElementBinder = ($__element_95_binder__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_binder"), $__element_95_binder__ && $__element_95_binder__.__esModule && $__element_95_binder__ || {default: $__element_95_binder__}).ElementBinder;
  var ProtoViewRef = ($__view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__view_95_ref__ && $__view_95_ref__.__esModule && $__view_95_ref__ || {default: $__view_95_ref__}).ProtoViewRef;
  var DirectiveBinding = ($__element_95_injector__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_injector"), $__element_95_injector__ && $__element_95_injector__.__esModule && $__element_95_injector__ || {default: $__element_95_injector__}).DirectiveBinding;
  var TemplateResolver = ($__template_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/template_resolver"), $__template_95_resolver__ && $__template_95_resolver__.__esModule && $__template_95_resolver__ || {default: $__template_95_resolver__}).TemplateResolver;
  var View = ($___46__46__47_annotations_95_impl_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations_impl/view"), $___46__46__47_annotations_95_impl_47_view__ && $___46__46__47_annotations_95_impl_47_view__.__esModule && $___46__46__47_annotations_95_impl_47_view__ || {default: $___46__46__47_annotations_95_impl_47_view__}).View;
  var ComponentUrlMapper = ($__component_95_url_95_mapper__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/component_url_mapper"), $__component_95_url_95_mapper__ && $__component_95_url_95_mapper__.__esModule && $__component_95_url_95_mapper__ || {default: $__component_95_url_95_mapper__}).ComponentUrlMapper;
  var ProtoViewFactory = ($__proto_95_view_95_factory__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/proto_view_factory"), $__proto_95_view_95_factory__ && $__proto_95_view_95_factory__.__esModule && $__proto_95_view_95_factory__ || {default: $__proto_95_view_95_factory__}).ProtoViewFactory;
  var UrlResolver = ($__angular2_47_src_47_services_47_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/services/url_resolver"), $__angular2_47_src_47_services_47_url_95_resolver__ && $__angular2_47_src_47_services_47_url_95_resolver__.__esModule && $__angular2_47_src_47_services_47_url_95_resolver__ || {default: $__angular2_47_src_47_services_47_url_95_resolver__}).UrlResolver;
  var renderApi = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__});
  var CompilerCache = function CompilerCache() {
    this._cache = MapWrapper.create();
  };
  ($traceurRuntime.createClass)(CompilerCache, {
    set: function(component, protoView) {
      MapWrapper.set(this._cache, component, protoView);
    },
    get: function(component) {
      var result = MapWrapper.get(this._cache, component);
      return normalizeBlank(result);
    },
    clear: function() {
      MapWrapper.clear(this._cache);
    }
  }, {});
  Object.defineProperty(CompilerCache, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(CompilerCache.prototype.set, "parameters", {get: function() {
      return [[Type], [AppProtoView]];
    }});
  Object.defineProperty(CompilerCache.prototype.get, "parameters", {get: function() {
      return [[Type]];
    }});
  var Compiler = function Compiler(reader, cache, templateResolver, componentUrlMapper, urlResolver, render, protoViewFactory) {
    this._reader = reader;
    this._compilerCache = cache;
    this._compiling = MapWrapper.create();
    this._templateResolver = templateResolver;
    this._componentUrlMapper = componentUrlMapper;
    this._urlResolver = urlResolver;
    this._appUrl = urlResolver.resolve(null, './');
    this._render = render;
    this._protoViewFactory = protoViewFactory;
  };
  var $Compiler = Compiler;
  ($traceurRuntime.createClass)(Compiler, {
    _bindDirective: function(directiveTypeOrBinding) {
      if (directiveTypeOrBinding instanceof DirectiveBinding) {
        return directiveTypeOrBinding;
      } else if (directiveTypeOrBinding instanceof Binding) {
        var annotation = this._reader.resolve(directiveTypeOrBinding.token);
        return DirectiveBinding.createFromBinding(directiveTypeOrBinding, annotation);
      } else {
        var annotation$__17 = this._reader.resolve(directiveTypeOrBinding);
        return DirectiveBinding.createFromType(directiveTypeOrBinding, annotation$__17);
      }
    },
    compileInHost: function(componentTypeOrBinding) {
      var $__15 = this;
      var componentBinding = this._bindDirective(componentTypeOrBinding);
      $Compiler._assertTypeIsComponent(componentBinding);
      var directiveMetadata = componentBinding.metadata;
      return this._render.compileHost(directiveMetadata).then((function(hostRenderPv) {
        return $__15._compileNestedProtoViews(componentBinding, hostRenderPv, [componentBinding]);
      })).then((function(appProtoView) {
        return new ProtoViewRef(appProtoView);
      }));
    },
    compile: function(component) {
      var componentBinding = this._bindDirective(component);
      $Compiler._assertTypeIsComponent(componentBinding);
      var protoView = this._compile(componentBinding);
      var pvPromise = PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);
      return pvPromise.then((function(appProtoView) {
        return new ProtoViewRef(appProtoView);
      }));
    },
    _compile: function(componentBinding) {
      var $__15 = this;
      var component = componentBinding.key.token;
      var protoView = this._compilerCache.get(component);
      if (isPresent(protoView)) {
        return protoView;
      }
      var pvPromise = MapWrapper.get(this._compiling, component);
      if (isPresent(pvPromise)) {
        return pvPromise;
      }
      var template = this._templateResolver.resolve(component);
      if (isBlank(template)) {
        return null;
      }
      var directives = this._flattenDirectives(template);
      for (var i = 0; i < directives.length; i++) {
        if (!$Compiler._isValidDirective(directives[i])) {
          throw new BaseException(("Unexpected directive value '" + stringify(directives[i]) + "' on the View of component '" + stringify(component) + "'"));
        }
      }
      var boundDirectives = ListWrapper.map(directives, (function(directive) {
        return $__15._bindDirective(directive);
      }));
      var renderTemplate = this._buildRenderTemplate(component, template, boundDirectives);
      pvPromise = this._render.compile(renderTemplate).then((function(renderPv) {
        return $__15._compileNestedProtoViews(componentBinding, renderPv, boundDirectives);
      }));
      MapWrapper.set(this._compiling, component, pvPromise);
      return pvPromise;
    },
    _compileNestedProtoViews: function(componentBinding, renderPv, directives) {
      var $__15 = this;
      var protoViews = this._protoViewFactory.createAppProtoViews(componentBinding, renderPv, directives);
      var protoView = protoViews[0];
      if (renderPv.type === renderApi.ProtoViewDto.COMPONENT_VIEW_TYPE && isPresent(componentBinding)) {
        var component = componentBinding.key.token;
        this._compilerCache.set(component, protoView);
        MapWrapper.delete(this._compiling, component);
      }
      var nestedPVPromises = [];
      ListWrapper.forEach(this._collectComponentElementBinders(protoViews), (function(elementBinder) {
        var nestedComponent = elementBinder.componentDirective;
        var elementBinderDone = (function(nestedPv) {
          elementBinder.nestedProtoView = nestedPv;
        });
        var nestedCall = $__15._compile(nestedComponent);
        if (PromiseWrapper.isPromise(nestedCall)) {
          ListWrapper.push(nestedPVPromises, nestedCall.then(elementBinderDone));
        } else if (isPresent(nestedCall)) {
          elementBinderDone(nestedCall);
        }
      }));
      var protoViewDone = (function(_) {
        return protoView;
      });
      if (nestedPVPromises.length > 0) {
        return PromiseWrapper.all(nestedPVPromises).then(protoViewDone);
      } else {
        return protoViewDone(null);
      }
    },
    _collectComponentElementBinders: function(protoViews) {
      var componentElementBinders = [];
      ListWrapper.forEach(protoViews, (function(protoView) {
        ListWrapper.forEach(protoView.elementBinders, (function(elementBinder) {
          if (isPresent(elementBinder.componentDirective)) {
            ListWrapper.push(componentElementBinders, elementBinder);
          }
        }));
      }));
      return componentElementBinders;
    },
    _buildRenderTemplate: function(component, view, directives) {
      var componentUrl = this._urlResolver.resolve(this._appUrl, this._componentUrlMapper.getUrl(component));
      var templateAbsUrl = null;
      if (isPresent(view.templateUrl)) {
        templateAbsUrl = this._urlResolver.resolve(componentUrl, view.templateUrl);
      } else if (isPresent(view.template)) {
        templateAbsUrl = componentUrl;
      }
      return new renderApi.ViewDefinition({
        componentId: stringify(component),
        absUrl: templateAbsUrl,
        template: view.template,
        directives: ListWrapper.map(directives, (function(directiveBinding) {
          return directiveBinding.metadata;
        }))
      });
    },
    _flattenDirectives: function(template) {
      if (isBlank(template.directives))
        return [];
      var directives = [];
      this._flattenList(template.directives, directives);
      return directives;
    },
    _flattenList: function(tree, out) {
      for (var i = 0; i < tree.length; i++) {
        var item = resolveForwardRef(tree[i]);
        if (ListWrapper.isList(item)) {
          this._flattenList(item, out);
        } else {
          ListWrapper.push(out, item);
        }
      }
    }
  }, {
    _isValidDirective: function(value) {
      return isPresent(value) && (value instanceof Type || value instanceof Binding);
    },
    _assertTypeIsComponent: function(directiveBinding) {
      if (directiveBinding.metadata.type !== renderApi.DirectiveMetadata.COMPONENT_TYPE) {
        throw new BaseException(("Could not load '" + stringify(directiveBinding.key.token) + "' because it is not a component."));
      }
    }
  });
  Object.defineProperty(Compiler, "annotations", {get: function() {
      return [new Injectable()];
    }});
  Object.defineProperty(Compiler, "parameters", {get: function() {
      return [[DirectiveResolver], [CompilerCache], [TemplateResolver], [ComponentUrlMapper], [UrlResolver], [renderApi.RenderCompiler], [ProtoViewFactory]];
    }});
  Object.defineProperty(Compiler.prototype.compileInHost, "parameters", {get: function() {
      return [[$traceurRuntime.type.any]];
    }});
  Object.defineProperty(Compiler.prototype.compile, "parameters", {get: function() {
      return [[Type]];
    }});
  Object.defineProperty(Compiler.prototype._compile, "parameters", {get: function() {
      return [[DirectiveBinding]];
    }});
  Object.defineProperty(Compiler.prototype._collectComponentElementBinders, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, AppProtoView)]];
    }});
  Object.defineProperty(Compiler.prototype._flattenDirectives, "parameters", {get: function() {
      return [[View]];
    }});
  Object.defineProperty(Compiler.prototype._flattenList, "parameters", {get: function() {
      return [[$traceurRuntime.genericType(List, $traceurRuntime.type.any)], [$traceurRuntime.genericType(List, $traceurRuntime.type.any)]];
    }});
  Object.defineProperty(Compiler._isValidDirective, "parameters", {get: function() {
      return [[$traceurRuntime.type.any]];
    }});
  Object.defineProperty(Compiler._assertTypeIsComponent, "parameters", {get: function() {
      return [[DirectiveBinding]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/observable_pipe", ["npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var async_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/async");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.__esModule = true;
  var ObservablePipe = (function(_super) {
    __extends(ObservablePipe, _super);
    function ObservablePipe(ref) {
      _super.call(this);
      this._ref = ref;
      this._latestValue = null;
      this._latestReturnedValue = null;
      this._subscription = null;
      this._observable = null;
    }
    ObservablePipe.prototype.supports = function(obs) {
      return async_1.ObservableWrapper.isObservable(obs);
    };
    ObservablePipe.prototype.onDestroy = function() {
      if (lang_1.isPresent(this._subscription)) {
        this._dispose();
      }
    };
    ObservablePipe.prototype.transform = function(obs) {
      if (lang_1.isBlank(this._subscription)) {
        this._subscribe(obs);
        return null;
      }
      if (obs !== this._observable) {
        this._dispose();
        return this.transform(obs);
      }
      if (this._latestValue === this._latestReturnedValue) {
        return this._latestReturnedValue;
      } else {
        this._latestReturnedValue = this._latestValue;
        return pipe_1.WrappedValue.wrap(this._latestValue);
      }
    };
    ObservablePipe.prototype._subscribe = function(obs) {
      var _this = this;
      this._observable = obs;
      this._subscription = async_1.ObservableWrapper.subscribe(obs, function(value) {
        _this._updateLatestValue(value);
      }, function(e) {
        throw e;
      });
    };
    ObservablePipe.prototype._dispose = function() {
      async_1.ObservableWrapper.dispose(this._subscription);
      this._latestValue = null;
      this._latestReturnedValue = null;
      this._subscription = null;
      this._observable = null;
    };
    ObservablePipe.prototype._updateLatestValue = function(value) {
      this._latestValue = value;
      this._ref.requestCheck();
    };
    return ObservablePipe;
  })(pipe_1.Pipe);
  exports.ObservablePipe = ObservablePipe;
  var ObservablePipeFactory = (function(_super) {
    __extends(ObservablePipeFactory, _super);
    function ObservablePipeFactory() {
      _super.call(this);
    }
    ObservablePipeFactory.prototype.supports = function(obs) {
      return async_1.ObservableWrapper.isObservable(obs);
    };
    ObservablePipeFactory.prototype.create = function(cdRef) {
      return new ObservablePipe(cdRef);
    };
    ObservablePipeFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], ObservablePipeFactory);
    return ObservablePipeFactory;
  })(pipe_1.PipeFactory);
  exports.ObservablePipeFactory = ObservablePipeFactory;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/core/application", ["npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/facade/lang", "npm:angular2@2.0.0-alpha.24/src/dom/browser_adapter", "npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter", "npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler", "npm:angular2@2.0.0-alpha.24/src/reflection/reflection", "npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/src/core/exception_handler", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader", "npm:angular2@2.0.0-alpha.24/src/core/compiler/template_resolver", "npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone", "npm:angular2@2.0.0-alpha.24/src/core/life_cycle/life_cycle", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/services/xhr", "npm:angular2@2.0.0-alpha.24/src/services/xhr_impl", "npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.24/src/render/dom/events/key_events", "npm:angular2@2.0.0-alpha.24/src/render/dom/events/hammer_gestures", "npm:angular2@2.0.0-alpha.24/src/di/binding", "npm:angular2@2.0.0-alpha.24/src/core/compiler/component_url_mapper", "npm:angular2@2.0.0-alpha.24/src/services/url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_inliner", "npm:angular2@2.0.0-alpha.24/src/core/compiler/dynamic_component_loader", "npm:angular2@2.0.0-alpha.24/src/core/testability/testability", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_pool", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager_utils", "npm:angular2@2.0.0-alpha.24/src/core/compiler/proto_view_factory", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/dom_renderer", "npm:angular2@2.0.0-alpha.24/src/render/dom/view/view", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compiler", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/core/application_tokens"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  Object.defineProperties(module.exports, {
    bootstrap: {get: function() {
        return bootstrap;
      }},
    ApplicationRef: {get: function() {
        return ApplicationRef;
      }},
    __esModule: {value: true}
  });
  var $__angular2_47_di__,
      $__angular2_47_src_47_facade_47_lang__,
      $__angular2_47_src_47_dom_47_browser_95_adapter__,
      $__angular2_47_src_47_dom_47_dom_95_adapter__,
      $__compiler_47_compiler__,
      $__angular2_47_src_47_reflection_47_reflection__,
      $__angular2_47_change_95_detection__,
      $__exception_95_handler__,
      $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__,
      $__compiler_47_template_95_resolver__,
      $__compiler_47_directive_95_resolver__,
      $__angular2_47_src_47_facade_47_collection__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_core_47_zone_47_ng_95_zone__,
      $__angular2_47_src_47_core_47_life_95_cycle_47_life_95_cycle__,
      $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__,
      $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__,
      $__angular2_47_src_47_services_47_xhr__,
      $__angular2_47_src_47_services_47_xhr_95_impl__,
      $__angular2_47_src_47_render_47_dom_47_events_47_event_95_manager__,
      $__angular2_47_src_47_render_47_dom_47_events_47_key_95_events__,
      $__angular2_47_src_47_render_47_dom_47_events_47_hammer_95_gestures__,
      $__angular2_47_src_47_di_47_binding__,
      $__angular2_47_src_47_core_47_compiler_47_component_95_url_95_mapper__,
      $__angular2_47_src_47_services_47_url_95_resolver__,
      $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__,
      $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__,
      $__angular2_47_src_47_core_47_compiler_47_dynamic_95_component_95_loader__,
      $__angular2_47_src_47_core_47_testability_47_testability__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_pool__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_manager__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_manager_95_utils__,
      $__angular2_47_src_47_core_47_compiler_47_proto_95_view_95_factory__,
      $__angular2_47_src_47_render_47_api__,
      $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__,
      $__angular2_47_src_47_render_47_dom_47_view_47_view__,
      $__angular2_47_src_47_render_47_dom_47_compiler_47_compiler__,
      $__angular2_47_src_47_core_47_compiler_47_view_95_ref__,
      $__application_95_tokens__;
  var $__0 = ($__angular2_47_di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__angular2_47_di__ && $__angular2_47_di__.__esModule && $__angular2_47_di__ || {default: $__angular2_47_di__}),
      Injector = $__0.Injector,
      bind = $__0.bind,
      OpaqueToken = $__0.OpaqueToken;
  var $__1 = ($__angular2_47_src_47_facade_47_lang__ = require("npm:angular2@2.0.0-alpha.24/src/facade/lang"), $__angular2_47_src_47_facade_47_lang__ && $__angular2_47_src_47_facade_47_lang__.__esModule && $__angular2_47_src_47_facade_47_lang__ || {default: $__angular2_47_src_47_facade_47_lang__}),
      NumberWrapper = $__1.NumberWrapper,
      Type = $__1.Type,
      isBlank = $__1.isBlank,
      isPresent = $__1.isPresent,
      BaseException = $__1.BaseException,
      assertionsEnabled = $__1.assertionsEnabled,
      print = $__1.print,
      stringify = $__1.stringify;
  var BrowserDomAdapter = ($__angular2_47_src_47_dom_47_browser_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/browser_adapter"), $__angular2_47_src_47_dom_47_browser_95_adapter__ && $__angular2_47_src_47_dom_47_browser_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_browser_95_adapter__ || {default: $__angular2_47_src_47_dom_47_browser_95_adapter__}).BrowserDomAdapter;
  var DOM = ($__angular2_47_src_47_dom_47_dom_95_adapter__ = require("npm:angular2@2.0.0-alpha.24/src/dom/dom_adapter"), $__angular2_47_src_47_dom_47_dom_95_adapter__ && $__angular2_47_src_47_dom_47_dom_95_adapter__.__esModule && $__angular2_47_src_47_dom_47_dom_95_adapter__ || {default: $__angular2_47_src_47_dom_47_dom_95_adapter__}).DOM;
  var $__4 = ($__compiler_47_compiler__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler"), $__compiler_47_compiler__ && $__compiler_47_compiler__.__esModule && $__compiler_47_compiler__ || {default: $__compiler_47_compiler__}),
      Compiler = $__4.Compiler,
      CompilerCache = $__4.CompilerCache;
  var $__5 = ($__angular2_47_src_47_reflection_47_reflection__ = require("npm:angular2@2.0.0-alpha.24/src/reflection/reflection"), $__angular2_47_src_47_reflection_47_reflection__ && $__angular2_47_src_47_reflection_47_reflection__.__esModule && $__angular2_47_src_47_reflection_47_reflection__ || {default: $__angular2_47_src_47_reflection_47_reflection__}),
      Reflector = $__5.Reflector,
      reflector = $__5.reflector;
  var $__6 = ($__angular2_47_change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__angular2_47_change_95_detection__ && $__angular2_47_change_95_detection__.__esModule && $__angular2_47_change_95_detection__ || {default: $__angular2_47_change_95_detection__}),
      Parser = $__6.Parser,
      Lexer = $__6.Lexer,
      ChangeDetection = $__6.ChangeDetection,
      DynamicChangeDetection = $__6.DynamicChangeDetection,
      PipeRegistry = $__6.PipeRegistry,
      defaultPipeRegistry = $__6.defaultPipeRegistry;
  var ExceptionHandler = ($__exception_95_handler__ = require("npm:angular2@2.0.0-alpha.24/src/core/exception_handler"), $__exception_95_handler__ && $__exception_95_handler__.__esModule && $__exception_95_handler__ || {default: $__exception_95_handler__}).ExceptionHandler;
  var TemplateLoader = ($__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader"), $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__ && $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__.__esModule && $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__ || {default: $__angular2_47_src_47_render_47_dom_47_compiler_47_template_95_loader__}).TemplateLoader;
  var TemplateResolver = ($__compiler_47_template_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/template_resolver"), $__compiler_47_template_95_resolver__ && $__compiler_47_template_95_resolver__.__esModule && $__compiler_47_template_95_resolver__ || {default: $__compiler_47_template_95_resolver__}).TemplateResolver;
  var DirectiveResolver = ($__compiler_47_directive_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/directive_resolver"), $__compiler_47_directive_95_resolver__ && $__compiler_47_directive_95_resolver__.__esModule && $__compiler_47_directive_95_resolver__ || {default: $__compiler_47_directive_95_resolver__}).DirectiveResolver;
  var $__11 = ($__angular2_47_src_47_facade_47_collection__ = require("npm:angular2@2.0.0-alpha.24/src/facade/collection"), $__angular2_47_src_47_facade_47_collection__ && $__angular2_47_src_47_facade_47_collection__.__esModule && $__angular2_47_src_47_facade_47_collection__ || {default: $__angular2_47_src_47_facade_47_collection__}),
      List = $__11.List,
      ListWrapper = $__11.ListWrapper;
  var $__12 = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__}),
      Promise = $__12.Promise,
      PromiseWrapper = $__12.PromiseWrapper;
  var NgZone = ($__angular2_47_src_47_core_47_zone_47_ng_95_zone__ = require("npm:angular2@2.0.0-alpha.24/src/core/zone/ng_zone"), $__angular2_47_src_47_core_47_zone_47_ng_95_zone__ && $__angular2_47_src_47_core_47_zone_47_ng_95_zone__.__esModule && $__angular2_47_src_47_core_47_zone_47_ng_95_zone__ || {default: $__angular2_47_src_47_core_47_zone_47_ng_95_zone__}).NgZone;
  var LifeCycle = ($__angular2_47_src_47_core_47_life_95_cycle_47_life_95_cycle__ = require("npm:angular2@2.0.0-alpha.24/src/core/life_cycle/life_cycle"), $__angular2_47_src_47_core_47_life_95_cycle_47_life_95_cycle__ && $__angular2_47_src_47_core_47_life_95_cycle_47_life_95_cycle__.__esModule && $__angular2_47_src_47_core_47_life_95_cycle_47_life_95_cycle__ || {default: $__angular2_47_src_47_core_47_life_95_cycle_47_life_95_cycle__}).LifeCycle;
  var ShadowDomStrategy = ($__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__.__esModule && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ || {default: $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__}).ShadowDomStrategy;
  var EmulatedUnscopedShadowDomStrategy = ($__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy"), $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__.__esModule && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ || {default: $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__}).EmulatedUnscopedShadowDomStrategy;
  var XHR = ($__angular2_47_src_47_services_47_xhr__ = require("npm:angular2@2.0.0-alpha.24/src/services/xhr"), $__angular2_47_src_47_services_47_xhr__ && $__angular2_47_src_47_services_47_xhr__.__esModule && $__angular2_47_src_47_services_47_xhr__ || {default: $__angular2_47_src_47_services_47_xhr__}).XHR;
  var XHRImpl = ($__angular2_47_src_47_services_47_xhr_95_impl__ = require("npm:angular2@2.0.0-alpha.24/src/services/xhr_impl"), $__angular2_47_src_47_services_47_xhr_95_impl__ && $__angular2_47_src_47_services_47_xhr_95_impl__.__esModule && $__angular2_47_src_47_services_47_xhr_95_impl__ || {default: $__angular2_47_src_47_services_47_xhr_95_impl__}).XHRImpl;
  var $__19 = ($__angular2_47_src_47_render_47_dom_47_events_47_event_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/event_manager"), $__angular2_47_src_47_render_47_dom_47_events_47_event_95_manager__ && $__angular2_47_src_47_render_47_dom_47_events_47_event_95_manager__.__esModule && $__angular2_47_src_47_render_47_dom_47_events_47_event_95_manager__ || {default: $__angular2_47_src_47_render_47_dom_47_events_47_event_95_manager__}),
      EventManager = $__19.EventManager,
      DomEventsPlugin = $__19.DomEventsPlugin;
  var KeyEventsPlugin = ($__angular2_47_src_47_render_47_dom_47_events_47_key_95_events__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/key_events"), $__angular2_47_src_47_render_47_dom_47_events_47_key_95_events__ && $__angular2_47_src_47_render_47_dom_47_events_47_key_95_events__.__esModule && $__angular2_47_src_47_render_47_dom_47_events_47_key_95_events__ || {default: $__angular2_47_src_47_render_47_dom_47_events_47_key_95_events__}).KeyEventsPlugin;
  var HammerGesturesPlugin = ($__angular2_47_src_47_render_47_dom_47_events_47_hammer_95_gestures__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/events/hammer_gestures"), $__angular2_47_src_47_render_47_dom_47_events_47_hammer_95_gestures__ && $__angular2_47_src_47_render_47_dom_47_events_47_hammer_95_gestures__.__esModule && $__angular2_47_src_47_render_47_dom_47_events_47_hammer_95_gestures__ || {default: $__angular2_47_src_47_render_47_dom_47_events_47_hammer_95_gestures__}).HammerGesturesPlugin;
  var Binding = ($__angular2_47_src_47_di_47_binding__ = require("npm:angular2@2.0.0-alpha.24/src/di/binding"), $__angular2_47_src_47_di_47_binding__ && $__angular2_47_src_47_di_47_binding__.__esModule && $__angular2_47_src_47_di_47_binding__ || {default: $__angular2_47_src_47_di_47_binding__}).Binding;
  var ComponentUrlMapper = ($__angular2_47_src_47_core_47_compiler_47_component_95_url_95_mapper__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/component_url_mapper"), $__angular2_47_src_47_core_47_compiler_47_component_95_url_95_mapper__ && $__angular2_47_src_47_core_47_compiler_47_component_95_url_95_mapper__.__esModule && $__angular2_47_src_47_core_47_compiler_47_component_95_url_95_mapper__ || {default: $__angular2_47_src_47_core_47_compiler_47_component_95_url_95_mapper__}).ComponentUrlMapper;
  var UrlResolver = ($__angular2_47_src_47_services_47_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/services/url_resolver"), $__angular2_47_src_47_services_47_url_95_resolver__ && $__angular2_47_src_47_services_47_url_95_resolver__.__esModule && $__angular2_47_src_47_services_47_url_95_resolver__ || {default: $__angular2_47_src_47_services_47_url_95_resolver__}).UrlResolver;
  var StyleUrlResolver = ($__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_url_resolver"), $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__ && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__.__esModule && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__ || {default: $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_url_95_resolver__}).StyleUrlResolver;
  var StyleInliner = ($__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/style_inliner"), $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__ && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__.__esModule && $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__ || {default: $__angular2_47_src_47_render_47_dom_47_shadow_95_dom_47_style_95_inliner__}).StyleInliner;
  var $__27 = ($__angular2_47_src_47_core_47_compiler_47_dynamic_95_component_95_loader__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/dynamic_component_loader"), $__angular2_47_src_47_core_47_compiler_47_dynamic_95_component_95_loader__ && $__angular2_47_src_47_core_47_compiler_47_dynamic_95_component_95_loader__.__esModule && $__angular2_47_src_47_core_47_compiler_47_dynamic_95_component_95_loader__ || {default: $__angular2_47_src_47_core_47_compiler_47_dynamic_95_component_95_loader__}),
      ComponentRef = $__27.ComponentRef,
      DynamicComponentLoader = $__27.DynamicComponentLoader;
  var $__28 = ($__angular2_47_src_47_core_47_testability_47_testability__ = require("npm:angular2@2.0.0-alpha.24/src/core/testability/testability"), $__angular2_47_src_47_core_47_testability_47_testability__ && $__angular2_47_src_47_core_47_testability_47_testability__.__esModule && $__angular2_47_src_47_core_47_testability_47_testability__ || {default: $__angular2_47_src_47_core_47_testability_47_testability__}),
      TestabilityRegistry = $__28.TestabilityRegistry,
      Testability = $__28.Testability;
  var $__29 = ($__angular2_47_src_47_core_47_compiler_47_view_95_pool__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_pool"), $__angular2_47_src_47_core_47_compiler_47_view_95_pool__ && $__angular2_47_src_47_core_47_compiler_47_view_95_pool__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_pool__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_pool__}),
      AppViewPool = $__29.AppViewPool,
      APP_VIEW_POOL_CAPACITY = $__29.APP_VIEW_POOL_CAPACITY;
  var AppViewManager = ($__angular2_47_src_47_core_47_compiler_47_view_95_manager__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager"), $__angular2_47_src_47_core_47_compiler_47_view_95_manager__ && $__angular2_47_src_47_core_47_compiler_47_view_95_manager__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_manager__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_manager__}).AppViewManager;
  var AppViewManagerUtils = ($__angular2_47_src_47_core_47_compiler_47_view_95_manager_95_utils__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_manager_utils"), $__angular2_47_src_47_core_47_compiler_47_view_95_manager_95_utils__ && $__angular2_47_src_47_core_47_compiler_47_view_95_manager_95_utils__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_manager_95_utils__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_manager_95_utils__}).AppViewManagerUtils;
  var ProtoViewFactory = ($__angular2_47_src_47_core_47_compiler_47_proto_95_view_95_factory__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/proto_view_factory"), $__angular2_47_src_47_core_47_compiler_47_proto_95_view_95_factory__ && $__angular2_47_src_47_core_47_compiler_47_proto_95_view_95_factory__.__esModule && $__angular2_47_src_47_core_47_compiler_47_proto_95_view_95_factory__ || {default: $__angular2_47_src_47_core_47_compiler_47_proto_95_view_95_factory__}).ProtoViewFactory;
  var $__33 = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__}),
      Renderer = $__33.Renderer,
      RenderCompiler = $__33.RenderCompiler;
  var $__34 = ($__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/dom_renderer"), $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ && $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__.__esModule && $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ || {default: $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__}),
      DomRenderer = $__34.DomRenderer,
      DOCUMENT_TOKEN = $__34.DOCUMENT_TOKEN;
  var resolveInternalDomView = ($__angular2_47_src_47_render_47_dom_47_view_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/view/view"), $__angular2_47_src_47_render_47_dom_47_view_47_view__ && $__angular2_47_src_47_render_47_dom_47_view_47_view__.__esModule && $__angular2_47_src_47_render_47_dom_47_view_47_view__ || {default: $__angular2_47_src_47_render_47_dom_47_view_47_view__}).resolveInternalDomView;
  var DefaultDomCompiler = ($__angular2_47_src_47_render_47_dom_47_compiler_47_compiler__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/compiler"), $__angular2_47_src_47_render_47_dom_47_compiler_47_compiler__ && $__angular2_47_src_47_render_47_dom_47_compiler_47_compiler__.__esModule && $__angular2_47_src_47_render_47_dom_47_compiler_47_compiler__ || {default: $__angular2_47_src_47_render_47_dom_47_compiler_47_compiler__}).DefaultDomCompiler;
  var internalView = ($__angular2_47_src_47_core_47_compiler_47_view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__.__esModule && $__angular2_47_src_47_core_47_compiler_47_view_95_ref__ || {default: $__angular2_47_src_47_core_47_compiler_47_view_95_ref__}).internalView;
  var $__38 = ($__application_95_tokens__ = require("npm:angular2@2.0.0-alpha.24/src/core/application_tokens"), $__application_95_tokens__ && $__application_95_tokens__.__esModule && $__application_95_tokens__ || {default: $__application_95_tokens__}),
      appComponentRefToken = $__38.appComponentRefToken,
      appComponentTypeToken = $__38.appComponentTypeToken;
  var _rootInjector;
  var _rootBindings = [bind(Reflector).toValue(reflector), TestabilityRegistry];
  function _injectorBindings(appComponentType) {
    return [bind(DOCUMENT_TOKEN).toValue(DOM.defaultDoc()), bind(appComponentTypeToken).toValue(appComponentType), bind(appComponentRefToken).toAsyncFactory((function(dynamicComponentLoader, injector, testability, registry) {
      return dynamicComponentLoader.loadAsRoot(appComponentType, null, injector).then((function(componentRef) {
        var domView = resolveInternalDomView(componentRef.hostView.render);
        registry.registerApplication(domView.boundElements[0], testability);
        return componentRef;
      }));
    }), [DynamicComponentLoader, Injector, Testability, TestabilityRegistry]), bind(appComponentType).toFactory((function(ref) {
      return ref.instance;
    }), [appComponentRefToken]), bind(LifeCycle).toFactory((function(exceptionHandler) {
      return new LifeCycle(exceptionHandler, null, assertionsEnabled());
    }), [ExceptionHandler]), bind(EventManager).toFactory((function(ngZone) {
      var plugins = [new HammerGesturesPlugin(), new KeyEventsPlugin(), new DomEventsPlugin()];
      return new EventManager(plugins, ngZone);
    }), [NgZone]), bind(ShadowDomStrategy).toFactory((function(styleUrlResolver, doc) {
      return new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, doc.head);
    }), [StyleUrlResolver, DOCUMENT_TOKEN]), bind(DomRenderer).toFactory((function(eventManager, shadowDomStrategy, doc) {
      return new DomRenderer(eventManager, shadowDomStrategy, doc);
    }), [EventManager, ShadowDomStrategy, DOCUMENT_TOKEN]), DefaultDomCompiler, bind(Renderer).toAlias(DomRenderer), bind(RenderCompiler).toAlias(DefaultDomCompiler), ProtoViewFactory, bind(AppViewPool).toFactory((function(capacity) {
      return new AppViewPool(capacity);
    }), [APP_VIEW_POOL_CAPACITY]), bind(APP_VIEW_POOL_CAPACITY).toValue(10000), AppViewManager, AppViewManagerUtils, Compiler, CompilerCache, TemplateResolver, bind(PipeRegistry).toValue(defaultPipeRegistry), bind(ChangeDetection).toClass(DynamicChangeDetection), TemplateLoader, DirectiveResolver, Parser, Lexer, ExceptionHandler, bind(XHR).toValue(new XHRImpl()), ComponentUrlMapper, UrlResolver, StyleUrlResolver, StyleInliner, DynamicComponentLoader, Testability];
  }
  function _createNgZone(givenReporter) {
    var defaultErrorReporter = (function(exception, stackTrace) {
      var longStackTrace = ListWrapper.join(stackTrace, "\n\n-----async gap-----\n");
      DOM.logError((exception + "\n\n" + longStackTrace));
      throw exception;
    });
    var reporter = isPresent(givenReporter) ? givenReporter : defaultErrorReporter;
    var zone = new NgZone({enableLongStackTrace: assertionsEnabled()});
    zone.initCallbacks({onErrorHandler: reporter});
    return zone;
  }
  Object.defineProperty(_createNgZone, "parameters", {get: function() {
      return [[Function]];
    }});
  function bootstrap(appComponentType) {
    var componentInjectableBindings = arguments[1] !== (void 0) ? arguments[1] : null;
    var errorReporter = arguments[2] !== (void 0) ? arguments[2] : null;
    BrowserDomAdapter.makeCurrent();
    var bootstrapProcess = PromiseWrapper.completer();
    var zone = _createNgZone(errorReporter);
    zone.run((function() {
      var appInjector = _createAppInjector(appComponentType, componentInjectableBindings, zone);
      PromiseWrapper.then(appInjector.asyncGet(appComponentRefToken), (function(componentRef) {
        var appChangeDetector = internalView(componentRef.hostView).changeDetector;
        var lc = appInjector.get(LifeCycle);
        lc.registerWith(zone, appChangeDetector);
        lc.tick();
        bootstrapProcess.resolve(new ApplicationRef(componentRef, appComponentType, appInjector));
      }), (function(err, stackTrace) {
        bootstrapProcess.reject(err, stackTrace);
      }));
    }));
    return bootstrapProcess.promise;
  }
  Object.defineProperty(bootstrap, "parameters", {get: function() {
      return [[Type], [$traceurRuntime.genericType(List, Binding)], [Function]];
    }});
  var ApplicationRef = function ApplicationRef(hostComponent, hostComponentType, injector) {
    this._hostComponent = hostComponent;
    this._injector = injector;
    this._hostComponentType = hostComponentType;
  };
  ($traceurRuntime.createClass)(ApplicationRef, {
    get hostComponentType() {
      return this._hostComponentType;
    },
    get hostComponent() {
      return this._hostComponent.instance;
    },
    dispose: function() {
      return this._hostComponent.dispose();
    },
    get injector() {
      return this._injector;
    }
  }, {});
  Object.defineProperty(ApplicationRef, "parameters", {get: function() {
      return [[ComponentRef], [Type], [Injector]];
    }});
  function _createAppInjector(appComponentType, bindings, zone) {
    if (isBlank(_rootInjector))
      _rootInjector = Injector.resolveAndCreate(_rootBindings);
    var mergedBindings = isPresent(bindings) ? ListWrapper.concat(_injectorBindings(appComponentType), bindings) : _injectorBindings(appComponentType);
    ListWrapper.push(mergedBindings, bind(NgZone).toValue(zone));
    return _rootInjector.resolveAndCreateChild(mergedBindings);
  }
  Object.defineProperty(_createAppInjector, "parameters", {get: function() {
      return [[Type], [$traceurRuntime.genericType(List, Binding)], [NgZone]];
    }});
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection", ["npm:angular2@2.0.0-alpha.24/src/change_detection/proto_change_detector", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe_registry", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/iterable_changes", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/keyvalue_changes", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/observable_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/promise_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/uppercase_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/lowercase_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/json_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/null_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces", "npm:angular2@2.0.0-alpha.24/src/di/decorators", "npm:angular2@2.0.0-alpha.24/src/facade/collection", "npm:angular2@2.0.0-alpha.24/src/facade/lang"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    __.prototype = b.prototype;
    d.prototype = new __();
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var proto_change_detector_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_change_detector");
  var pipe_registry_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe_registry");
  var iterable_changes_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/iterable_changes");
  var keyvalue_changes_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/keyvalue_changes");
  var observable_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/observable_pipe");
  var promise_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/promise_pipe");
  var uppercase_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/uppercase_pipe");
  var lowercase_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/lowercase_pipe");
  var json_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/json_pipe");
  var null_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/null_pipe");
  var interfaces_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces");
  var decorators_1 = require("npm:angular2@2.0.0-alpha.24/src/di/decorators");
  var collection_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/collection");
  var lang_1 = require("npm:angular2@2.0.0-alpha.24/src/facade/lang");
  exports.__esModule = true;
  exports.keyValDiff = [new keyvalue_changes_1.KeyValueChangesFactory(), new null_pipe_1.NullPipeFactory()];
  exports.iterableDiff = [new iterable_changes_1.IterableChangesFactory(), new null_pipe_1.NullPipeFactory()];
  exports.async = [new observable_pipe_1.ObservablePipeFactory(), new promise_pipe_1.PromisePipeFactory(), new null_pipe_1.NullPipeFactory()];
  exports.uppercase = [new uppercase_pipe_1.UpperCaseFactory(), new null_pipe_1.NullPipeFactory()];
  exports.lowercase = [new lowercase_pipe_1.LowerCaseFactory(), new null_pipe_1.NullPipeFactory()];
  exports.json = [new json_pipe_1.JsonPipeFactory(), new null_pipe_1.NullPipeFactory()];
  exports.defaultPipes = {
    "iterableDiff": exports.iterableDiff,
    "keyValDiff": exports.keyValDiff,
    "async": exports.async,
    "uppercase": exports.uppercase,
    "lowercase": exports.lowercase,
    "json": exports.json
  };
  exports.preGeneratedProtoDetectors = {};
  var PreGeneratedChangeDetection = (function(_super) {
    __extends(PreGeneratedChangeDetection, _super);
    function PreGeneratedChangeDetection(registry, protoChangeDetectors) {
      _super.call(this);
      this.registry = registry;
      this._dynamicChangeDetection = new DynamicChangeDetection(registry);
      this._protoChangeDetectors = lang_1.isPresent(protoChangeDetectors) ? protoChangeDetectors : exports.preGeneratedProtoDetectors;
    }
    PreGeneratedChangeDetection.prototype.createProtoChangeDetector = function(definition) {
      var id = definition.id;
      if (collection_1.StringMapWrapper.contains(this._protoChangeDetectors, id)) {
        return collection_1.StringMapWrapper.get(this._protoChangeDetectors, id)(this.registry);
      }
      return this._dynamicChangeDetection.createProtoChangeDetector(definition);
    };
    return PreGeneratedChangeDetection;
  })(interfaces_1.ChangeDetection);
  exports.PreGeneratedChangeDetection = PreGeneratedChangeDetection;
  var DynamicChangeDetection = (function(_super) {
    __extends(DynamicChangeDetection, _super);
    function DynamicChangeDetection(registry) {
      _super.call(this);
      this.registry = registry;
    }
    DynamicChangeDetection.prototype.createProtoChangeDetector = function(definition) {
      return new proto_change_detector_1.DynamicProtoChangeDetector(this.registry, definition);
    };
    DynamicChangeDetection = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [pipe_registry_1.PipeRegistry])], DynamicChangeDetection);
    return DynamicChangeDetection;
  })(interfaces_1.ChangeDetection);
  exports.DynamicChangeDetection = DynamicChangeDetection;
  var JitChangeDetection = (function(_super) {
    __extends(JitChangeDetection, _super);
    function JitChangeDetection(registry) {
      _super.call(this);
      this.registry = registry;
    }
    JitChangeDetection.prototype.createProtoChangeDetector = function(definition) {
      return new proto_change_detector_1.JitProtoChangeDetector(this.registry, definition);
    };
    JitChangeDetection = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [pipe_registry_1.PipeRegistry])], JitChangeDetection);
    return JitChangeDetection;
  })(interfaces_1.ChangeDetection);
  exports.JitChangeDetection = JitChangeDetection;
  exports.defaultPipeRegistry = new pipe_registry_1.PipeRegistry(exports.defaultPipes);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/core", ["npm:angular2@2.0.0-alpha.24/src/core/annotations/visibility", "npm:angular2@2.0.0-alpha.24/src/core/compiler/interfaces", "npm:angular2@2.0.0-alpha.24/src/core/annotations/view", "npm:angular2@2.0.0-alpha.24/src/core/application", "npm:angular2@2.0.0-alpha.24/src/core/application_tokens", "npm:angular2@2.0.0-alpha.24/src/core/annotations/di", "npm:angular2@2.0.0-alpha.24/src/core/compiler/query_list", "npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler", "npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/native_shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy", "npm:angular2@2.0.0-alpha.24/src/core/compiler/dynamic_component_loader", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref", "npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  var $__src_47_core_47_annotations_47_visibility__,
      $__src_47_core_47_compiler_47_interfaces__,
      $__src_47_core_47_annotations_47_view__,
      $__src_47_core_47_application__,
      $__src_47_core_47_application_95_tokens__,
      $__src_47_core_47_annotations_47_di__,
      $__src_47_core_47_compiler_47_query_95_list__,
      $__src_47_core_47_compiler_47_compiler__,
      $__src_47_render_47_dom_47_compiler_47_template_95_loader__,
      $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__,
      $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__,
      $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__,
      $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__,
      $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__,
      $__src_47_core_47_compiler_47_view_95_ref__,
      $__src_47_core_47_compiler_47_view_95_container_95_ref__,
      $__src_47_core_47_compiler_47_element_95_ref__;
  var $__src_47_core_47_annotations_47_visibility__ = ($__src_47_core_47_annotations_47_visibility__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/visibility"), $__src_47_core_47_annotations_47_visibility__ && $__src_47_core_47_annotations_47_visibility__.__esModule && $__src_47_core_47_annotations_47_visibility__ || {default: $__src_47_core_47_annotations_47_visibility__});
  var $__src_47_core_47_compiler_47_interfaces__ = ($__src_47_core_47_compiler_47_interfaces__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/interfaces"), $__src_47_core_47_compiler_47_interfaces__ && $__src_47_core_47_compiler_47_interfaces__.__esModule && $__src_47_core_47_compiler_47_interfaces__ || {default: $__src_47_core_47_compiler_47_interfaces__});
  var $__src_47_core_47_annotations_47_view__ = ($__src_47_core_47_annotations_47_view__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/view"), $__src_47_core_47_annotations_47_view__ && $__src_47_core_47_annotations_47_view__.__esModule && $__src_47_core_47_annotations_47_view__ || {default: $__src_47_core_47_annotations_47_view__});
  var $__src_47_core_47_application__ = ($__src_47_core_47_application__ = require("npm:angular2@2.0.0-alpha.24/src/core/application"), $__src_47_core_47_application__ && $__src_47_core_47_application__.__esModule && $__src_47_core_47_application__ || {default: $__src_47_core_47_application__});
  var $__src_47_core_47_application_95_tokens__ = ($__src_47_core_47_application_95_tokens__ = require("npm:angular2@2.0.0-alpha.24/src/core/application_tokens"), $__src_47_core_47_application_95_tokens__ && $__src_47_core_47_application_95_tokens__.__esModule && $__src_47_core_47_application_95_tokens__ || {default: $__src_47_core_47_application_95_tokens__});
  var $__src_47_core_47_annotations_47_di__ = ($__src_47_core_47_annotations_47_di__ = require("npm:angular2@2.0.0-alpha.24/src/core/annotations/di"), $__src_47_core_47_annotations_47_di__ && $__src_47_core_47_annotations_47_di__.__esModule && $__src_47_core_47_annotations_47_di__ || {default: $__src_47_core_47_annotations_47_di__});
  var $__src_47_core_47_compiler_47_query_95_list__ = ($__src_47_core_47_compiler_47_query_95_list__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/query_list"), $__src_47_core_47_compiler_47_query_95_list__ && $__src_47_core_47_compiler_47_query_95_list__.__esModule && $__src_47_core_47_compiler_47_query_95_list__ || {default: $__src_47_core_47_compiler_47_query_95_list__});
  var $__src_47_core_47_compiler_47_compiler__ = ($__src_47_core_47_compiler_47_compiler__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/compiler"), $__src_47_core_47_compiler_47_compiler__ && $__src_47_core_47_compiler_47_compiler__.__esModule && $__src_47_core_47_compiler_47_compiler__ || {default: $__src_47_core_47_compiler_47_compiler__});
  var $__src_47_render_47_dom_47_compiler_47_template_95_loader__ = ($__src_47_render_47_dom_47_compiler_47_template_95_loader__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/compiler/template_loader"), $__src_47_render_47_dom_47_compiler_47_template_95_loader__ && $__src_47_render_47_dom_47_compiler_47_template_95_loader__.__esModule && $__src_47_render_47_dom_47_compiler_47_template_95_loader__ || {default: $__src_47_render_47_dom_47_compiler_47_template_95_loader__});
  var $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ = ($__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/shadow_dom_strategy"), $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ && $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__.__esModule && $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__ || {default: $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__});
  var $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__ = ($__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/native_shadow_dom_strategy"), $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__ && $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__.__esModule && $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__ || {default: $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__});
  var $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__ = ($__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy"), $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__ && $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__.__esModule && $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__ || {default: $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__});
  var $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ = ($__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy"), $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ && $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__.__esModule && $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__ || {default: $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__});
  var $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__ = ($__src_47_core_47_compiler_47_dynamic_95_component_95_loader__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/dynamic_component_loader"), $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__ && $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__.__esModule && $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__ || {default: $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__});
  var $__src_47_core_47_compiler_47_view_95_ref__ = ($__src_47_core_47_compiler_47_view_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_ref"), $__src_47_core_47_compiler_47_view_95_ref__ && $__src_47_core_47_compiler_47_view_95_ref__.__esModule && $__src_47_core_47_compiler_47_view_95_ref__ || {default: $__src_47_core_47_compiler_47_view_95_ref__});
  var $__src_47_core_47_compiler_47_view_95_container_95_ref__ = ($__src_47_core_47_compiler_47_view_95_container_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/view_container_ref"), $__src_47_core_47_compiler_47_view_95_container_95_ref__ && $__src_47_core_47_compiler_47_view_95_container_95_ref__.__esModule && $__src_47_core_47_compiler_47_view_95_container_95_ref__ || {default: $__src_47_core_47_compiler_47_view_95_container_95_ref__});
  var $__src_47_core_47_compiler_47_element_95_ref__ = ($__src_47_core_47_compiler_47_element_95_ref__ = require("npm:angular2@2.0.0-alpha.24/src/core/compiler/element_ref"), $__src_47_core_47_compiler_47_element_95_ref__ && $__src_47_core_47_compiler_47_element_95_ref__.__esModule && $__src_47_core_47_compiler_47_element_95_ref__ || {default: $__src_47_core_47_compiler_47_element_95_ref__});
  module.exports = $traceurRuntime.exportStar({
    get ViewRef() {
      return $__src_47_core_47_compiler_47_view_95_ref__.ViewRef;
    },
    get ProtoViewRef() {
      return $__src_47_core_47_compiler_47_view_95_ref__.ProtoViewRef;
    },
    get ViewContainerRef() {
      return $__src_47_core_47_compiler_47_view_95_container_95_ref__.ViewContainerRef;
    },
    get ElementRef() {
      return $__src_47_core_47_compiler_47_element_95_ref__.ElementRef;
    },
    __esModule: true
  }, $__src_47_core_47_annotations_47_visibility__, $__src_47_core_47_compiler_47_interfaces__, $__src_47_core_47_annotations_47_view__, $__src_47_core_47_application__, $__src_47_core_47_application_95_tokens__, $__src_47_core_47_annotations_47_di__, $__src_47_core_47_compiler_47_query_95_list__, $__src_47_core_47_compiler_47_compiler__, $__src_47_render_47_dom_47_compiler_47_template_95_loader__, $__src_47_render_47_dom_47_shadow_95_dom_47_shadow_95_dom_95_strategy__, $__src_47_render_47_dom_47_shadow_95_dom_47_native_95_shadow_95_dom_95_strategy__, $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_scoped_95_shadow_95_dom_95_strategy__, $__src_47_render_47_dom_47_shadow_95_dom_47_emulated_95_unscoped_95_shadow_95_dom_95_strategy__, $__src_47_core_47_compiler_47_dynamic_95_component_95_loader__);
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/change_detection", ["npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast", "npm:angular2@2.0.0-alpha.24/src/change_detection/parser/lexer", "npm:angular2@2.0.0-alpha.24/src/change_detection/parser/parser", "npm:angular2@2.0.0-alpha.24/src/change_detection/parser/locals", "npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions", "npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces", "npm:angular2@2.0.0-alpha.24/src/change_detection/constants", "npm:angular2@2.0.0-alpha.24/src/change_detection/proto_change_detector", "npm:angular2@2.0.0-alpha.24/src/change_detection/binding_record", "npm:angular2@2.0.0-alpha.24/src/change_detection/directive_record", "npm:angular2@2.0.0-alpha.24/src/change_detection/dynamic_change_detector", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detector_ref", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe_registry", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/null_pipe", "npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  var ast_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/ast");
  exports.ASTWithSource = ast_1.ASTWithSource;
  exports.AST = ast_1.AST;
  exports.AstTransformer = ast_1.AstTransformer;
  exports.AccessMember = ast_1.AccessMember;
  exports.LiteralArray = ast_1.LiteralArray;
  exports.ImplicitReceiver = ast_1.ImplicitReceiver;
  var lexer_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/lexer");
  exports.Lexer = lexer_1.Lexer;
  var parser_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/parser");
  exports.Parser = parser_1.Parser;
  var locals_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/parser/locals");
  exports.Locals = locals_1.Locals;
  var exceptions_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/exceptions");
  exports.ExpressionChangedAfterItHasBeenChecked = exceptions_1.ExpressionChangedAfterItHasBeenChecked;
  exports.ChangeDetectionError = exceptions_1.ChangeDetectionError;
  var interfaces_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/interfaces");
  exports.ProtoChangeDetector = interfaces_1.ProtoChangeDetector;
  exports.ChangeDispatcher = interfaces_1.ChangeDispatcher;
  exports.ChangeDetector = interfaces_1.ChangeDetector;
  exports.ChangeDetection = interfaces_1.ChangeDetection;
  exports.ChangeDetectorDefinition = interfaces_1.ChangeDetectorDefinition;
  var constants_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/constants");
  exports.CHECK_ONCE = constants_1.CHECK_ONCE;
  exports.CHECK_ALWAYS = constants_1.CHECK_ALWAYS;
  exports.DETACHED = constants_1.DETACHED;
  exports.CHECKED = constants_1.CHECKED;
  exports.ON_PUSH = constants_1.ON_PUSH;
  exports.DEFAULT = constants_1.DEFAULT;
  var proto_change_detector_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/proto_change_detector");
  exports.DynamicProtoChangeDetector = proto_change_detector_1.DynamicProtoChangeDetector;
  exports.JitProtoChangeDetector = proto_change_detector_1.JitProtoChangeDetector;
  var binding_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/binding_record");
  exports.BindingRecord = binding_record_1.BindingRecord;
  var directive_record_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/directive_record");
  exports.DirectiveIndex = directive_record_1.DirectiveIndex;
  exports.DirectiveRecord = directive_record_1.DirectiveRecord;
  var dynamic_change_detector_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/dynamic_change_detector");
  exports.DynamicChangeDetector = dynamic_change_detector_1.DynamicChangeDetector;
  var change_detector_ref_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detector_ref");
  exports.ChangeDetectorRef = change_detector_ref_1.ChangeDetectorRef;
  var pipe_registry_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe_registry");
  exports.PipeRegistry = pipe_registry_1.PipeRegistry;
  var change_detection_util_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection_util");
  exports.uninitialized = change_detection_util_1.uninitialized;
  var pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/pipe");
  exports.WrappedValue = pipe_1.WrappedValue;
  exports.Pipe = pipe_1.Pipe;
  var null_pipe_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/pipes/null_pipe");
  exports.NullPipe = null_pipe_1.NullPipe;
  exports.NullPipeFactory = null_pipe_1.NullPipeFactory;
  var change_detection_1 = require("npm:angular2@2.0.0-alpha.24/src/change_detection/change_detection");
  exports.defaultPipes = change_detection_1.defaultPipes;
  exports.DynamicChangeDetection = change_detection_1.DynamicChangeDetection;
  exports.JitChangeDetection = change_detection_1.JitChangeDetection;
  exports.PreGeneratedChangeDetection = change_detection_1.PreGeneratedChangeDetection;
  exports.preGeneratedProtoDetectors = change_detection_1.preGeneratedProtoDetectors;
  exports.defaultPipeRegistry = change_detection_1.defaultPipeRegistry;
  exports.__esModule = true;
  global.define = __define;
  return module.exports;
});

System.register("npm:angular2@2.0.0-alpha.24/angular2", ["npm:angular2@2.0.0-alpha.24/change_detection", "npm:angular2@2.0.0-alpha.24/core", "npm:angular2@2.0.0-alpha.24/annotations", "npm:angular2@2.0.0-alpha.24/directives", "npm:angular2@2.0.0-alpha.24/forms", "npm:angular2@2.0.0-alpha.24/di", "npm:angular2@2.0.0-alpha.24/src/facade/async", "npm:angular2@2.0.0-alpha.24/src/render/api", "npm:angular2@2.0.0-alpha.24/src/render/dom/dom_renderer"], true, function(require, exports, module) {
  var global = System.global,
      __define = global.define;
  global.define = undefined;
  "use strict";
  var $__change_95_detection__,
      $__core__,
      $__annotations__,
      $__directives__,
      $__forms__,
      $__di__,
      $__angular2_47_src_47_facade_47_async__,
      $__angular2_47_src_47_render_47_api__,
      $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__;
  var $__change_95_detection__ = ($__change_95_detection__ = require("npm:angular2@2.0.0-alpha.24/change_detection"), $__change_95_detection__ && $__change_95_detection__.__esModule && $__change_95_detection__ || {default: $__change_95_detection__});
  var $__core__ = ($__core__ = require("npm:angular2@2.0.0-alpha.24/core"), $__core__ && $__core__.__esModule && $__core__ || {default: $__core__});
  var $__annotations__ = ($__annotations__ = require("npm:angular2@2.0.0-alpha.24/annotations"), $__annotations__ && $__annotations__.__esModule && $__annotations__ || {default: $__annotations__});
  var $__directives__ = ($__directives__ = require("npm:angular2@2.0.0-alpha.24/directives"), $__directives__ && $__directives__.__esModule && $__directives__ || {default: $__directives__});
  var $__forms__ = ($__forms__ = require("npm:angular2@2.0.0-alpha.24/forms"), $__forms__ && $__forms__.__esModule && $__forms__ || {default: $__forms__});
  var $__di__ = ($__di__ = require("npm:angular2@2.0.0-alpha.24/di"), $__di__ && $__di__.__esModule && $__di__ || {default: $__di__});
  var $__angular2_47_src_47_facade_47_async__ = ($__angular2_47_src_47_facade_47_async__ = require("npm:angular2@2.0.0-alpha.24/src/facade/async"), $__angular2_47_src_47_facade_47_async__ && $__angular2_47_src_47_facade_47_async__.__esModule && $__angular2_47_src_47_facade_47_async__ || {default: $__angular2_47_src_47_facade_47_async__});
  var $__angular2_47_src_47_render_47_api__ = ($__angular2_47_src_47_render_47_api__ = require("npm:angular2@2.0.0-alpha.24/src/render/api"), $__angular2_47_src_47_render_47_api__ && $__angular2_47_src_47_render_47_api__.__esModule && $__angular2_47_src_47_render_47_api__ || {default: $__angular2_47_src_47_render_47_api__});
  var $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ = ($__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ = require("npm:angular2@2.0.0-alpha.24/src/render/dom/dom_renderer"), $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ && $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__.__esModule && $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__ || {default: $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__});
  module.exports = $traceurRuntime.exportStar({
    get Observable() {
      return $__angular2_47_src_47_facade_47_async__.Observable;
    },
    get EventEmitter() {
      return $__angular2_47_src_47_facade_47_async__.EventEmitter;
    },
    get DomRenderer() {
      return $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__.DomRenderer;
    },
    get DOCUMENT_TOKEN() {
      return $__angular2_47_src_47_render_47_dom_47_dom_95_renderer__.DOCUMENT_TOKEN;
    },
    __esModule: true
  }, $__change_95_detection__, $__core__, $__annotations__, $__directives__, $__forms__, $__di__, $__angular2_47_src_47_render_47_api__);
  global.define = __define;
  return module.exports;
});

System.register("app/index", ["npm:angular2@2.0.0-alpha.24/src/dom/browser_adapter", "npm:angular2@2.0.0-alpha.24/angular2"], function($__export) {
  "use strict";
  var __moduleName = "app/index";
  var BrowserDomAdapter,
      bootstrap,
      Component,
      View,
      App;
  function main() {
    return bootstrap(App);
  }
  $__export("main", main);
  return {
    setters: [function($__m) {
      BrowserDomAdapter = $__m.BrowserDomAdapter;
    }, function($__m) {
      bootstrap = $__m.bootstrap;
      Component = $__m.Component;
      View = $__m.View;
    }],
    execute: function() {
      BrowserDomAdapter.makeCurrent();
      App = (function() {
        function App() {
          console.log('wat');
        }
        return ($traceurRuntime.createClass)(App, {}, {});
      }());
      Object.defineProperty(App, "annotations", {get: function() {
          return [new Component({selector: 'my-app'}), new View({template: "<h1>Hello</h1>"})];
        }});
      ;
    }
  };
});

//# sourceMappingURL=build.js.map